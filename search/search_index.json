{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 I\u2019m currently working on: \u00b6 Final project Welcome to my Fab Academy website \u00b6 Download code You can check my bio here My portfolio My CV","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#im-currently-working-on","text":"Final project","title":"I'm currently working on:"},{"location":"#welcome-to-my-fab-academy-website","text":"Download code You can check my bio here My portfolio My CV","title":"Welcome to my Fab Academy website"},{"location":"Tips/documentation_tips/","text":"Advice for a succesfull documentation process: \u00b6 Working in a FabLab is not an easy task, as much as I like to learn, I can\u2019t learn everything, and my ambitions not always reach my outcome in work and documentation. So for this week I\u2019ve made this list of recommendations to get easily into the documentation process, to help me out to have a structure, and with the hope to help others struggling in similar conditions. Think ahead of time : Take notes during Neil\u2019s global lecture, and try to make a script for your documentation based on this content, (and your local FabLab workshops) define the titles and sub-titles of your notes. Take sequential notes by hand : I\u2019m using a small notebook to take notes quickly and help me out to describe my ongoing work. Make a final comprehensive list of the stuff you have made : At the end of the day. DAILY . Take the time to summarize all the things in a list. Draw sketches in your notes : There are some ideas that can get captured quickly as a sketch rather than words. Make a note for photos or videos of something happening, like \u201cit will be cool to have a photo of this.\u201d First accomplish the lowest minimum requirement , small and quick stuff, then jump to the ambitious version, or your final project. In this process you\u2019ll learn but at a lower cost in time, energy and materials. Always keep an eye in your final project documentation , update your new findings constantly. Dedicate a daily time to write the content of your site. Ask your FabManager for concise workshops , don\u2019t expend a day on improvised workshops without using the machines, although the understanding of the risk of operating every machine it\u2019s critical. Talk to your FabManager , ask him as much as possible, but try to not be trivial, it doesn\u2019t matter how grumpy it\u2019s him/her, they have more experience in the matter. Accomplish your documentation for Monday , make a review on Tuesday, improve based in the feedback and new ideas, be prepared for Wednesday. Make just one directory for all the files and stuff of the week . \u201cweek07\u201d make two folders inside, \u201craw\u201d and \u201cfinal\u201d, first place everything under \u201craw\u201d and in the image compression process and stuff place all in final, then copy the final content into the \u201cimages\u201d, or \u201cfiles\u201d folder of your repository. Use a nomenclature for the files , like this \u201cfdm_01.jpg\u201d, \u201csla_03.jpg\u201d, \u201coutcome_01.jpg\u201d, \u201chero_02.jpg\u201d Be humble to receive feedback and improve , but don\u2019t give up! Work as a team with your fellows in the FabAcademy . Ask everyone how are they doing, help and receive help! That\u2019s something we\u2019ve made since the begining with Theo and Elina . Take a look at our work assignments. If you\u2019re in a foreign country and you don\u2019t speak the official language ask your instructors and fellows to speak in a common language, on this year and this case it\u2019s on English, but also take on consideration to learn a new language while in the FabAcademy, don\u2019t be ashamed to ask \u201cWhat does this mean?\u201d or \u201cHow do I say this on French, etc. ?\u201d and more importantly it may be easier for the instructors to explain everything in their native language, so if this is the case, ask to someone to assist you in the translation of the most important things. Learn by doing/making and have fun.","title":"Advice for a succesfull documentation process:"},{"location":"Tips/documentation_tips/#advice-for-a-succesfull-documentation-process","text":"Working in a FabLab is not an easy task, as much as I like to learn, I can\u2019t learn everything, and my ambitions not always reach my outcome in work and documentation. So for this week I\u2019ve made this list of recommendations to get easily into the documentation process, to help me out to have a structure, and with the hope to help others struggling in similar conditions. Think ahead of time : Take notes during Neil\u2019s global lecture, and try to make a script for your documentation based on this content, (and your local FabLab workshops) define the titles and sub-titles of your notes. Take sequential notes by hand : I\u2019m using a small notebook to take notes quickly and help me out to describe my ongoing work. Make a final comprehensive list of the stuff you have made : At the end of the day. DAILY . Take the time to summarize all the things in a list. Draw sketches in your notes : There are some ideas that can get captured quickly as a sketch rather than words. Make a note for photos or videos of something happening, like \u201cit will be cool to have a photo of this.\u201d First accomplish the lowest minimum requirement , small and quick stuff, then jump to the ambitious version, or your final project. In this process you\u2019ll learn but at a lower cost in time, energy and materials. Always keep an eye in your final project documentation , update your new findings constantly. Dedicate a daily time to write the content of your site. Ask your FabManager for concise workshops , don\u2019t expend a day on improvised workshops without using the machines, although the understanding of the risk of operating every machine it\u2019s critical. Talk to your FabManager , ask him as much as possible, but try to not be trivial, it doesn\u2019t matter how grumpy it\u2019s him/her, they have more experience in the matter. Accomplish your documentation for Monday , make a review on Tuesday, improve based in the feedback and new ideas, be prepared for Wednesday. Make just one directory for all the files and stuff of the week . \u201cweek07\u201d make two folders inside, \u201craw\u201d and \u201cfinal\u201d, first place everything under \u201craw\u201d and in the image compression process and stuff place all in final, then copy the final content into the \u201cimages\u201d, or \u201cfiles\u201d folder of your repository. Use a nomenclature for the files , like this \u201cfdm_01.jpg\u201d, \u201csla_03.jpg\u201d, \u201coutcome_01.jpg\u201d, \u201chero_02.jpg\u201d Be humble to receive feedback and improve , but don\u2019t give up! Work as a team with your fellows in the FabAcademy . Ask everyone how are they doing, help and receive help! That\u2019s something we\u2019ve made since the begining with Theo and Elina . Take a look at our work assignments. If you\u2019re in a foreign country and you don\u2019t speak the official language ask your instructors and fellows to speak in a common language, on this year and this case it\u2019s on English, but also take on consideration to learn a new language while in the FabAcademy, don\u2019t be ashamed to ask \u201cWhat does this mean?\u201d or \u201cHow do I say this on French, etc. ?\u201d and more importantly it may be easier for the instructors to explain everything in their native language, so if this is the case, ask to someone to assist you in the translation of the most important things. Learn by doing/making and have fun.","title":"Advice for a succesfull documentation process:"},{"location":"about/","text":"About me \u00b6 Hi! I\u2019m Antonio from Mexico, currently studying the FabAcademy program in France. My plan is to become a product developer specialized in agriculture. I\u2019ve choose to study the program in France because of AgriLab which is a agriculture specialized FabLab, so I got in contact with Luc Hanneuse the FabManager of AgriLab and He assisted me through all the Fab Academy admission process, then I\u2019ve also been granted a scholarship from the Fab Foundation and ran a fund-raising campaign to help me with some expenses. I\u2019ve been participating in agriculture and education related projects in Mexico, and I\u2019ve been living in some difficult or isolated areas so I\u2019ve a deep understanding of some of the many needs people have in these areas. AgriLab offers three things together that help to reduce the expenses of some of the development process that I\u2019m interested. The experimental farm is aside the FabLab and an Agriculture specialized institute. While in Mexico, I\u2019ll normally have to travel to a different location, that usually takes a few days. The other issue is related to advising, it\u2019s really difficult to find an adviser interested in agri-tech and product related projects that works in the field. You can find my portfolio here. My background \u00b6 I started my professional career as a CAD/CAM technician in the plastics manufacturing industry in 2007 while studying aeronautical engineering. In 2014, I changed to developing control systems for greenhouses in southern Mexico as freelancer, and I got accepted to my first MIT program, the Global Startup Labs Bootcamp in 2015. I learned human-center design, and I\u2019ve explored since then technology transference for agriculture. I\u2019ve acquired skills in rapid prototyping while studying in Product design innovation programs and collaborating with international initiatives of the MIT in Mexico. I\u2019ve been also a teacher for Jacaranda Education and the Access Education program of the U.S. Embassy in Mexico. I\u2019ve volunteered to mentor technology-based social initiatives, government institutions, universities, and foreign organizations working in Mexico promoting education and gender equality for indigenous populations. I\u2019ve been a Linux user and evangelist since 2006, for the Ubuntu, Debian and Fedora distributions. In 2020, I was part of the Hackaday Prize 2020 Dream teams . Where I worked to help Field Ready an international NFP Organization to develop a remote quality control system for humanitarian aid products, that are made mostly in FabLabs in countries were disaster relief is very important. So, when someone asks me what do I do for a living, I say, I\u2019m a product developer at the convergence between hacking, design, and the pyramid base economy. Work on the Open Quality control standard document \u00b6 The main purpose of this project is to provide a quick and reliable traceability system for products made in Fab Labs, taking in consideration risk, supply chain, and tracking the: human-machine-material data of any product.","title":"About me"},{"location":"about/#about-me","text":"Hi! I\u2019m Antonio from Mexico, currently studying the FabAcademy program in France. My plan is to become a product developer specialized in agriculture. I\u2019ve choose to study the program in France because of AgriLab which is a agriculture specialized FabLab, so I got in contact with Luc Hanneuse the FabManager of AgriLab and He assisted me through all the Fab Academy admission process, then I\u2019ve also been granted a scholarship from the Fab Foundation and ran a fund-raising campaign to help me with some expenses. I\u2019ve been participating in agriculture and education related projects in Mexico, and I\u2019ve been living in some difficult or isolated areas so I\u2019ve a deep understanding of some of the many needs people have in these areas. AgriLab offers three things together that help to reduce the expenses of some of the development process that I\u2019m interested. The experimental farm is aside the FabLab and an Agriculture specialized institute. While in Mexico, I\u2019ll normally have to travel to a different location, that usually takes a few days. The other issue is related to advising, it\u2019s really difficult to find an adviser interested in agri-tech and product related projects that works in the field. You can find my portfolio here.","title":"About me"},{"location":"about/#my-background","text":"I started my professional career as a CAD/CAM technician in the plastics manufacturing industry in 2007 while studying aeronautical engineering. In 2014, I changed to developing control systems for greenhouses in southern Mexico as freelancer, and I got accepted to my first MIT program, the Global Startup Labs Bootcamp in 2015. I learned human-center design, and I\u2019ve explored since then technology transference for agriculture. I\u2019ve acquired skills in rapid prototyping while studying in Product design innovation programs and collaborating with international initiatives of the MIT in Mexico. I\u2019ve been also a teacher for Jacaranda Education and the Access Education program of the U.S. Embassy in Mexico. I\u2019ve volunteered to mentor technology-based social initiatives, government institutions, universities, and foreign organizations working in Mexico promoting education and gender equality for indigenous populations. I\u2019ve been a Linux user and evangelist since 2006, for the Ubuntu, Debian and Fedora distributions. In 2020, I was part of the Hackaday Prize 2020 Dream teams . Where I worked to help Field Ready an international NFP Organization to develop a remote quality control system for humanitarian aid products, that are made mostly in FabLabs in countries were disaster relief is very important. So, when someone asks me what do I do for a living, I say, I\u2019m a product developer at the convergence between hacking, design, and the pyramid base economy.","title":"My background"},{"location":"about/#work-on-the-open-quality-control-standard-document","text":"The main purpose of this project is to provide a quick and reliable traceability system for products made in Fab Labs, taking in consideration risk, supply chain, and tracking the: human-machine-material data of any product.","title":"Work on the Open Quality control standard document"},{"location":"about/agreement/","text":"Student Agreement \u00b6 This page is a placeholder. **Fab Academy Student Agreement** *The Fab Academy is responsible for:* - Teaching principles and practices of digital fabrication - Arranging lectures, recitations, meetings, and events for the class - Evaluating and providing feedback on student work - Offering clear standards for completing assignments - Certifying and archiving student progress - Supervising class preparation - Reviewing prospective students, instructors, and labs - Providing central staff and infrastructure for students, instructors, and labs - Fund-raising for costs not covered by student tuition - Managing and reporting on the program's finances, results, and impacts - Publicizing the program - Promoting a respectful environment free of harassment and discrimination *I am a Fab Academy student, responsible for:* - Attending class lectures and participating in reviews - Developing and documenting projects assigned to introduce and demonstrate skills - Honestly reporting on my work, and appropriately attributing the work of others - Working safely - Leaving workspaces in the same (or better) condition than I found them - Participating in the upkeep of my lab - Ensuring that my tuition to cover local and central class costs is covered - Following locally applicable health and safety guidance - Promoting a respectful environment free of harassment and discrimination Signed by committing this file in my repository, Antonio de Jesus Anaya Hernandez","title":"Student Agreement"},{"location":"about/agreement/#student-agreement","text":"This page is a placeholder. **Fab Academy Student Agreement** *The Fab Academy is responsible for:* - Teaching principles and practices of digital fabrication - Arranging lectures, recitations, meetings, and events for the class - Evaluating and providing feedback on student work - Offering clear standards for completing assignments - Certifying and archiving student progress - Supervising class preparation - Reviewing prospective students, instructors, and labs - Providing central staff and infrastructure for students, instructors, and labs - Fund-raising for costs not covered by student tuition - Managing and reporting on the program's finances, results, and impacts - Publicizing the program - Promoting a respectful environment free of harassment and discrimination *I am a Fab Academy student, responsible for:* - Attending class lectures and participating in reviews - Developing and documenting projects assigned to introduce and demonstrate skills - Honestly reporting on my work, and appropriately attributing the work of others - Working safely - Leaving workspaces in the same (or better) condition than I found them - Participating in the upkeep of my lab - Ensuring that my tuition to cover local and central class costs is covered - Following locally applicable health and safety guidance - Promoting a respectful environment free of harassment and discrimination Signed by committing this file in my repository, Antonio de Jesus Anaya Hernandez","title":"Student Agreement"},{"location":"assignments/week01/","text":"1. Principles and practices. \u00b6 Context \u00b6 You can find information about my project here. I\u2019ve read the fab charter and signed the student agreement. Why? \u00b6 Currently RFID is the preferred technology for farm animals identification, in Mexico this is something that has been unsuccessfully deployed due to multiple factors, but the most important one is supply chain and distribution. RFID stands for Radio Frequency Identification , in animal identification it can be found as a earring, a collar or skin implant. In Mexico the standard RFID earring is imported and then distributed, making it not accessible to small producers in rural areas, and they are the bast majority of producers making almost 60% of the country total production. Worldwide we can find the same situation in underdeveloped countries. Idea \u00b6 My idea is to design a RFID system that can be made on FabLabs and also an Milk Quality control sensor to measure protein/fat content and also somatic cells. Somatic cells are present as part of animals immune system, and some diseases can be prevented by counting somatic cells in the dairy production. Objectives \u00b6 First objective is to promote, sustainable farms that makes decisions based on data captured in the working field, to make a better use of natural resources and also all sort of different supplies. The indiscriminate use of hormones and antibiotics in animals is a problem that affects current disease control systems, producers financial viability and the consumer. The second objective is to identify diseases while in the dairy production and apply the antibiotics on the affected animal. Currently most farmers apply vaccines periodically without any analysis and this makes vaccination an expensive activity that most producers avoid because of their current financial status. About Spectroscopy \u00b6 For measuring fat/protein in milk I\u2019ve found spectroscopy as a viable solution. Currently they\u2019re cheaper CHIPS like the AS7265x that can be used to classify previously measured fat/protein samples of milk based in their measured spectrum. So one of the steps in this development will be to measure a variety of milk samples using the AS7265x and a laboratory standard spectrometer to correlate the results. About UxD \u00b6 The other important aspect I\u2019m considering for this project is the interaction design. User-centered design for agriculture is an important topic, since most tools need an specialized trained professional to be used. In some places this will not be a problem, but in Mexico, in my region the technicians/animals is 3000 animals for each technician. Project management table \u00b6 week01 week02 week03 week04 week05 General and user research Proposals, Hardware, Software, Interaction Video demo First prototype, workbench test, feedback and rework Second prototype, Workbench test, field test, feedback and rework A comparison of current methods in Mexico and a Experimental farm in France: \u00b6 This is the Farm in UniLaSalle Beauvais. https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/en/ increase visitors in your website Project description: \u00b6 Challenge: To develop an affordable device for cow milk production measurement and quality checking. Characteristics: Supply-chain reduced components. Food-safe components for the parts in contact with the milk. Adaptable to different countries and their local regulations or tech level. Functions: Read RFID current existing earrings Meassure automatically ammount of milk produced for each animal on a production. Meassure a sample for milk quality control. Parts: 4 Milk flow meter on for each cow\u2019s udder. RFID earring reader. Spectral sensor for substance identification Dielectric spectroscopy sensor. User: Field veterinary technicians. Dairy production managers. Researchers. Quality control technicians. Sketches \u00b6 Hall effect circuit board sketch: Pipe milk conduct to fluid sensor connector: Flow sensor sketch 01: Flow sensor sketch 02: Microfluids sketch: Electrode design sketch: Tests \u00b6 Testing SLA 3D printing, I would like to cast this pieces in food-safe silicone. This is my first attempt to make a circuit board with a hall effect sensor that I\u2019ll use later for the flow sensor. This is a test of the ISO11784 RFID module that will be used to read Cow earrings.","title":"1. Principles and practices."},{"location":"assignments/week01/#1-principles-and-practices","text":"","title":"1. Principles and practices."},{"location":"assignments/week01/#context","text":"You can find information about my project here. I\u2019ve read the fab charter and signed the student agreement.","title":"Context"},{"location":"assignments/week01/#why","text":"Currently RFID is the preferred technology for farm animals identification, in Mexico this is something that has been unsuccessfully deployed due to multiple factors, but the most important one is supply chain and distribution. RFID stands for Radio Frequency Identification , in animal identification it can be found as a earring, a collar or skin implant. In Mexico the standard RFID earring is imported and then distributed, making it not accessible to small producers in rural areas, and they are the bast majority of producers making almost 60% of the country total production. Worldwide we can find the same situation in underdeveloped countries.","title":"Why?"},{"location":"assignments/week01/#idea","text":"My idea is to design a RFID system that can be made on FabLabs and also an Milk Quality control sensor to measure protein/fat content and also somatic cells. Somatic cells are present as part of animals immune system, and some diseases can be prevented by counting somatic cells in the dairy production.","title":"Idea"},{"location":"assignments/week01/#objectives","text":"First objective is to promote, sustainable farms that makes decisions based on data captured in the working field, to make a better use of natural resources and also all sort of different supplies. The indiscriminate use of hormones and antibiotics in animals is a problem that affects current disease control systems, producers financial viability and the consumer. The second objective is to identify diseases while in the dairy production and apply the antibiotics on the affected animal. Currently most farmers apply vaccines periodically without any analysis and this makes vaccination an expensive activity that most producers avoid because of their current financial status.","title":"Objectives"},{"location":"assignments/week01/#about-spectroscopy","text":"For measuring fat/protein in milk I\u2019ve found spectroscopy as a viable solution. Currently they\u2019re cheaper CHIPS like the AS7265x that can be used to classify previously measured fat/protein samples of milk based in their measured spectrum. So one of the steps in this development will be to measure a variety of milk samples using the AS7265x and a laboratory standard spectrometer to correlate the results.","title":"About Spectroscopy"},{"location":"assignments/week01/#about-uxd","text":"The other important aspect I\u2019m considering for this project is the interaction design. User-centered design for agriculture is an important topic, since most tools need an specialized trained professional to be used. In some places this will not be a problem, but in Mexico, in my region the technicians/animals is 3000 animals for each technician.","title":"About UxD"},{"location":"assignments/week01/#project-management-table","text":"week01 week02 week03 week04 week05 General and user research Proposals, Hardware, Software, Interaction Video demo First prototype, workbench test, feedback and rework Second prototype, Workbench test, field test, feedback and rework","title":"Project management table"},{"location":"assignments/week01/#a-comparison-of-current-methods-in-mexico-and-a-experimental-farm-in-france","text":"This is the Farm in UniLaSalle Beauvais. https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/en/ increase visitors in your website","title":"A comparison of current methods in Mexico and a Experimental farm in France:"},{"location":"assignments/week01/#project-description","text":"Challenge: To develop an affordable device for cow milk production measurement and quality checking. Characteristics: Supply-chain reduced components. Food-safe components for the parts in contact with the milk. Adaptable to different countries and their local regulations or tech level. Functions: Read RFID current existing earrings Meassure automatically ammount of milk produced for each animal on a production. Meassure a sample for milk quality control. Parts: 4 Milk flow meter on for each cow\u2019s udder. RFID earring reader. Spectral sensor for substance identification Dielectric spectroscopy sensor. User: Field veterinary technicians. Dairy production managers. Researchers. Quality control technicians.","title":"Project description:"},{"location":"assignments/week01/#sketches","text":"Hall effect circuit board sketch: Pipe milk conduct to fluid sensor connector: Flow sensor sketch 01: Flow sensor sketch 02: Microfluids sketch: Electrode design sketch:","title":"Sketches"},{"location":"assignments/week01/#tests","text":"Testing SLA 3D printing, I would like to cast this pieces in food-safe silicone. This is my first attempt to make a circuit board with a hall effect sensor that I\u2019ll use later for the flow sensor. This is a test of the ISO11784 RFID module that will be used to read Cow earrings.","title":"Tests"},{"location":"assignments/week02/","text":"2. Project management \u00b6 For this week our assignments are to make a GIT tutorial following the quick review we had on Wednesday and define a final project. The final project is where, we individually or cooperatively apply our learned skills during the Fab-Academy. About my final project \u00b6 You can find information about my project here. Git tutorial \u00b6 I\u2019m right now using Linux Fedora 33 as main OS. Based on my research over the work of students on previous years I\u2019ve found that showing terminal sessions has been something that a lot had struggle with. For this reason I\u2019d like to share ASCIINEMA and I hope that anyone looking at this founds this tutorial useful. Then I\u2019d like to show how I\u2019m using GIT and GitLab to manage my repository and for that my entire project. Finally, I\u2019ve found also that having a defined nomenclature or norm while writing commits is really useful for project management and maintenance. Setting up: \u00b6 I\u2019m a big fan of the Python Conda distribution , having a separated environment for each project keeps everything clean and easy on the system, so first: Install Python Conda distribution, intructions following this link. Conda is an environment manager for a variety of scientific languages and toolkits including Python. To create a Python evironment for your fab academy repository: conda create -n fabacademy To access this environment: conda activate fabacademy To deactivate and use the \u201cbase\u201d environment: conda deactivate The next steps are related to asciinema to share a terminal session but beautifully: (the conda environment should be activated already to keep everything in order) Asciinema is a platform for beautifully sharing of terminal sessions. Under Linux to install Asciinema I\u2019m using Conda, and Python\u2019s PIP a package manager for the Python ecosystem. pip install asciinema Once asciinema is installed, you can start recording terminal sessions, to exit and finish the recording just write down \u201cexit\u201d asciinema rec -t \"fabacademy first assignment\" Asciinema example \u00b6 About Git: \u00b6 Git is a Version Control Software, this means you can save different states of a repository, get back to one of those states with the purpose of recovering from a bug, a crash a change of style while writing the code, change of paradigm or approach, these are things that happen while developing software. We as students from the Fab Academy started with a boilerplate bootstrapped repository with a basic information architecture and Continuous Integration that renders the changes on our Markdown code to an Online Static Generated site. But if you need a new repository managed with Git you just need to execute this on your terminal: git init I\u2019ve made a recording showing the process of creating a directory, initiating a git repository, creating an empty file, add files to the git registry, committing changes and trying to push. Since I don\u2019t have a remote repository it gave me a error. Which means I\u2019d need to add a remote location on the following steps. Cloning our Fab Academy repository: \u00b6 The process of cloning a repository is just to create a new instance or copy of our MASTER repository in GitLab, this has the purpose to avoid making changes every time online and instead work on our local instance or copy and then synchronize the changes to the online repository, and this is the whole purpose of Git, to manage changes simultaneously that happen when working collectively on big software projects. You can add a SSH key to GitLab\u2019s repository configuration or you can just make use of the http request logging system. Setup SSH key \u00b6 During our Bootcamp we had the time to learn how to setup a SSH key on our systems and then copy the resulting string to the GitLab configuration to allow SSH cloning for ourselves. ssh-keygen -t rsa -b 4096 -C \"replace_with_@your_email.com\" After generating the key and saving it on a file, we proceed to copy the content of it it to our GitLab add SSH key input, we just need to be careful to not add any space or any other content to it. Follow this tutorial from GitLab for detailed instructions. After this is setup You\u2019ll be able to execute successfully the next command: git clone git@gitlab.fabcloud.org:your/project/path.git Or using the http clonning approach: git clone your_repository_url_on_fabcloud.git Gitlab configuration \u00b6 Open your fabcloud gitlab profile in my case and at this current time the URL is https://gitlab.fabcloud.org/-/profile Then Open the preferences tab in the top right menu: Under the User settings menu click on \u201cSSH Keys\u201d Copy and paste the generated SSH-key into the Key field, add a title and an expritarion date. Click on \u201c Add key \u201c Serve mkdocs locally: \u00b6 Mkdocs is the current Markdown to site generator, and the default choice for the Fab Academy boostrap site, for developing purposes it\u2019s better to serve the repository locally before pushing to production or MASTER branch in the actual online Gitlab repository. To install mkdocs we need also need two package dependencies: pip install mkdocs mkdocs-material git-revision-date-localized After those dependencies are installed we can render the Markdown files to html using, on terminal you need to access the directory where the mkdocs.yml, it means we need to access to our repository, in every system we can do it by using the \u201ccd\u201d command like this: cd repository_name To list all files inside the current location (Linux): ls -ls Then: mkdocs build I\u2019d like to use Python\u2019s http server module instead of the default mkdoc serve, so on a second terminal or using TMUX and accessing the repository as we did before: python -m http.server And by default the page will be served at http://localhost:8000, and every time we make a change at the site we need to execute mkdocs build as we did before. Adding a .gitignore file to avoid large MB commits to GitLab remote repository: \u00b6 This is very important I\u2019ve just realized my mistake and had to revert my commits to avoid pushing to many MB\u2019s to the server: To preserve the changes to my Week01 Markdown file I\u2019ve just copy the content to a temporary file and then: To delete the last two commits from my git repository: git reset --hard HEAD~2 After this I\u2019ve create a .gitignore file: touch .gitignore An then copied the content of this file I\u2019ve found online into my .gitignore file. Text editor: \u00b6 I\u2019m using Typora editor as I find it simple and aesthetic for Markdown editing. The work-flow is just to edit the files as Markdown , execute mkdocs and commit the changes on git. Over the weeks I\u2019ve been working using Atom and Vim Install atom and vim sudo dnf install atom vim Adding content to Gitlab repository: \u00b6 Discard local changes git stash Download the latest content from a remote instance of the repository by default \u201cGitlab fabacademy\u201d git pull Add all changes in repository to buffer git add . Add all changes in buffer and commit with a descriptive message git commit -m \"week01, added images, archives, etc.\" Push current commits to remote repository \u201cGitlab Fabacademy by default\u201d git push Delete file from git history git filter-branch -f --prune-empty --index-filter \"git rm -r --cached --ignore-unmatch ./file1\" HEAD Video and image processing \u00b6 Install requirements for Fedora Linux sudo dnf install ffmpeg mogrify jpegoptim GraphicsMagick simplescreenrecorder Video \u00b6 Video compression it\u2019s something crucial for the success of a less than 10MB commit and preserve a good repository size on the fabcloud gitlab service. I\u2019ve used this commands multiple times across my assignments. The examples depend on your screen color configuration and its very subjective. But you can use this examples to have an idea on how to use this commands to have clear and concise videos on your documentation. FULL HD video compression with 32k audio ffmpeg -i demo_01.mp4 -codec:a libmp3lame -b:a 32k -b:v 1400k demo_01_1400_c.mp4 Video compression 100k bitrate without audio ffmpeg -i demo_01.mp4 -an -bv 100k demo_01_c.mp4 Video cut from second 3 to second 30 ffmpeg -i demo_01.mp4 -ss 00:00:03.0 -t 00:00:30.0 demo_01_cut.mp4 Cut a square 480p video from 720x480p ffmpeg -i demo_01.mp4 -vf \"crop=iw-160\" -b:v 300k demo_01_square.mp4 Enhance video color brightness 0.06, saturation 2. ffmpeg -i demo_01.mp4 -vf eq=brightness=0.06:saturation=2 -c:a copy demo_01_b0_06_s2.mp4 Video Examples \u00b6 Video 720p 1000k bitrate ffmpeg -i input.mp4 -vf scale=-1:720 -b:v 1000k output.mp4 Video 720p 500k bitrate ffmpeg -i input.mp4 -vf scale=-1:720 -b:v 500k output.mp4 Video 720p 500k bitrate squared ffmpeg -i input.mp4 -vf \"crop=iw-480\" output.mp4 Video 720p 1000k bitrate squared ffmpeg -i input.mp4 -vf \"crop=iw-480\" output.mp4 Video 720 1000k bitrate squared brightness 0.06 and saturation 2 Image processing \u00b6 I\u2019ve used this commands to standardize my images on the documentation, the values are examples, and the values are subjective. The objective is to have a clear and meaningful image that describes a process and contains valuable information on it. As the weeks have passed I\u2019ve been improving this process of image compression and this commands are part of my process. I\u2019ve preserved the size range between 750 and 800 pixels in photos, but in screen captures it depends on the size of the area captured. cut image to 750x750 pixels centered convert -define jpeg:size=750x750 input.jpg -gravity center -extent 750x750 output.jpg Compress image quality jpegoptim --size=80k arduino_07.jpg Scale image to 800 pixels mogrify -resize 800x arduino_07.jpg Convert from PNG to jpg mogrify -format jpg arduino_07.PNG Image examples \u00b6 Input image Scaled to 800px Width and keeping same aspect ratio. mogrify -resize 800x input.jpg Scaled to 400px Width and keeping same aspect ratio. mogrify -resize 400x input.jpg Scaled to 200px Width and keeping same aspect ratio. mogrify -resize 200x input.jpg Scaled to 100px Width and keeping same aspect ratio. mogrify -resize 100x input.jpg I\u2019ve chose 800px as size base. But the image size is 251.8 Kb, to optimize its size I\u2019ll use a compression command. 800px image optimized to 150k jpegoptim --size=150k 800.jpg 800px image optimized to 100k jpegoptim --size=100k 800.jpg 800px image optimized to 50k jpegoptim --size=50k 800.jpg 800px image optimized to 40k jpegoptim --size=40k 800.jpg 800px image optimized to 30k jpegoptim --size=30k 800.jpg I\u2019d like to make my image squared and try different compression sizes to select the best one based in quality of the image. 800px input image squared convert -define jpeg:size=750x750 800.jpg -gravity center -extent 750x750 sq_800.jpg 800px 150k image squared convert -define jpeg:size=750x750 800_150k.jpg -gravity center -extent 750x750 sq_800_150k.jpg 800px 50k image squared convert -define jpeg:size=750x750 800_50k.jpg -gravity center -extent 750x750 sq_800_50k.jpg Video recording of desktop using simple screen recorder \u00b6 Capture screen with ffmpeg ffmpeg -f x11grab -y -r 30 -s 1920x1080 -i :0.0 -vcodec huffyuv out.avi","title":"\t2. Project management"},{"location":"assignments/week02/#2-project-management","text":"For this week our assignments are to make a GIT tutorial following the quick review we had on Wednesday and define a final project. The final project is where, we individually or cooperatively apply our learned skills during the Fab-Academy.","title":"2. Project management"},{"location":"assignments/week02/#about-my-final-project","text":"You can find information about my project here.","title":"About my final project"},{"location":"assignments/week02/#git-tutorial","text":"I\u2019m right now using Linux Fedora 33 as main OS. Based on my research over the work of students on previous years I\u2019ve found that showing terminal sessions has been something that a lot had struggle with. For this reason I\u2019d like to share ASCIINEMA and I hope that anyone looking at this founds this tutorial useful. Then I\u2019d like to show how I\u2019m using GIT and GitLab to manage my repository and for that my entire project. Finally, I\u2019ve found also that having a defined nomenclature or norm while writing commits is really useful for project management and maintenance.","title":"Git tutorial"},{"location":"assignments/week02/#setting-up","text":"I\u2019m a big fan of the Python Conda distribution , having a separated environment for each project keeps everything clean and easy on the system, so first: Install Python Conda distribution, intructions following this link. Conda is an environment manager for a variety of scientific languages and toolkits including Python. To create a Python evironment for your fab academy repository: conda create -n fabacademy To access this environment: conda activate fabacademy To deactivate and use the \u201cbase\u201d environment: conda deactivate The next steps are related to asciinema to share a terminal session but beautifully: (the conda environment should be activated already to keep everything in order) Asciinema is a platform for beautifully sharing of terminal sessions. Under Linux to install Asciinema I\u2019m using Conda, and Python\u2019s PIP a package manager for the Python ecosystem. pip install asciinema Once asciinema is installed, you can start recording terminal sessions, to exit and finish the recording just write down \u201cexit\u201d asciinema rec -t \"fabacademy first assignment\"","title":"Setting up:"},{"location":"assignments/week02/#asciinema-example","text":"","title":"Asciinema example"},{"location":"assignments/week02/#about-git","text":"Git is a Version Control Software, this means you can save different states of a repository, get back to one of those states with the purpose of recovering from a bug, a crash a change of style while writing the code, change of paradigm or approach, these are things that happen while developing software. We as students from the Fab Academy started with a boilerplate bootstrapped repository with a basic information architecture and Continuous Integration that renders the changes on our Markdown code to an Online Static Generated site. But if you need a new repository managed with Git you just need to execute this on your terminal: git init I\u2019ve made a recording showing the process of creating a directory, initiating a git repository, creating an empty file, add files to the git registry, committing changes and trying to push. Since I don\u2019t have a remote repository it gave me a error. Which means I\u2019d need to add a remote location on the following steps.","title":"About Git:"},{"location":"assignments/week02/#cloning-our-fab-academy-repository","text":"The process of cloning a repository is just to create a new instance or copy of our MASTER repository in GitLab, this has the purpose to avoid making changes every time online and instead work on our local instance or copy and then synchronize the changes to the online repository, and this is the whole purpose of Git, to manage changes simultaneously that happen when working collectively on big software projects. You can add a SSH key to GitLab\u2019s repository configuration or you can just make use of the http request logging system.","title":"Cloning our Fab Academy repository:"},{"location":"assignments/week02/#setup-ssh-key","text":"During our Bootcamp we had the time to learn how to setup a SSH key on our systems and then copy the resulting string to the GitLab configuration to allow SSH cloning for ourselves. ssh-keygen -t rsa -b 4096 -C \"replace_with_@your_email.com\" After generating the key and saving it on a file, we proceed to copy the content of it it to our GitLab add SSH key input, we just need to be careful to not add any space or any other content to it. Follow this tutorial from GitLab for detailed instructions. After this is setup You\u2019ll be able to execute successfully the next command: git clone git@gitlab.fabcloud.org:your/project/path.git Or using the http clonning approach: git clone your_repository_url_on_fabcloud.git","title":"Setup SSH key"},{"location":"assignments/week02/#gitlab-configuration","text":"Open your fabcloud gitlab profile in my case and at this current time the URL is https://gitlab.fabcloud.org/-/profile Then Open the preferences tab in the top right menu: Under the User settings menu click on \u201cSSH Keys\u201d Copy and paste the generated SSH-key into the Key field, add a title and an expritarion date. Click on \u201c Add key \u201c","title":"Gitlab configuration"},{"location":"assignments/week02/#serve-mkdocs-locally","text":"Mkdocs is the current Markdown to site generator, and the default choice for the Fab Academy boostrap site, for developing purposes it\u2019s better to serve the repository locally before pushing to production or MASTER branch in the actual online Gitlab repository. To install mkdocs we need also need two package dependencies: pip install mkdocs mkdocs-material git-revision-date-localized After those dependencies are installed we can render the Markdown files to html using, on terminal you need to access the directory where the mkdocs.yml, it means we need to access to our repository, in every system we can do it by using the \u201ccd\u201d command like this: cd repository_name To list all files inside the current location (Linux): ls -ls Then: mkdocs build I\u2019d like to use Python\u2019s http server module instead of the default mkdoc serve, so on a second terminal or using TMUX and accessing the repository as we did before: python -m http.server And by default the page will be served at http://localhost:8000, and every time we make a change at the site we need to execute mkdocs build as we did before.","title":"Serve mkdocs locally:"},{"location":"assignments/week02/#adding-a-gitignore-file-to-avoid-large-mb-commits-to-gitlab-remote-repository","text":"This is very important I\u2019ve just realized my mistake and had to revert my commits to avoid pushing to many MB\u2019s to the server: To preserve the changes to my Week01 Markdown file I\u2019ve just copy the content to a temporary file and then: To delete the last two commits from my git repository: git reset --hard HEAD~2 After this I\u2019ve create a .gitignore file: touch .gitignore An then copied the content of this file I\u2019ve found online into my .gitignore file.","title":"Adding a .gitignore file to avoid large MB commits to GitLab remote repository:"},{"location":"assignments/week02/#text-editor","text":"I\u2019m using Typora editor as I find it simple and aesthetic for Markdown editing. The work-flow is just to edit the files as Markdown , execute mkdocs and commit the changes on git. Over the weeks I\u2019ve been working using Atom and Vim Install atom and vim sudo dnf install atom vim","title":"Text editor:"},{"location":"assignments/week02/#adding-content-to-gitlab-repository","text":"Discard local changes git stash Download the latest content from a remote instance of the repository by default \u201cGitlab fabacademy\u201d git pull Add all changes in repository to buffer git add . Add all changes in buffer and commit with a descriptive message git commit -m \"week01, added images, archives, etc.\" Push current commits to remote repository \u201cGitlab Fabacademy by default\u201d git push Delete file from git history git filter-branch -f --prune-empty --index-filter \"git rm -r --cached --ignore-unmatch ./file1\" HEAD","title":"Adding content to Gitlab repository:"},{"location":"assignments/week02/#video-and-image-processing","text":"Install requirements for Fedora Linux sudo dnf install ffmpeg mogrify jpegoptim GraphicsMagick simplescreenrecorder","title":"Video and image processing"},{"location":"assignments/week02/#video","text":"Video compression it\u2019s something crucial for the success of a less than 10MB commit and preserve a good repository size on the fabcloud gitlab service. I\u2019ve used this commands multiple times across my assignments. The examples depend on your screen color configuration and its very subjective. But you can use this examples to have an idea on how to use this commands to have clear and concise videos on your documentation. FULL HD video compression with 32k audio ffmpeg -i demo_01.mp4 -codec:a libmp3lame -b:a 32k -b:v 1400k demo_01_1400_c.mp4 Video compression 100k bitrate without audio ffmpeg -i demo_01.mp4 -an -bv 100k demo_01_c.mp4 Video cut from second 3 to second 30 ffmpeg -i demo_01.mp4 -ss 00:00:03.0 -t 00:00:30.0 demo_01_cut.mp4 Cut a square 480p video from 720x480p ffmpeg -i demo_01.mp4 -vf \"crop=iw-160\" -b:v 300k demo_01_square.mp4 Enhance video color brightness 0.06, saturation 2. ffmpeg -i demo_01.mp4 -vf eq=brightness=0.06:saturation=2 -c:a copy demo_01_b0_06_s2.mp4","title":"Video"},{"location":"assignments/week02/#video-examples","text":"Video 720p 1000k bitrate ffmpeg -i input.mp4 -vf scale=-1:720 -b:v 1000k output.mp4 Video 720p 500k bitrate ffmpeg -i input.mp4 -vf scale=-1:720 -b:v 500k output.mp4 Video 720p 500k bitrate squared ffmpeg -i input.mp4 -vf \"crop=iw-480\" output.mp4 Video 720p 1000k bitrate squared ffmpeg -i input.mp4 -vf \"crop=iw-480\" output.mp4 Video 720 1000k bitrate squared brightness 0.06 and saturation 2","title":"Video Examples"},{"location":"assignments/week02/#image-processing","text":"I\u2019ve used this commands to standardize my images on the documentation, the values are examples, and the values are subjective. The objective is to have a clear and meaningful image that describes a process and contains valuable information on it. As the weeks have passed I\u2019ve been improving this process of image compression and this commands are part of my process. I\u2019ve preserved the size range between 750 and 800 pixels in photos, but in screen captures it depends on the size of the area captured. cut image to 750x750 pixels centered convert -define jpeg:size=750x750 input.jpg -gravity center -extent 750x750 output.jpg Compress image quality jpegoptim --size=80k arduino_07.jpg Scale image to 800 pixels mogrify -resize 800x arduino_07.jpg Convert from PNG to jpg mogrify -format jpg arduino_07.PNG","title":"Image processing"},{"location":"assignments/week02/#image-examples","text":"Input image Scaled to 800px Width and keeping same aspect ratio. mogrify -resize 800x input.jpg Scaled to 400px Width and keeping same aspect ratio. mogrify -resize 400x input.jpg Scaled to 200px Width and keeping same aspect ratio. mogrify -resize 200x input.jpg Scaled to 100px Width and keeping same aspect ratio. mogrify -resize 100x input.jpg I\u2019ve chose 800px as size base. But the image size is 251.8 Kb, to optimize its size I\u2019ll use a compression command. 800px image optimized to 150k jpegoptim --size=150k 800.jpg 800px image optimized to 100k jpegoptim --size=100k 800.jpg 800px image optimized to 50k jpegoptim --size=50k 800.jpg 800px image optimized to 40k jpegoptim --size=40k 800.jpg 800px image optimized to 30k jpegoptim --size=30k 800.jpg I\u2019d like to make my image squared and try different compression sizes to select the best one based in quality of the image. 800px input image squared convert -define jpeg:size=750x750 800.jpg -gravity center -extent 750x750 sq_800.jpg 800px 150k image squared convert -define jpeg:size=750x750 800_150k.jpg -gravity center -extent 750x750 sq_800_150k.jpg 800px 50k image squared convert -define jpeg:size=750x750 800_50k.jpg -gravity center -extent 750x750 sq_800_50k.jpg","title":"Image examples"},{"location":"assignments/week02/#video-recording-of-desktop-using-simple-screen-recorder","text":"Capture screen with ffmpeg ffmpeg -f x11grab -y -r 30 -s 1920x1080 -i :0.0 -vcodec huffyuv out.avi","title":"Video recording of desktop using simple screen recorder"},{"location":"assignments/week03/","text":"3. Computer Aided Design \u00b6 Introduction: \u00b6 Description: CAD stands for Computer Aided Design, there are different software solutions for different industries, like AutoCAD specialized in the mechanical and architecture industry, CATIA for the aircraft, marine and automobile industry, or Blender specialized in digital art. There are also differences in licensing, for example proprietary, and open-source. Software like CATIA is proprietary and then you have to buy a license to use it, but there are also Open Sourced solutions like Blender, FreeCAD and OpenScad , that are driven by their communities, and also are free of charge. For this week the goal is to learn and use Raster or Vector drafting software, CAD and render or simulate. As a personal note, it\u2019s my first time using 100% Fedora for all this process and I had some difficulties configuring my GPU drivers, something that\u2019s really common under this operative system if not used carefully. Normally my workflow needed a dual boot system on my personal computer to use Solidworks on Linux and programming under Linux. For the first time I\u2019ve only used Linux thanks to XDesign and Blender. The first thing I\u2019ve made was this sort of ideation process to define the parts of my final project an this is the result: As my Photo is a bit Pixelated, I\u2019ve used InkScape to make a vectorized version and then compressed it again as a JPG image: Measuring objects: \u00b6 I gave myself the challenge to draw one of the earrings used for Cow identification in the experimental farm of unilasalle : Image compression and improvement with Gimp: \u00b6 I took some photos and screen captures for this and sometimes I had too use Gimp to crop, scale and compress all images shown for this assignment page. To crop the images I used the Selection tool and then the crop to selection tool under the Image menu in the toolbar. To improve contrast and color of images, you just need to use options under the Filters menu in the toolbar. 2D \u00b6 InkScape Draft process \u00b6 Shape sketching with simple forms. Using difference and union path tools I got the shape, next added the text, codebar and color. First create this simple shapes with the circle and rectangle tools. The rounded corners were made with the bezier editor. Then look for the \u201c Align and distribute \u201d palette in the Object menu\u201d Select all the shapes and use \u201c Center on vertical axis \u201c Then manually adjust the shapes to make the shape as is shown here. Select all the shapes again and use the \u201c Union \u201d boolean operation on the \u201c Path \u201d Menu. This is the result and the first part of the body for the cow earring. Then make a rectangle an a Oval using the rectangle and circle tools. Try to make the Oval tangent to the first body of the earring as is shown. Select the rectangle first and then the oval, go to the \u201c Path \u201d menu in the toolbar and use the \u201c Difference \u201d boolean operation. Make the same process por the right side. Now we have two shapes that resemble the earring. To complete the shape of the earring merge both shapes using the \u201c Union \u201d operation again. This is the basic shape of the earring. Next use the circle tool and the line bezier tool to match the image shown bellow. Then select the earring shape first and the lines right after. Use the \u201c Cut Path \u201d tool to divide the shape in 3 parts. This is needed to have 3 different colors in the next step and try to make a 3D effect. Then select the parts to paint it. I\u2019ve used this colors: Top: #ffcc00ff Middle: #d4aa00ff Bottom: #ffcc00ff Using the \u201c Text box tool \u201d I\u2019ve wrote the numbers and codes as shown those are similar to the earring, but I didn\u2019t found the same font. Then I\u2019ve painted the \u201cplug\u201d circles in the top: Outer: #918a6fff Inner: #24221cff Result: \u00b6 3D \u00b6 Xdesign: \u00b6 Review: I\u2019ve learned Xdesign and I found it very complicated at first even as a Solidworks user. My main OS is Fedora Linux. Linux configuration: \u00b6 I\u2019ve tried to use XDeisgn under Linux using Firefox, and Chromium web navigators. Chromium works better than Firefox. Activate Hardware acceleration. Force hardware GPU use.* *For Nvidia Nouveau drivers use: DRI_PRIME=1 chromium-browser *For Nvidia propietary drivers, use Bumblebee: optirun chromium-browser Introduction \u00b6 There are some basic operations for 3D modeling: 2D Drafting for sketching. Linear region extrusion. Linear region extraction. One axis profile revolution. Parametric scaling. The whole process can be divided into three important steps: Sketching 3D solids modeling Part Modeling Assembling The sketch is the 2D representation of a section or projection and its the base of a 3D model. The modeling process starts when we transform a 2D shape from a sketch into a 3D entity, there are multiple operations like extrusion, revolution, subtraction and other boolean operations to shape a 3D entity. An ensemble it\u2019s the combination of multiple 3D entities or parts, like in the real life process it requires constrains, joining mechanisms, but here you can restrict the displacement, rotation and collision with a \u201crestriction or relationship\u201d indicator. Start a new XDesign File \u00b6 We received an account as part of our Fab Academy course to access Xdesign: This is the URL to access: https://eu1-ds-iam.3dexperience.3ds.com/cas/login?service=https%3A//eu1-ifwe.3dexperience.3ds.com/%3FserverId%3DFRONT_2 This is the first screen after login, but I\u2019ve already made a week03 Dashboard: Then I\u2019ve created a new component: I\u2019ve named the component rfid_tag: This is the XDesign workspace: This is the sketch toolbar, and I\u2019m going to use: Sketch. Lines. Square. Circle. Dimension. Convert entities. Offset. Sketching: \u00b6 This is a 2D process where I\u2019ve made the section of a RFID TAG used for cows and it\u2019s based on this model that I\u2019ve available at FabLab Agrilab. The process its as follows: Create a new sketch, select the plane XY and draw a rectangle: Redefine the dimensions of each side of the rectangle by using the dimension tool: I\u2019ve measured the tag using the caliper the results are: 79 mm height and 57 mm width. The I\u2019ve converted the lines to contruction lines using right click and selecting the option in the menu: Then I\u2019ve made two construction middle lines. The circle is the holder of the RFID it has a diameter of 20 mm, I\u2019ve made it tangent to the top line. And I\u2019ve made a new bottom tangent line for the lower part. Results so far: The 3 points arc tool, works by selecting first the center, start and end. Then I\u2019ve joined the arc and the circle with tangent lines. I\u2019ve used the rounding tool to make round corners with a 4 mm radius. Then I\u2019ve trimmed the lines to left the sillouete that I\u2019m goint to extrude: So far I\u2019ve been finish a half of the tag and used the Mirror tool, selecting the vertical middle line and selecting the half siloutte: This is the final sketch: The final step its to add a inner circle of 14 mm diameter, concentric to the top curve. Modeling: \u00b6 I\u2019ve used the extrusion tool and used it on my latest sketch. Left click on the sketch and on the extrude contextual menu select the thickness 3mm. This is the measurement I got from the RFID Tag using the caliper. Resulting 3D shape: Then I\u2019ve to make a cut through the material using the sketch tool in the thickness or lateral face of the 3D model. I\u2019ve used the convert entity tool to make a projection square on the current sketch: Then I\u2019ve draft the lines based on the measurements of the RFID Tag: Then I\u2019ve created areas to use the extrude cut tool: Final sketch so far: To extrude the cut, use the extrude tool and select cut: I\u2019ve choose the \u201cup to next\u201d option: First result of the cut: And I\u2019ve missed to define the ramp dimension: Defining the ramp dimension: Then I\u2019ve extruded over the shown surface to create a ring using, sketch and extrusion tool: Then on the bottom of the tag I\u2019ve made another ring shape, following again, sketch, extrude process: The RFIG TAG has two visible components, so I\u2019ve made an assembly with the assembly tools. I\u2019ve named the assembly \u201cPhysical Product 2\u201d: Then I\u2019ve created a new component named \u201cRfid inner\u201d: I\u2019ve used the top face of the ring shown as base for the inner tag component: Using the sketch, extrude tool I\u2019ve made the 3 parts of the body: First part: a) b) c) d) e) Second part: Third part: Final shape: Then I\u2019ve used the apply material tool: Selected \u201cBlack low gloss plastic\u201d: Then I\u2019ve selected the first component I\u2019ve modeled and applied using the \u201cApply material tool\u201d: And selected \u201cPlastic, low glow, yellow\u201d: Assembly: \u00b6 To make this assembly video I\u2019ve captured the screen on my computer using simple screen recorder Selecting a rectangular region of my screen framing my model under XDesign and then pulsing the relationship constrain \u201ccoincident surface\u201d. XDesign then makes and animation where the two selected surfaces move until fund each other. This is the configuration I\u2019ve used on simplescreenrecorder. a) b) c) This is the video result: And then this is a the ffmpeg command I\u2019ve used. More info in my project management page. Embed text: \u00b6 This process its similar to the past processes, but instead of using the Lines and arcs tools I\u2019ve used the text tool: First I\u2019ve created a new sketch on the fron surface, following the same proportions of the RFID tag: The number 8207 its 25 mm height, -5% spacing and 78% ratio scaled: The 27 0808 test its 5mm height -5% Spaced and 90% ratio scaled: After finishing the sketch I\u2019ve extruded it by 0.1mm: Finally I\u2019ve made the same for the FR text: And Applied \u201cPlastic, low gloss Black\u201d Material with the \u201cApply material tool\u201d: Final result: \u00b6 I\u2019ve captured this view from the photo view tool in XDesign: Files \u00b6 Download 3DXML Xdesign files. Download InksCape SVG files Download from XDesign. Note: You need a 3dexperience account.","title":"3. Computer Aided Design"},{"location":"assignments/week03/#3-computer-aided-design","text":"","title":"3. Computer Aided Design"},{"location":"assignments/week03/#introduction","text":"Description: CAD stands for Computer Aided Design, there are different software solutions for different industries, like AutoCAD specialized in the mechanical and architecture industry, CATIA for the aircraft, marine and automobile industry, or Blender specialized in digital art. There are also differences in licensing, for example proprietary, and open-source. Software like CATIA is proprietary and then you have to buy a license to use it, but there are also Open Sourced solutions like Blender, FreeCAD and OpenScad , that are driven by their communities, and also are free of charge. For this week the goal is to learn and use Raster or Vector drafting software, CAD and render or simulate. As a personal note, it\u2019s my first time using 100% Fedora for all this process and I had some difficulties configuring my GPU drivers, something that\u2019s really common under this operative system if not used carefully. Normally my workflow needed a dual boot system on my personal computer to use Solidworks on Linux and programming under Linux. For the first time I\u2019ve only used Linux thanks to XDesign and Blender. The first thing I\u2019ve made was this sort of ideation process to define the parts of my final project an this is the result: As my Photo is a bit Pixelated, I\u2019ve used InkScape to make a vectorized version and then compressed it again as a JPG image:","title":"Introduction:"},{"location":"assignments/week03/#measuring-objects","text":"I gave myself the challenge to draw one of the earrings used for Cow identification in the experimental farm of unilasalle :","title":"Measuring objects:"},{"location":"assignments/week03/#image-compression-and-improvement-with-gimp","text":"I took some photos and screen captures for this and sometimes I had too use Gimp to crop, scale and compress all images shown for this assignment page. To crop the images I used the Selection tool and then the crop to selection tool under the Image menu in the toolbar. To improve contrast and color of images, you just need to use options under the Filters menu in the toolbar.","title":"Image compression and improvement with Gimp:"},{"location":"assignments/week03/#2d","text":"","title":"2D"},{"location":"assignments/week03/#inkscape-draft-process","text":"Shape sketching with simple forms. Using difference and union path tools I got the shape, next added the text, codebar and color. First create this simple shapes with the circle and rectangle tools. The rounded corners were made with the bezier editor. Then look for the \u201c Align and distribute \u201d palette in the Object menu\u201d Select all the shapes and use \u201c Center on vertical axis \u201c Then manually adjust the shapes to make the shape as is shown here. Select all the shapes again and use the \u201c Union \u201d boolean operation on the \u201c Path \u201d Menu. This is the result and the first part of the body for the cow earring. Then make a rectangle an a Oval using the rectangle and circle tools. Try to make the Oval tangent to the first body of the earring as is shown. Select the rectangle first and then the oval, go to the \u201c Path \u201d menu in the toolbar and use the \u201c Difference \u201d boolean operation. Make the same process por the right side. Now we have two shapes that resemble the earring. To complete the shape of the earring merge both shapes using the \u201c Union \u201d operation again. This is the basic shape of the earring. Next use the circle tool and the line bezier tool to match the image shown bellow. Then select the earring shape first and the lines right after. Use the \u201c Cut Path \u201d tool to divide the shape in 3 parts. This is needed to have 3 different colors in the next step and try to make a 3D effect. Then select the parts to paint it. I\u2019ve used this colors: Top: #ffcc00ff Middle: #d4aa00ff Bottom: #ffcc00ff Using the \u201c Text box tool \u201d I\u2019ve wrote the numbers and codes as shown those are similar to the earring, but I didn\u2019t found the same font. Then I\u2019ve painted the \u201cplug\u201d circles in the top: Outer: #918a6fff Inner: #24221cff","title":"InkScape Draft process"},{"location":"assignments/week03/#result","text":"","title":"Result:"},{"location":"assignments/week03/#3d","text":"","title":"3D"},{"location":"assignments/week03/#xdesign","text":"Review: I\u2019ve learned Xdesign and I found it very complicated at first even as a Solidworks user. My main OS is Fedora Linux.","title":"Xdesign:"},{"location":"assignments/week03/#linux-configuration","text":"I\u2019ve tried to use XDeisgn under Linux using Firefox, and Chromium web navigators. Chromium works better than Firefox. Activate Hardware acceleration. Force hardware GPU use.* *For Nvidia Nouveau drivers use: DRI_PRIME=1 chromium-browser *For Nvidia propietary drivers, use Bumblebee: optirun chromium-browser","title":"Linux configuration:"},{"location":"assignments/week03/#introduction_1","text":"There are some basic operations for 3D modeling: 2D Drafting for sketching. Linear region extrusion. Linear region extraction. One axis profile revolution. Parametric scaling. The whole process can be divided into three important steps: Sketching 3D solids modeling Part Modeling Assembling The sketch is the 2D representation of a section or projection and its the base of a 3D model. The modeling process starts when we transform a 2D shape from a sketch into a 3D entity, there are multiple operations like extrusion, revolution, subtraction and other boolean operations to shape a 3D entity. An ensemble it\u2019s the combination of multiple 3D entities or parts, like in the real life process it requires constrains, joining mechanisms, but here you can restrict the displacement, rotation and collision with a \u201crestriction or relationship\u201d indicator.","title":"Introduction"},{"location":"assignments/week03/#start-a-new-xdesign-file","text":"We received an account as part of our Fab Academy course to access Xdesign: This is the URL to access: https://eu1-ds-iam.3dexperience.3ds.com/cas/login?service=https%3A//eu1-ifwe.3dexperience.3ds.com/%3FserverId%3DFRONT_2 This is the first screen after login, but I\u2019ve already made a week03 Dashboard: Then I\u2019ve created a new component: I\u2019ve named the component rfid_tag: This is the XDesign workspace: This is the sketch toolbar, and I\u2019m going to use: Sketch. Lines. Square. Circle. Dimension. Convert entities. Offset.","title":"Start a new XDesign File"},{"location":"assignments/week03/#sketching","text":"This is a 2D process where I\u2019ve made the section of a RFID TAG used for cows and it\u2019s based on this model that I\u2019ve available at FabLab Agrilab. The process its as follows: Create a new sketch, select the plane XY and draw a rectangle: Redefine the dimensions of each side of the rectangle by using the dimension tool: I\u2019ve measured the tag using the caliper the results are: 79 mm height and 57 mm width. The I\u2019ve converted the lines to contruction lines using right click and selecting the option in the menu: Then I\u2019ve made two construction middle lines. The circle is the holder of the RFID it has a diameter of 20 mm, I\u2019ve made it tangent to the top line. And I\u2019ve made a new bottom tangent line for the lower part. Results so far: The 3 points arc tool, works by selecting first the center, start and end. Then I\u2019ve joined the arc and the circle with tangent lines. I\u2019ve used the rounding tool to make round corners with a 4 mm radius. Then I\u2019ve trimmed the lines to left the sillouete that I\u2019m goint to extrude: So far I\u2019ve been finish a half of the tag and used the Mirror tool, selecting the vertical middle line and selecting the half siloutte: This is the final sketch: The final step its to add a inner circle of 14 mm diameter, concentric to the top curve.","title":"Sketching:"},{"location":"assignments/week03/#modeling","text":"I\u2019ve used the extrusion tool and used it on my latest sketch. Left click on the sketch and on the extrude contextual menu select the thickness 3mm. This is the measurement I got from the RFID Tag using the caliper. Resulting 3D shape: Then I\u2019ve to make a cut through the material using the sketch tool in the thickness or lateral face of the 3D model. I\u2019ve used the convert entity tool to make a projection square on the current sketch: Then I\u2019ve draft the lines based on the measurements of the RFID Tag: Then I\u2019ve created areas to use the extrude cut tool: Final sketch so far: To extrude the cut, use the extrude tool and select cut: I\u2019ve choose the \u201cup to next\u201d option: First result of the cut: And I\u2019ve missed to define the ramp dimension: Defining the ramp dimension: Then I\u2019ve extruded over the shown surface to create a ring using, sketch and extrusion tool: Then on the bottom of the tag I\u2019ve made another ring shape, following again, sketch, extrude process: The RFIG TAG has two visible components, so I\u2019ve made an assembly with the assembly tools. I\u2019ve named the assembly \u201cPhysical Product 2\u201d: Then I\u2019ve created a new component named \u201cRfid inner\u201d: I\u2019ve used the top face of the ring shown as base for the inner tag component: Using the sketch, extrude tool I\u2019ve made the 3 parts of the body: First part: a) b) c) d) e) Second part: Third part: Final shape: Then I\u2019ve used the apply material tool: Selected \u201cBlack low gloss plastic\u201d: Then I\u2019ve selected the first component I\u2019ve modeled and applied using the \u201cApply material tool\u201d: And selected \u201cPlastic, low glow, yellow\u201d:","title":"Modeling:"},{"location":"assignments/week03/#assembly","text":"To make this assembly video I\u2019ve captured the screen on my computer using simple screen recorder Selecting a rectangular region of my screen framing my model under XDesign and then pulsing the relationship constrain \u201ccoincident surface\u201d. XDesign then makes and animation where the two selected surfaces move until fund each other. This is the configuration I\u2019ve used on simplescreenrecorder. a) b) c) This is the video result: And then this is a the ffmpeg command I\u2019ve used. More info in my project management page.","title":"Assembly:"},{"location":"assignments/week03/#embed-text","text":"This process its similar to the past processes, but instead of using the Lines and arcs tools I\u2019ve used the text tool: First I\u2019ve created a new sketch on the fron surface, following the same proportions of the RFID tag: The number 8207 its 25 mm height, -5% spacing and 78% ratio scaled: The 27 0808 test its 5mm height -5% Spaced and 90% ratio scaled: After finishing the sketch I\u2019ve extruded it by 0.1mm: Finally I\u2019ve made the same for the FR text: And Applied \u201cPlastic, low gloss Black\u201d Material with the \u201cApply material tool\u201d:","title":"Embed text:"},{"location":"assignments/week03/#final-result","text":"I\u2019ve captured this view from the photo view tool in XDesign:","title":"Final result:"},{"location":"assignments/week03/#files","text":"Download 3DXML Xdesign files. Download InksCape SVG files Download from XDesign. Note: You need a 3dexperience account.","title":"Files"},{"location":"assignments/week04/","text":"4. Computer controlled cutting \u00b6 Introduction: \u00b6 This week we\u2019ve learned how to use different machines in the Fab Lab. We had a great experience while practicing vinyl and laser cutting. My approach was very simple but I\u2019ve discovered interesting techniques and important information for the upcoming weeks. This is the link to this weeks group assignment Vinyl Cutting: \u00b6 Machine \u00b6 The machine I\u2019ve used for this practice is the Silhouette Cameo version 3 Specifications \u00b6 Maximum cutting area 12 in. x 24 in. (30.5 cm x 61 cm) with a cutting mat 12 in. x 10 ft. (30.5 cm x 3m) with a lined media Maximum Media Thickness 78.75 mils (2 mm) Maximum Cutting Force 210 gf USB Port For reading and cutting saved files directly Compatible Media Types Vinyl, heat transfer material, cardstock, photo paper, copy paper, rhinestone template material, fabric, and more Interface USB 2.0 high speed Unit Dimensions 22.5 in. x 6 in. x 8.5 in. (57.2 cm x 15.2 cm x 21.6 cm) Unit Weight 8 lbs 15 oz Shipping Dimensions 23.5 in. x 11 in. x 8.5 in. (59.7 cm x 28 cm x 21.6 cm) Shipping Weight 12 lbs 13 oz Warranty One year parts and labor Consumables \u00b6 Blades Vinyl rolls Vinyl for heat transfer Adhesive vinyl Settings \u00b6 Material: Glossy vinyl Action: Cut Blade: Auto Blade Auto blade level: 1 Speed: 5 Force: 10 Pass count: 1 Load material \u00b6 Select the material and place it on the roll tray of the machine. Align the material perpendiculary to the machine axis following the alignment guides. Using the machine interface select \u201cLoad material\u201d option and accept to confirm. Check the correct placement of the material of the machine. The auto-blade will adjust itself depending on the settings you have selected on the software, altough Silhouette Studio will give you predefined settings. 2D Design: \u00b6 This is a simple design, it\u2019s based on my earring 2D draft from the last assignment. And it\u2019s a Qr code badge that redirects to my fab academy main page. QR Codes get complex with more text on it, so the idea is to share my website from the fab academy program to anyone by scanning the \u201cbadge\u201d. I used bit.ly to shorten my website URL and then I encoded it in QR. I\u2019ve created the QR code here , I know it\u2019s possible to get rid of online tools and just make a QR code with Python, but I actually liked this service, the generator has almost every standard of visual encoders. After that I used gimp to invert the colors of the QR, because I wanted a filled design. And right after I imported the QR in Inkscape and integrated it as shown. I\u2019ve made one for each of my team mates as a gift. And this design is intended to serve for future AgriLab Fab Academy students. We\u2019re going to place our stickers in our classroom. Cut \u00b6 I\u2019ve used silhouette studio to raster all images, this is a special proprietary software for the vinyl cutter. It\u2019s a very friendly and intuitive software. There are some important parameters to ensure a well cut design. Like the tolerance and speed. The process of cutting the vinyl is very quick and it only needs some basic adjustments in the machine: Select and adjust the plate according to the roll width. Ensure that the vinyl is cut in a square angle. Ensure that the vinyl roll is aligned following the guides of the machine. Ensure that nothing and obstacle for the output. Cutting: Follow the driver and software install process: Install drivers, included with silhouette studio Connect the Silhouette Cameo 3 machine to your computer using the USB interface. Open the design file in the Silhouette Studio software, clicking the open option of the file menu in the top bar. Prior to sending the file prepare the file, if you are about to use a transfer process, be sure that you need to mirror or not the design, otherwise it will appear inverted after the process. Press the send file button in the top right corner. Select the material to use from the drop down list. Select your cut tool for me it was (auto-blade). Select this settings for vinyl (#settings) Follow the instructions to load the material Settings: Force: Its the force applied to punch the material with the blade. Speed: The cut blade movement speeds. Passed: The number of passes through the cuts. Blade deep: The ammount of milimeters that the blade will cut into the material. Notes about vinyl cut: I didn\u2019t perform any tests I\u2019ve used the predefined settings in silhoutte studio for vinyl mate . Adhesive transfer vinyl: \u00b6 This was a very fun process. I used the design I described in the 2D design part. The peeling process was very difficult and it took me almost one hour to peel off the three stickers. The complexity was high because of the QR code. One difference from the thermal transfer process is that we need to place the vinyl into another adhesive transfer film, that will help us to keep our design to place it in a polished surface preferably. Heat transfer vinyl on fabric: \u00b6 Same to the previous process I had to remove the unwanted parts of the design using the peeling tools. After that I\u2019ve used the iron to transfer the vinyl to the fabric. After transfering the design with the heat to the fabric, I had to peel the transfer plastic carefully. For this process we used vinyl with a thermal transfer film, after cutting the design, I peeled the vinyl to get rid of the unwanted parts in the design. It was a slow process because of the QR in my design. But after a while I got confident enough to make the process a bit faster. While peeling the design the iron press machine was pre-heating in order to be ready to transfer our designs in a piece of fabric. This design is different from the one of stickers. Laser Cutting: \u00b6 Security: \u00b6 Security it\u2019s a very important part of this practice, we had a couple of hours of theory to ensure we understand the dangers of a class 1 laser machine. We understand that the process of cutting the material produces combustion so there are multiple things to help to keeo this under control. Keep a power/speed ratio according to the material. Use safe materials. Work under supervision of the instructors. Never open the lid while the machine is working. Never put you or something between the path of the mirrors of the machine. Identify the location of the extinguisher. Localize the emergency stop button. If possible use a wet fabric to extinguish small fires before use the extinguisher. Never look directly to the laser. Check the air extractor and liquid cooling systems, both should be working properly. Stay watching the process carefully, don\u2019t turn back, because sometimes fires spread quickly. Keep a safe distance area. Be aware of the fumes. Controller board, motor drivers and power supply. That big bulb is the CO2 laser tube, that projects a ray of IR photons and makes the laser. The emergency stop button is very important to avoid accidents and damage to the machine. Software: \u00b6 The software was the most frustrating experience for me this week. Sometimes I had to start all over my work because it just halts for any reason. But I learnt to use it properly, the basic steps are: Load a design in dxf format. Separate the parts in layers. Configure each of the layers for engraving. Configure the last layer as the one that\u2019s going to cut out your design. Power and speed: \u00b6 The ratio of output power of the laser and the speed of the movements of it are crucial to get the intended design. I tried several times to understand and identify differences of the combination of speed and power. Sometimes the power was very low that it didn\u2019t engrave anything and other it was too high. I discovered also the importance of the \u201cminimum speed\u201d parameter, if the difference is too high with the highest the machine will not engrave or cut properly. Kit: \u00b6 I\u2019ve made a parametric random shape generator with Python, the idea was simple, just to generate DXF files ready for the laser cutting software. Python is a interpreted high-level programming language, its easy to use for coding and also I find it extremely fun. I\u2019ve coded this following the principle of shaping a polygon by rotating a point in the respective angle that depends of the number of sides of it. Then to cut the slot I used the same principle mapping manually the points and then rotating it in the origin of the shape. I had the idea to make a parametric polygon drafter script in Python as a personal challenge and the result was satisfactory thus, I didn\u2019t had the chance on any other week to apply the same principle. It could be possible to use a python script like this to change the size of the body of the device for my final project. Python code explained: \u00b6 Head with autor information: ''' Autor: Antonio de Jes\u00fas Anaya Hern\u00e1ndez Github: @kny5 Program: Parametric polygon shape generator for laser cutting with kerf and dxf output. ''' Install EZDXF library for python on Fedora Linux OS: pip install ezdxf Importing libraries used: import math import ezdxf import random Parameters used, to change then just overwrite the value here: Sides could be random generated. Radius of the shape. Origin coordinates of the first shape. Depth of the joining cut of the shape. Kerf, this depends on the machine please check this for more information # Parameters sides = random.randrange(3, 10, 1) radius = 40 origin = (100,100) slot_depth = radius/2 kerf = 0.2 material_thickness = 5 DXF_file class holds the functinos to create, save and add lines to build the shapes on the file. class dxf_file(): def __init__(self, __filename): self.filename = __filename self.file = None self.create_dxf() def create_dxf(self): self.file = ezdxf.new('R2018') self.file.saveas(self.filename) def save_dxf(self): self.file.saveas(self.filename) def add_vectors_dxf(self, vectors): self.model = self.file.modelspace() for vector in vectors: self.model.add_line(vector[0], vector[1]) self.save_dxf() rotate_point its a function to rotate any point in 2D in a pivot point and angle specified. This function was used to roate multiple points like this: def rotate_point(point, pivot, angle): x = ((point[0] - pivot[0]) * math.cos(angle)) - ((point[1] - pivot[1]) * math.sin(angle)) + pivot[0] y = ((point[0] - pivot[0]) * math.sin(angle)) + ((point[1] - pivot[1]) * math.cos(angle)) + pivot[1] return (x, y) This function returns the intersection point of two lines (vectors) and was used to project lines to build the slots of the shapes. def line_intersection(line1, line2): xdiff = (line1[0][0] - line1[1][0], line2[0][0] - line2[1][0]) ydiff = (line1[0][1] - line1[1][1], line2[0][1] - line2[1][1]) def det(a, b): return a[0] * b[1] - a[1] * b[0] div = det(xdiff, ydiff) if div == 0: raise Exception('lines do not intersect') d = (det(*line1), det(*line2)) x = det(d, xdiff) / div y = det(d, ydiff) / div return (x, y) This class is unused but was mean to optimized the arragement of the figures in the canvas of the DXF file. class workspace(): def __init__(self, __origin=(0,0), __width=1000, __height=1000): self.origin = __origin self.width = __width self.height = __height self.objects = [] def add_object(self, __object): self.objects.append(__object) # Should I sort this? This polygon class holds the properties of all the figures to cut on init the properties are defined, so as the process after creating a new instance of the class. Make produces a figure with specified sides and radius. Get vectors get the vectors of the figure to later write it to a DXF file using the dxf_file class. Slot produces the cuts (slots) for the ensemble of the figures. class polygon(): def __init__(self, __origin, __sides, __radius, __kerf=kerf): self.kerf = __kerf self.sides = __sides # kerf parameter self.radius = __radius + self.kerf self.origin = __origin self.points = [] self.vectors = [] self.angle = 360/self.sides self.make() self.get_vectors() def make(self): for side in range(0, self.sides): __x = self.origin[0] + self.radius * math.cos(2 * math.pi * side / self.sides) __y = self.origin[1] + self.radius * math.sin(2 * math.pi * side / self.sides) self.points.append((__x, __y)) def get_vectors(self): self.vectors = list(zip(self.points, self.points[1:] + self.points[:1])) def slot(self, __width, __depth): # kerf parameter width = __width - self.kerf depth = __depth - self.kerf # Define points of slot shape: __a = (self.origin[0] + self.radius - depth, self.origin[1] - (width / 2)) __b = (self.origin[0] + self.radius - depth, self.origin[1] + (width / 2)) __c = (self.origin[0] + self.radius, self.origin[1] + (width / 2)) __d = (self.origin[0] + self.radius, self.origin[1] - (width / 2)) # Set initial position rotate to initial position __a = rotate_point(__a, self.origin, math.radians(self.angle / 2)) __b = rotate_point(__b, self.origin, math.radians(self.angle / 2)) __c = rotate_point(__c, self.origin, math.radians(self.angle / 2)) __d = rotate_point(__d, self.origin, math.radians(self.angle / 2)) # packing slot sides slot_left_side_1 = (__b, __c) slot_right_side_1 = (__a, __d) # finding intersection point between slot sides and polygon face 1 right_inter = line_intersection(self.vectors[0], slot_right_side_1) left_inter = line_intersection(self.vectors[0], slot_left_side_1) # Manually ordering the points of the slot shape output = [self.points[0]] output.append(right_inter) output.append(__a) output.append(__a) output.append(__b) output.append(__b) output.append(left_inter) # index 7 # repeating the process radially for the number of faces. for side in range(1, self.sides): output.append(rotate_point(self.points[0], self.origin, math.radians(side * self.angle))) output.append(rotate_point(right_inter, self.origin, math.radians(side * self.angle))) output.append(rotate_point(__a, self.origin, math.radians(side *self.angle))) output.append(rotate_point(__a, self.origin, math.radians(side *self.angle))) output.append(rotate_point(__b, self.origin, math.radians(side *self.angle))) output.append(rotate_point(__b, self.origin, math.radians(side *self.angle))) output.append(rotate_point(left_inter, self.origin, math.radians(side * self.angle))) # creating a vector list from the points list self.output = list(zip(output, output[1:] + output[:1])) This lines are ment to create the instances of the polygon class, dxf_file and produce a DXF file as output. # program test # creating a random generated polygon a = polygon(origin, sides, radius) a.slot(material_thickness, slot_depth) # creating a DXF document and adding slot output vectors dxf_file_ = dxf_file(\"test.dxf\") a.get_vectors() dxf_file_.add_vectors_dxf(a.output) Python program usage demo \u00b6 In this video I show the usage of the script under a Linux system using the command line to execute the script and produce the DXf output file. Advantages and disadvantages \u00b6 The simplicity of the script allows to make further changes, thus scripting its far more complex than using a CAD software, except for OpenScad that follows the principle of my idea, I would like to say that I should stick to openscad as its more powerful and easy to distribute than a python script. Laser cutting: \u00b6 This process was really easy, the parameters I used in the Python program were: Kerf = 0.25 Material thinkness = 4.98 Sides = 8 # Can be individually set, but I used the global variable for every polygon. For the laser cutter: Speed = 80 Power = 30 % I\u2019ve made two DXF whit 4 Octagons and a third one with 6. I didn\u2019t have enough time to add a nesting algoritm and a chamfer algorithm. But I liked the simplicity of the program. First try and perfect! I was able to make different shapes with it. Files \u00b6 Download InksCape SVG files Note: You need Python > 3.7 to install the ezdxf library with the following command using pip: pip install ezdxf Download Python program latest version Python file kit generated","title":"4. Computer controlled cutting"},{"location":"assignments/week04/#4-computer-controlled-cutting","text":"","title":"4. Computer controlled cutting"},{"location":"assignments/week04/#introduction","text":"This week we\u2019ve learned how to use different machines in the Fab Lab. We had a great experience while practicing vinyl and laser cutting. My approach was very simple but I\u2019ve discovered interesting techniques and important information for the upcoming weeks. This is the link to this weeks group assignment","title":"Introduction:"},{"location":"assignments/week04/#vinyl-cutting","text":"","title":"Vinyl Cutting:"},{"location":"assignments/week04/#machine","text":"The machine I\u2019ve used for this practice is the Silhouette Cameo version 3","title":"Machine"},{"location":"assignments/week04/#specifications","text":"Maximum cutting area 12 in. x 24 in. (30.5 cm x 61 cm) with a cutting mat 12 in. x 10 ft. (30.5 cm x 3m) with a lined media Maximum Media Thickness 78.75 mils (2 mm) Maximum Cutting Force 210 gf USB Port For reading and cutting saved files directly Compatible Media Types Vinyl, heat transfer material, cardstock, photo paper, copy paper, rhinestone template material, fabric, and more Interface USB 2.0 high speed Unit Dimensions 22.5 in. x 6 in. x 8.5 in. (57.2 cm x 15.2 cm x 21.6 cm) Unit Weight 8 lbs 15 oz Shipping Dimensions 23.5 in. x 11 in. x 8.5 in. (59.7 cm x 28 cm x 21.6 cm) Shipping Weight 12 lbs 13 oz Warranty One year parts and labor","title":"Specifications"},{"location":"assignments/week04/#consumables","text":"Blades Vinyl rolls Vinyl for heat transfer Adhesive vinyl","title":"Consumables"},{"location":"assignments/week04/#settings","text":"Material: Glossy vinyl Action: Cut Blade: Auto Blade Auto blade level: 1 Speed: 5 Force: 10 Pass count: 1","title":"Settings"},{"location":"assignments/week04/#load-material","text":"Select the material and place it on the roll tray of the machine. Align the material perpendiculary to the machine axis following the alignment guides. Using the machine interface select \u201cLoad material\u201d option and accept to confirm. Check the correct placement of the material of the machine. The auto-blade will adjust itself depending on the settings you have selected on the software, altough Silhouette Studio will give you predefined settings.","title":"Load material"},{"location":"assignments/week04/#2d-design","text":"This is a simple design, it\u2019s based on my earring 2D draft from the last assignment. And it\u2019s a Qr code badge that redirects to my fab academy main page. QR Codes get complex with more text on it, so the idea is to share my website from the fab academy program to anyone by scanning the \u201cbadge\u201d. I used bit.ly to shorten my website URL and then I encoded it in QR. I\u2019ve created the QR code here , I know it\u2019s possible to get rid of online tools and just make a QR code with Python, but I actually liked this service, the generator has almost every standard of visual encoders. After that I used gimp to invert the colors of the QR, because I wanted a filled design. And right after I imported the QR in Inkscape and integrated it as shown. I\u2019ve made one for each of my team mates as a gift. And this design is intended to serve for future AgriLab Fab Academy students. We\u2019re going to place our stickers in our classroom.","title":"2D Design:"},{"location":"assignments/week04/#cut","text":"I\u2019ve used silhouette studio to raster all images, this is a special proprietary software for the vinyl cutter. It\u2019s a very friendly and intuitive software. There are some important parameters to ensure a well cut design. Like the tolerance and speed. The process of cutting the vinyl is very quick and it only needs some basic adjustments in the machine: Select and adjust the plate according to the roll width. Ensure that the vinyl is cut in a square angle. Ensure that the vinyl roll is aligned following the guides of the machine. Ensure that nothing and obstacle for the output. Cutting: Follow the driver and software install process: Install drivers, included with silhouette studio Connect the Silhouette Cameo 3 machine to your computer using the USB interface. Open the design file in the Silhouette Studio software, clicking the open option of the file menu in the top bar. Prior to sending the file prepare the file, if you are about to use a transfer process, be sure that you need to mirror or not the design, otherwise it will appear inverted after the process. Press the send file button in the top right corner. Select the material to use from the drop down list. Select your cut tool for me it was (auto-blade). Select this settings for vinyl (#settings) Follow the instructions to load the material Settings: Force: Its the force applied to punch the material with the blade. Speed: The cut blade movement speeds. Passed: The number of passes through the cuts. Blade deep: The ammount of milimeters that the blade will cut into the material. Notes about vinyl cut: I didn\u2019t perform any tests I\u2019ve used the predefined settings in silhoutte studio for vinyl mate .","title":"Cut"},{"location":"assignments/week04/#adhesive-transfer-vinyl","text":"This was a very fun process. I used the design I described in the 2D design part. The peeling process was very difficult and it took me almost one hour to peel off the three stickers. The complexity was high because of the QR code. One difference from the thermal transfer process is that we need to place the vinyl into another adhesive transfer film, that will help us to keep our design to place it in a polished surface preferably.","title":"Adhesive transfer vinyl:"},{"location":"assignments/week04/#heat-transfer-vinyl-on-fabric","text":"Same to the previous process I had to remove the unwanted parts of the design using the peeling tools. After that I\u2019ve used the iron to transfer the vinyl to the fabric. After transfering the design with the heat to the fabric, I had to peel the transfer plastic carefully. For this process we used vinyl with a thermal transfer film, after cutting the design, I peeled the vinyl to get rid of the unwanted parts in the design. It was a slow process because of the QR in my design. But after a while I got confident enough to make the process a bit faster. While peeling the design the iron press machine was pre-heating in order to be ready to transfer our designs in a piece of fabric. This design is different from the one of stickers.","title":"Heat transfer vinyl on fabric:"},{"location":"assignments/week04/#laser-cutting","text":"","title":"Laser Cutting:"},{"location":"assignments/week04/#security","text":"Security it\u2019s a very important part of this practice, we had a couple of hours of theory to ensure we understand the dangers of a class 1 laser machine. We understand that the process of cutting the material produces combustion so there are multiple things to help to keeo this under control. Keep a power/speed ratio according to the material. Use safe materials. Work under supervision of the instructors. Never open the lid while the machine is working. Never put you or something between the path of the mirrors of the machine. Identify the location of the extinguisher. Localize the emergency stop button. If possible use a wet fabric to extinguish small fires before use the extinguisher. Never look directly to the laser. Check the air extractor and liquid cooling systems, both should be working properly. Stay watching the process carefully, don\u2019t turn back, because sometimes fires spread quickly. Keep a safe distance area. Be aware of the fumes. Controller board, motor drivers and power supply. That big bulb is the CO2 laser tube, that projects a ray of IR photons and makes the laser. The emergency stop button is very important to avoid accidents and damage to the machine.","title":"Security:"},{"location":"assignments/week04/#software","text":"The software was the most frustrating experience for me this week. Sometimes I had to start all over my work because it just halts for any reason. But I learnt to use it properly, the basic steps are: Load a design in dxf format. Separate the parts in layers. Configure each of the layers for engraving. Configure the last layer as the one that\u2019s going to cut out your design.","title":"Software:"},{"location":"assignments/week04/#power-and-speed","text":"The ratio of output power of the laser and the speed of the movements of it are crucial to get the intended design. I tried several times to understand and identify differences of the combination of speed and power. Sometimes the power was very low that it didn\u2019t engrave anything and other it was too high. I discovered also the importance of the \u201cminimum speed\u201d parameter, if the difference is too high with the highest the machine will not engrave or cut properly.","title":"Power and speed:"},{"location":"assignments/week04/#kit","text":"I\u2019ve made a parametric random shape generator with Python, the idea was simple, just to generate DXF files ready for the laser cutting software. Python is a interpreted high-level programming language, its easy to use for coding and also I find it extremely fun. I\u2019ve coded this following the principle of shaping a polygon by rotating a point in the respective angle that depends of the number of sides of it. Then to cut the slot I used the same principle mapping manually the points and then rotating it in the origin of the shape. I had the idea to make a parametric polygon drafter script in Python as a personal challenge and the result was satisfactory thus, I didn\u2019t had the chance on any other week to apply the same principle. It could be possible to use a python script like this to change the size of the body of the device for my final project.","title":"Kit:"},{"location":"assignments/week04/#python-code-explained","text":"Head with autor information: ''' Autor: Antonio de Jes\u00fas Anaya Hern\u00e1ndez Github: @kny5 Program: Parametric polygon shape generator for laser cutting with kerf and dxf output. ''' Install EZDXF library for python on Fedora Linux OS: pip install ezdxf Importing libraries used: import math import ezdxf import random Parameters used, to change then just overwrite the value here: Sides could be random generated. Radius of the shape. Origin coordinates of the first shape. Depth of the joining cut of the shape. Kerf, this depends on the machine please check this for more information # Parameters sides = random.randrange(3, 10, 1) radius = 40 origin = (100,100) slot_depth = radius/2 kerf = 0.2 material_thickness = 5 DXF_file class holds the functinos to create, save and add lines to build the shapes on the file. class dxf_file(): def __init__(self, __filename): self.filename = __filename self.file = None self.create_dxf() def create_dxf(self): self.file = ezdxf.new('R2018') self.file.saveas(self.filename) def save_dxf(self): self.file.saveas(self.filename) def add_vectors_dxf(self, vectors): self.model = self.file.modelspace() for vector in vectors: self.model.add_line(vector[0], vector[1]) self.save_dxf() rotate_point its a function to rotate any point in 2D in a pivot point and angle specified. This function was used to roate multiple points like this: def rotate_point(point, pivot, angle): x = ((point[0] - pivot[0]) * math.cos(angle)) - ((point[1] - pivot[1]) * math.sin(angle)) + pivot[0] y = ((point[0] - pivot[0]) * math.sin(angle)) + ((point[1] - pivot[1]) * math.cos(angle)) + pivot[1] return (x, y) This function returns the intersection point of two lines (vectors) and was used to project lines to build the slots of the shapes. def line_intersection(line1, line2): xdiff = (line1[0][0] - line1[1][0], line2[0][0] - line2[1][0]) ydiff = (line1[0][1] - line1[1][1], line2[0][1] - line2[1][1]) def det(a, b): return a[0] * b[1] - a[1] * b[0] div = det(xdiff, ydiff) if div == 0: raise Exception('lines do not intersect') d = (det(*line1), det(*line2)) x = det(d, xdiff) / div y = det(d, ydiff) / div return (x, y) This class is unused but was mean to optimized the arragement of the figures in the canvas of the DXF file. class workspace(): def __init__(self, __origin=(0,0), __width=1000, __height=1000): self.origin = __origin self.width = __width self.height = __height self.objects = [] def add_object(self, __object): self.objects.append(__object) # Should I sort this? This polygon class holds the properties of all the figures to cut on init the properties are defined, so as the process after creating a new instance of the class. Make produces a figure with specified sides and radius. Get vectors get the vectors of the figure to later write it to a DXF file using the dxf_file class. Slot produces the cuts (slots) for the ensemble of the figures. class polygon(): def __init__(self, __origin, __sides, __radius, __kerf=kerf): self.kerf = __kerf self.sides = __sides # kerf parameter self.radius = __radius + self.kerf self.origin = __origin self.points = [] self.vectors = [] self.angle = 360/self.sides self.make() self.get_vectors() def make(self): for side in range(0, self.sides): __x = self.origin[0] + self.radius * math.cos(2 * math.pi * side / self.sides) __y = self.origin[1] + self.radius * math.sin(2 * math.pi * side / self.sides) self.points.append((__x, __y)) def get_vectors(self): self.vectors = list(zip(self.points, self.points[1:] + self.points[:1])) def slot(self, __width, __depth): # kerf parameter width = __width - self.kerf depth = __depth - self.kerf # Define points of slot shape: __a = (self.origin[0] + self.radius - depth, self.origin[1] - (width / 2)) __b = (self.origin[0] + self.radius - depth, self.origin[1] + (width / 2)) __c = (self.origin[0] + self.radius, self.origin[1] + (width / 2)) __d = (self.origin[0] + self.radius, self.origin[1] - (width / 2)) # Set initial position rotate to initial position __a = rotate_point(__a, self.origin, math.radians(self.angle / 2)) __b = rotate_point(__b, self.origin, math.radians(self.angle / 2)) __c = rotate_point(__c, self.origin, math.radians(self.angle / 2)) __d = rotate_point(__d, self.origin, math.radians(self.angle / 2)) # packing slot sides slot_left_side_1 = (__b, __c) slot_right_side_1 = (__a, __d) # finding intersection point between slot sides and polygon face 1 right_inter = line_intersection(self.vectors[0], slot_right_side_1) left_inter = line_intersection(self.vectors[0], slot_left_side_1) # Manually ordering the points of the slot shape output = [self.points[0]] output.append(right_inter) output.append(__a) output.append(__a) output.append(__b) output.append(__b) output.append(left_inter) # index 7 # repeating the process radially for the number of faces. for side in range(1, self.sides): output.append(rotate_point(self.points[0], self.origin, math.radians(side * self.angle))) output.append(rotate_point(right_inter, self.origin, math.radians(side * self.angle))) output.append(rotate_point(__a, self.origin, math.radians(side *self.angle))) output.append(rotate_point(__a, self.origin, math.radians(side *self.angle))) output.append(rotate_point(__b, self.origin, math.radians(side *self.angle))) output.append(rotate_point(__b, self.origin, math.radians(side *self.angle))) output.append(rotate_point(left_inter, self.origin, math.radians(side * self.angle))) # creating a vector list from the points list self.output = list(zip(output, output[1:] + output[:1])) This lines are ment to create the instances of the polygon class, dxf_file and produce a DXF file as output. # program test # creating a random generated polygon a = polygon(origin, sides, radius) a.slot(material_thickness, slot_depth) # creating a DXF document and adding slot output vectors dxf_file_ = dxf_file(\"test.dxf\") a.get_vectors() dxf_file_.add_vectors_dxf(a.output)","title":"Python code explained:"},{"location":"assignments/week04/#python-program-usage-demo","text":"In this video I show the usage of the script under a Linux system using the command line to execute the script and produce the DXf output file.","title":"Python program usage demo"},{"location":"assignments/week04/#advantages-and-disadvantages","text":"The simplicity of the script allows to make further changes, thus scripting its far more complex than using a CAD software, except for OpenScad that follows the principle of my idea, I would like to say that I should stick to openscad as its more powerful and easy to distribute than a python script.","title":"Advantages and disadvantages"},{"location":"assignments/week04/#laser-cutting_1","text":"This process was really easy, the parameters I used in the Python program were: Kerf = 0.25 Material thinkness = 4.98 Sides = 8 # Can be individually set, but I used the global variable for every polygon. For the laser cutter: Speed = 80 Power = 30 % I\u2019ve made two DXF whit 4 Octagons and a third one with 6. I didn\u2019t have enough time to add a nesting algoritm and a chamfer algorithm. But I liked the simplicity of the program. First try and perfect! I was able to make different shapes with it.","title":"Laser cutting:"},{"location":"assignments/week04/#files","text":"Download InksCape SVG files Note: You need Python > 3.7 to install the ezdxf library with the following command using pip: pip install ezdxf Download Python program latest version Python file kit generated","title":"Files"},{"location":"assignments/week05/","text":"5. Electronics production \u00b6 Introduction: \u00b6 This week we started learning about electronics production. The assignment outcome it\u2019s to make a programmer board. There are for us three different types of programmer boards. SPI UPDI JTAG I\u2019ve been adviced to make the JTAG board as we\u2019re going to be able to program new efficient ARM micro-controllers for our next weeks projects. I\u2019ve contributed for the group assingment using the vbit find out more in the group page . Electronic board types: \u00b6 We have seen two different types of boards in the lab, the FR1 and the FR4. You can code check the different FR standards here. We\u2019re going to use the FR1 type this week, this is basically due to the soldering process, we know that FR4 boards are capable to be soldered using the IR oven, but FR1 will get fire in the oven, so we\u2019re already adverted that we shouldn\u2019t by any means try to solder a FR1 in the oven. Equipment: \u00b6 Check list: Roland SRM-20 Soldering iron Multimeter Microchip debugger (Flashing interface) Manufacturing methods: \u00b6 Chemical etching: On this process we use a chemical reduction process to peel of the copper traces, it\u2019s a very precise method but the waste is very toxic and needs to be disposed carefully, we are discouraged to use this method because of this. Milling: \u00b6 This is the process we\u2019re going to use this week. It\u2019s very simple yet complex in the setting up. It requires a milling machine, those can be as expensive as many tens of thousands of dollars, lately there are some more affordable brands that produce small and precise versions for a few hundred dollars, a good option for home-brew electronics production. The consumables for this machine, are the board, the sacrificial plate, and the bits that are use to cut the copper out of the material. The bits are extremely fragile specially for flat heat small diameters, so we need to be very careful at the calibration process. V-Bits: \u00b6 In the lab we have available 45, 15 and 10 degrees 0.1 mm VBits. This type of bit is \u201cV\u201d shaped, it\u2019s imprecise but very cheap. As the bit goes low in the \u201cZ\u201d axis the diameter of the cut increases and this means it\u2019s impossible to produce small traces in the board, it means also the leveling needs to be very consistent in precision. I\u2019ve made this drawing in XDesing to estimate the diameter along the bit that depends in the depth of the cut in the Z axis. Flat head bits: \u00b6 This is the bit preferable for precise milling, the diameter is very consistent and this is important to keep consistency in the traces. It also means it\u2019s more expensive than \u201cV shaped\u201d bits. This bit also has a feature called \u201cFlute\u201d its a flap that cuts the material. In the lab we have this diameters available: 0.4 mm: Used to mill the circuit paths, and it\u2019s pretty fragile. 1.0 mm: This is used to drill the outline of the PCB at the end. Precision: \u00b6 I\u2019ve tested the V bit and this is the result and comparative with the 0.4mm flat head bit: At the top its the board milled with the vbit. At the bottom the one machined with the flat head 0.4 mm. Roland SRM-20: \u00b6 It\u2019s a desktop 3D milling machine, capable of cutting several soft materials including some metals like soft aluminum and FR1 PCBs. You can find more technical details here . Check list: Allen key to replace bits. Aligned and flat sacrificial plate. Vacuum cleaner. Multimeter for continuity test. Bits of good quality. VPanel software. Working computer. FR1 PCB. Double face tape. Security assessment: \u00b6 They are a few rules for the usage of the Roland milling machine. Check list: Check for any obstacle that can collide with the cart. Clean thoughtfully using a mask and the vacuum cleaner any dust that can cause pollution. Use properly the machine, the spindle reaches nearly 8000 RPM so any fragment of the bit can cause damage if it\u2019s projected. Use eye protection like googles. Don\u2019t over-tight the holder\u2019s bolt. Don\u2019t try to cut any hard material like steel or hard aluminum. Check electrical connections and electricity reliability. Be careful to not hit any part of the machine while moving the XYZ cart. Maintenance: \u00b6 Check list: Cleaning dust every end of work. Change the sacrificial bed periodically. Don\u2019t over-tight the holder\u2019s bolt. Check periodically electrical reliability. Vpanel configuration: \u00b6 Vpanel is the software made by Roland Inc. to control the milling machine. Main functions: Axis displacement and relative location. Axis Origin setup. Axis go to home. Spindle RPM indicator. Spindle speed control. Global job speed control. Axis movement arrows. Step precision scale control. File list job. Cancel job. Calibration process: \u00b6 Steps: Calibrate X and Y axis by moving the cart using the arrows in the VPanel software. to increase the precision chnge between continue, x100, x10 and x1. Once you\u2019re in the exact desired position you should press the X/Y button under \u201cset origin point\u201d in Vpanel. To calibrate the Z axis it\u2019s a more complex process, first because we need to be able to precisely set the bit in touch of the PCB board. For this we need to use the continuity test in the multimeter, clamp the bit and move the Z axis carefully using the down arrow and changing the precision in this order: x100, x10 and x1, to prevent hitting the sacrificial bed with the bit, so you avoid breaking it. Check continuity until the indicator beeps or indicates that there\u2019s current continuity between the clamp in the bit and the PCB board. Remove the clamp, and everything else that\u2019s not required to stay inside the machine and close the lid. Start cutting process: \u00b6 Close the machine\u2019s lid. Click on the cut button on Vpanel. Select a .rml file. Press output button. Start the milling process. Preparing files to mill: \u00b6 I\u2019ve choose to make the JTAG 10 pin board. To get the files of the board I went to the Fabcademy week5 material . In the JTAG I used the next files to accomplish the board making: Traces file. Outline file. Binary file.(This one will be useful later for the flashing process) Using Mods: \u00b6 Is a software made by Prf. Neil Gershenfeld that\u2019s is broadly use in the FabLab community to program easier and visually different processes and work-flows like convert PNG image files to Roland SRM-20 cut files. Procedure: Access Mods here. Right click and select, \u201cPrograms\u201d and then \u201cOpen server program\u201d Search in the list for \u201cRoland\u201d and \u201cSRM-20\u201d. Select \u201cPCB PNG\u201d Load a PNG image containing a PCB design. I\u2019ve used this one. Configure the settings (details bellow) Download the roland milling file for the SRM-20. Repeat the process on another window prefereably for the outline of the PCB. Settings: \u00b6 Configuration for the circuit paths: Flat head 0.4 mm bit. Speed 1.5 mm/s Depth 0.1 mm Configuration for the outline: Flat head 1.0 mm bit. Speed 2 mm/s Depth 1.89 mm Cut depth 0.4 mm Milling the board: \u00b6 Followed risk assessment check lit Followed calibration process check list. Processed the files using Mods. Followed start cutting process check list. Stuffing: \u00b6 In AgriLab\u2019s electrolab the components are located in labeled plastic trays. List of components: SAMD11 SMD-CHIP microprocesor. x1 0 0 hms SMD-Resistor. x1 1 microFarads Ceramic SMD-capacitor x1 3.3 V 100 mA SMD-Regulator 10 Pin SMD male conector. x2 SAMD11 Pinout: Soldering: \u00b6 Materials: Lead-free Solder. Components. Traced PCB. Process: Power on the soldering iron and select 350 Degrees of Temp. First cover with solder one of the pins in the PCB as a first step mechanical connection. This is helpful for SMD soldering since the components are very small and need a precise alignment. Place the SMD components starting with the ones in the center of the board and progressing from the inside to the outside and leaving at the end the Pin conectors. The soldering process it\u2019s very complex and requires expertise to handle the soldering iron. Results: Flashing: \u00b6 Conections: Device recognition in Linux: Using EDBG ./edbg -l Using lsusb lsusb Data: - Manufacturer: Alex Taradov - Serial: AC80EAC2 Capture: I\u2019ve used EDBG compiled from source. Clonning EDBG Github repository: git clone https://github.com/ataradov/edbg.git Installing EDBG requirements for Fedora Linux: sudo dnf install libudev-devel Inside the EDBG directory executed: make all To execute EDBG and see the help: ./edbg -h To access peripherals like the ATMEL USB interface debugger, Administrator rights are needed: Parameters: -t samd11 t is for Target and SAMD11 it\u2019s the family chip of the micro-processor used in the board. -bpv b is for Verbose it\u2019s meant to show all the output information in the process. p is for Programming, we\u2019re going to \u201cflash\u201d the binary file we downloaded previously. v is for Verify that the program was flashed correctly. -f free_dap_d11c_mini.bin f is for File and \u201cfree_dap_d11c_mini.bin\u201d it\u2019s the name of the binary file that contains the instructions or program for our programmer. Debugging: \u00b6 Electrical continuity test: \u00b6 Equipment: Power source. Clamps. Multimeter. Procedure: Attatch the clamps from the positive output of the power source to the positive side of the USB, check the PINOUT using this image . Detect the VCC points and the expected voltage in each point, in this board we have a 5 Volts supply and in the circuit there are 3.3 Volts after the conections of the regulator. Test those points looking for a 3.3 Volts measure. Detect the ground points and check voltage continuity with them, similarly to the Z axis calibration process of the milling machine. Look for any missing component, damaged trace or shortcut. Hero shot: \u00b6","title":"5. Electronics production"},{"location":"assignments/week05/#5-electronics-production","text":"","title":"5. Electronics production"},{"location":"assignments/week05/#introduction","text":"This week we started learning about electronics production. The assignment outcome it\u2019s to make a programmer board. There are for us three different types of programmer boards. SPI UPDI JTAG I\u2019ve been adviced to make the JTAG board as we\u2019re going to be able to program new efficient ARM micro-controllers for our next weeks projects. I\u2019ve contributed for the group assingment using the vbit find out more in the group page .","title":"Introduction:"},{"location":"assignments/week05/#electronic-board-types","text":"We have seen two different types of boards in the lab, the FR1 and the FR4. You can code check the different FR standards here. We\u2019re going to use the FR1 type this week, this is basically due to the soldering process, we know that FR4 boards are capable to be soldered using the IR oven, but FR1 will get fire in the oven, so we\u2019re already adverted that we shouldn\u2019t by any means try to solder a FR1 in the oven.","title":"Electronic board types:"},{"location":"assignments/week05/#equipment","text":"Check list: Roland SRM-20 Soldering iron Multimeter Microchip debugger (Flashing interface)","title":"Equipment:"},{"location":"assignments/week05/#manufacturing-methods","text":"Chemical etching: On this process we use a chemical reduction process to peel of the copper traces, it\u2019s a very precise method but the waste is very toxic and needs to be disposed carefully, we are discouraged to use this method because of this.","title":"Manufacturing methods:"},{"location":"assignments/week05/#milling","text":"This is the process we\u2019re going to use this week. It\u2019s very simple yet complex in the setting up. It requires a milling machine, those can be as expensive as many tens of thousands of dollars, lately there are some more affordable brands that produce small and precise versions for a few hundred dollars, a good option for home-brew electronics production. The consumables for this machine, are the board, the sacrificial plate, and the bits that are use to cut the copper out of the material. The bits are extremely fragile specially for flat heat small diameters, so we need to be very careful at the calibration process.","title":"Milling:"},{"location":"assignments/week05/#v-bits","text":"In the lab we have available 45, 15 and 10 degrees 0.1 mm VBits. This type of bit is \u201cV\u201d shaped, it\u2019s imprecise but very cheap. As the bit goes low in the \u201cZ\u201d axis the diameter of the cut increases and this means it\u2019s impossible to produce small traces in the board, it means also the leveling needs to be very consistent in precision. I\u2019ve made this drawing in XDesing to estimate the diameter along the bit that depends in the depth of the cut in the Z axis.","title":"V-Bits:"},{"location":"assignments/week05/#flat-head-bits","text":"This is the bit preferable for precise milling, the diameter is very consistent and this is important to keep consistency in the traces. It also means it\u2019s more expensive than \u201cV shaped\u201d bits. This bit also has a feature called \u201cFlute\u201d its a flap that cuts the material. In the lab we have this diameters available: 0.4 mm: Used to mill the circuit paths, and it\u2019s pretty fragile. 1.0 mm: This is used to drill the outline of the PCB at the end.","title":"Flat head bits:"},{"location":"assignments/week05/#precision","text":"I\u2019ve tested the V bit and this is the result and comparative with the 0.4mm flat head bit: At the top its the board milled with the vbit. At the bottom the one machined with the flat head 0.4 mm.","title":"Precision:"},{"location":"assignments/week05/#roland-srm-20","text":"It\u2019s a desktop 3D milling machine, capable of cutting several soft materials including some metals like soft aluminum and FR1 PCBs. You can find more technical details here . Check list: Allen key to replace bits. Aligned and flat sacrificial plate. Vacuum cleaner. Multimeter for continuity test. Bits of good quality. VPanel software. Working computer. FR1 PCB. Double face tape.","title":"Roland SRM-20:"},{"location":"assignments/week05/#security-assessment","text":"They are a few rules for the usage of the Roland milling machine. Check list: Check for any obstacle that can collide with the cart. Clean thoughtfully using a mask and the vacuum cleaner any dust that can cause pollution. Use properly the machine, the spindle reaches nearly 8000 RPM so any fragment of the bit can cause damage if it\u2019s projected. Use eye protection like googles. Don\u2019t over-tight the holder\u2019s bolt. Don\u2019t try to cut any hard material like steel or hard aluminum. Check electrical connections and electricity reliability. Be careful to not hit any part of the machine while moving the XYZ cart.","title":"Security assessment:"},{"location":"assignments/week05/#maintenance","text":"Check list: Cleaning dust every end of work. Change the sacrificial bed periodically. Don\u2019t over-tight the holder\u2019s bolt. Check periodically electrical reliability.","title":"Maintenance:"},{"location":"assignments/week05/#vpanel-configuration","text":"Vpanel is the software made by Roland Inc. to control the milling machine. Main functions: Axis displacement and relative location. Axis Origin setup. Axis go to home. Spindle RPM indicator. Spindle speed control. Global job speed control. Axis movement arrows. Step precision scale control. File list job. Cancel job.","title":"Vpanel configuration:"},{"location":"assignments/week05/#calibration-process","text":"Steps: Calibrate X and Y axis by moving the cart using the arrows in the VPanel software. to increase the precision chnge between continue, x100, x10 and x1. Once you\u2019re in the exact desired position you should press the X/Y button under \u201cset origin point\u201d in Vpanel. To calibrate the Z axis it\u2019s a more complex process, first because we need to be able to precisely set the bit in touch of the PCB board. For this we need to use the continuity test in the multimeter, clamp the bit and move the Z axis carefully using the down arrow and changing the precision in this order: x100, x10 and x1, to prevent hitting the sacrificial bed with the bit, so you avoid breaking it. Check continuity until the indicator beeps or indicates that there\u2019s current continuity between the clamp in the bit and the PCB board. Remove the clamp, and everything else that\u2019s not required to stay inside the machine and close the lid.","title":"Calibration process:"},{"location":"assignments/week05/#start-cutting-process","text":"Close the machine\u2019s lid. Click on the cut button on Vpanel. Select a .rml file. Press output button. Start the milling process.","title":"Start cutting process:"},{"location":"assignments/week05/#preparing-files-to-mill","text":"I\u2019ve choose to make the JTAG 10 pin board. To get the files of the board I went to the Fabcademy week5 material . In the JTAG I used the next files to accomplish the board making: Traces file. Outline file. Binary file.(This one will be useful later for the flashing process)","title":"Preparing files to mill:"},{"location":"assignments/week05/#using-mods","text":"Is a software made by Prf. Neil Gershenfeld that\u2019s is broadly use in the FabLab community to program easier and visually different processes and work-flows like convert PNG image files to Roland SRM-20 cut files. Procedure: Access Mods here. Right click and select, \u201cPrograms\u201d and then \u201cOpen server program\u201d Search in the list for \u201cRoland\u201d and \u201cSRM-20\u201d. Select \u201cPCB PNG\u201d Load a PNG image containing a PCB design. I\u2019ve used this one. Configure the settings (details bellow) Download the roland milling file for the SRM-20. Repeat the process on another window prefereably for the outline of the PCB.","title":"Using Mods:"},{"location":"assignments/week05/#settings","text":"Configuration for the circuit paths: Flat head 0.4 mm bit. Speed 1.5 mm/s Depth 0.1 mm Configuration for the outline: Flat head 1.0 mm bit. Speed 2 mm/s Depth 1.89 mm Cut depth 0.4 mm","title":"Settings:"},{"location":"assignments/week05/#milling-the-board","text":"Followed risk assessment check lit Followed calibration process check list. Processed the files using Mods. Followed start cutting process check list.","title":"Milling the board:"},{"location":"assignments/week05/#stuffing","text":"In AgriLab\u2019s electrolab the components are located in labeled plastic trays. List of components: SAMD11 SMD-CHIP microprocesor. x1 0 0 hms SMD-Resistor. x1 1 microFarads Ceramic SMD-capacitor x1 3.3 V 100 mA SMD-Regulator 10 Pin SMD male conector. x2 SAMD11 Pinout:","title":"Stuffing:"},{"location":"assignments/week05/#soldering","text":"Materials: Lead-free Solder. Components. Traced PCB. Process: Power on the soldering iron and select 350 Degrees of Temp. First cover with solder one of the pins in the PCB as a first step mechanical connection. This is helpful for SMD soldering since the components are very small and need a precise alignment. Place the SMD components starting with the ones in the center of the board and progressing from the inside to the outside and leaving at the end the Pin conectors. The soldering process it\u2019s very complex and requires expertise to handle the soldering iron. Results:","title":"Soldering:"},{"location":"assignments/week05/#flashing","text":"Conections: Device recognition in Linux: Using EDBG ./edbg -l Using lsusb lsusb Data: - Manufacturer: Alex Taradov - Serial: AC80EAC2 Capture: I\u2019ve used EDBG compiled from source. Clonning EDBG Github repository: git clone https://github.com/ataradov/edbg.git Installing EDBG requirements for Fedora Linux: sudo dnf install libudev-devel Inside the EDBG directory executed: make all To execute EDBG and see the help: ./edbg -h To access peripherals like the ATMEL USB interface debugger, Administrator rights are needed: Parameters: -t samd11 t is for Target and SAMD11 it\u2019s the family chip of the micro-processor used in the board. -bpv b is for Verbose it\u2019s meant to show all the output information in the process. p is for Programming, we\u2019re going to \u201cflash\u201d the binary file we downloaded previously. v is for Verify that the program was flashed correctly. -f free_dap_d11c_mini.bin f is for File and \u201cfree_dap_d11c_mini.bin\u201d it\u2019s the name of the binary file that contains the instructions or program for our programmer.","title":"Flashing:"},{"location":"assignments/week05/#debugging","text":"","title":"Debugging:"},{"location":"assignments/week05/#electrical-continuity-test","text":"Equipment: Power source. Clamps. Multimeter. Procedure: Attatch the clamps from the positive output of the power source to the positive side of the USB, check the PINOUT using this image . Detect the VCC points and the expected voltage in each point, in this board we have a 5 Volts supply and in the circuit there are 3.3 Volts after the conections of the regulator. Test those points looking for a 3.3 Volts measure. Detect the ground points and check voltage continuity with them, similarly to the Z axis calibration process of the milling machine. Look for any missing component, damaged trace or shortcut.","title":"Electrical continuity test:"},{"location":"assignments/week05/#hero-shot","text":"","title":"Hero shot:"},{"location":"assignments/week06/","text":"6. 3D Scanning and printing \u00b6 Introduction: \u00b6 This week we started on Friday to Print a benchmark model. More details in the group assignment page. Then we had the chance to look at the 3D scanners available at the FabLab. Scanning: \u00b6 Introduction: This is the process of digitizing the shape of a physical object, the size can be relative but some scanners are specialized to keep dimensional accuracy for reverse engineering. There are different technologies for scanning, in the FabLab we have optical light projection stereo scanners. Optical line scanning devices in the lab: Requirements: Einscan Pro Plus device. Rotation plate. Shinning 3D EinScan Software . Meshlab EinScan Pro +: \u00b6 If you have a small object, less than 20 * 20 * 20 cm, choose to scan with the rotation plate, if not choose the hand-held scanning. If your object is as big as a room, and use the tracking stickers, although sticker are also used to improve the scanning of small objects without enough surfaces for matching in the rebuild process. If you\u2019re using the rotation plate place the object to scan in a position with any curved face on top. If your object has transparent or reflective surfaces, coat the all those surfaces with a thin layer of baby powder. This is used to improve the reflection of the light of the scan. Open EinScan Software. Connect the EinScan Pro device to a computer using the USB cable. Detailed computer specs here. Choose the \u201cFixed scan\u201d option. Create a new project group. Start the scan by pressing the play button. Press play to start the scanning process. Configure the step angle, for a full detailed scan choose the higher number (180, a scan every 2 degrees.) Don\u2019t move the object during the scanning process, avoid any interference between the scanner and the object. Once the first scan pass has finished, change the position of the object preserving one or more faces from the first pass visible to the scanner, so the software can unify the next scan passes. During the scans it may be some noise or unwanted points in the model, use the selection tools to remove all the unwanted points, press shit and click to select and backspace to delete. Keep scanning and turning the object in the plate changing the position until all the model gets covered. Once the model gets completely scanned look for any green sphere and remove it, those are mark tracking points that can damage your model. Click on the mesh model button to create a mesh. Process the mesh in the post-processing step, you can reduce, smooth, simplify and cover holes in the model. Save the model as a STL file. Meshlab: \u00b6 Import the STL model output from the EinScan Software. Filter the model, under the menu Filters>Cleaning and Repairing: Choose as many repair options as the model needs. save the new filtered STL file. Settings used: - Surface reconstruction VCG: - Voxel side (absolute and %) = 1.0295, 1.000 - Sub Volume splitting, 1. - Geodesic weighting, 2. - Show result, True. - Volume Laplacian iteration, 2. - Widering, 3. - Vertex splatting, False. - Post merge simplification, False. - Pre-smooth iteration, 3. Outcome: Viewed using Layout Editor 3D My file was about 110 MB, after Meshlab it was reduced to 100 MB, still to big to be uploaded to the GitLab Repo, even compressed it was about 57 MB. Download file on drive. complete. Xbox Kinect: \u00b6 Credits to Theo Gautier for the photo. Note: We made this practice together. Requirements: Power supply 12 Volts. XBOX to USB and 12 Volts adapter. XBOX 360 kinect. Computer prefereably with at least 16 GB of RAM a dedicated GPU card. Skanect. Meshmixer. Workflow: Open Skanect and plug the USB converter to current and the a USB port in the computer. While on Skanect follow the steps to stand at a optimal distance from the scanned objective. If you\u2019re to close the color of the preview will change to blue, if you\u2019re too far it will change to red. Keep the distance until the color of the preview model stays at green color. Move around the object to scan until you cover all the sides and details. If Skanect loses track it will ask you to return to a specific position, so try to match the photo capture of the position and keep moving around the object to scan. Once you have finished the scan, process the points, create a mesh and export the model as STL. My team mate Theo Gautier was my model to scan, this is a photo of him before the process in the MediaLab of Agrilab Fablab And this is the model being processed in Meshmixer. FDM: \u00b6 Description: It\u2019s a modern manufacturing process that uses CNC machines to build 3D models, has recently gained a lot of attention due to the availability of desktop 3D print machines to make plastic models. Parts: General structure. Power supply and control unit. Stepper motors. Control board. Motor drivers. Build plate or bed. Cart. X, Y, Z. Rails. Spool holder. Filament spool. Nozzle. Heating unit for nozzle. Thermal sensors. Leveling sensors. Extruder unit. Security assessment: \u00b6 Plastic particles in air: As in the printing process we are heating plastics and then use a fan to cool down the layers it\u2019s very important to know that we\u2019re actually emitting dangerous plastic particles to the air. So to prevent any hazardous environment follow this basic checklist: Avoid the use of dangerous materials like ABS, instead try to use PLA if the mechanical properties are not important for your piece. Use a HEPA air filter system in the room and keep it turn on while printing in the room. Keep a good maintenance of the filter, replacing or washing periodically the filter cartridges. Once your printing is running and everything seems working fine, stay away from the room. After every work ventilate the room by opening the windows. If possible work with a closed cased 3D printer. If you need to stay close in the same room of the printer for large amounts of time, use a face mask or particle gas mask. Detailed information here. Fire risk: As the FDM printing process requires high temperatures to melt the plastic, there\u2019s some risk associated to the usage of the machine. Although current 3D printers incorporate overheating control to prevent fires using thermo-couple wire sensors located in the heating extrude elements and the heating bed, its still a safety assurance to have extra preventing measures. Checklist to prevent fires while 3D printing: Check that the heat sensors work correctly. Look for any sign of wearing of the insulation that covers the nozzle. Look for any melted parts of the 3D printer that can indicate a over-high temperature. Take a look at the board components and try to identify any over heating on the motor drivers. Use safe temperature materials, there are some exotic mixes that require higher temperatures. Check that all the cooling fans are working correctly. Check if you have the right settings for the material. Try to split large models into ~8 to 10 hours parts. Avoid prints that are very long. Install Octoprint or astroprint to monitor online your prints. Place the 3D printer in a safe environment far away from any fast combustion materials or any other temperature sensitive chemicals. Have a fire extinguisher at hand. Detailed information here. Cross contamination: There are some people interested on food-safe or bio-medical 3D printing parts. But there\u2019s some risk associated to the FDM process that makes very difficult to make safe printed parts. Food-safe manufacturing checklist: Change the brass extruder nozzle for one made of lead-free stainless steel. Use a closed cased 3D printer. Use a lead-free glass for the printer bed. Use a lead-free material. Print with the higher resolution to reduce the amount of porosity on the part surface. For pos-processing you can cover the part with Teflon, Transparent resin or try electroplating. Food-safe use of 3D printed parts: Clean immediately after every usage, to avoid the food impregnate on the part surface. Don\u2019t put any reactive substance in the 3D printed part. If you\u2019re using a dish washing machine, check the temperatures to avoid any deformation on the part. Be conscious that there\u2019s no possibility to have a long-lasting 3D print part, so you need to dispose the part after it shows signs of wearing in the food-safe coating. Detailed information here. Disposing and recycling: The process of recycling 3D printed plastics requires the use of equipment to crush, melt and extrude new filament or other objects. Detailed information here. Precious plastic its also a project that shares machine building blueprints and methods to establish a plastic recycling station. The objective of recycling 3D printed residues its to decrease the environmental impact of the process. More information about this topic here on this research paper. Calibration: \u00b6 Checklist: Turn on the printer. Make the cart go to the home position. Disable steppers. Move the cart to the closest corner of the build plate. Using a small piece of normal bond paper, check the Z axis distance to the plate by passing through the nozzle and the build platform. If you feel the paper passing too tight, lose the Z axis bolt, until the paper passes with a slight friction resistance. Move to the next corner and repeat the steps 3 to 5. Once all the corners are adjusted move to the center. Enable steppers again and make a test print. If the print sticks to the printing bed the calibration was successful. If not, repeat the process, until it\u2019s successful. Troubleshooting: \u00b6 Print not sticking to build plate: When the machine Z axis is far from the build plate it\u2019s very likely that the printing is not going to stick to the bed. If that happens you need to check the Z axis calibration, follow the checklist. Warp: When the build plate is too cold, the plastic shrinks quickly and the difference of contraction between the first layers and the current ones it makes the piece to warp and detach to the build plate. Elephant feet: When the Z axis is too close to the bed, the fused filament can make a bigger base that looks that a elephant feet. Melted points: When the temperature it\u2019s too high and the speed it\u2019s too slow, the filament will look very low detailed and melted looking. FMD work: \u00b6 Requirements: STL 3D model. Slicing software. Filament material spool. Slicing using Cura \u00b6 Cura is a software that converts STL files into GCODE that\u2019s used by the 3D printing. Import the STL file to print. Place it in to the build plated in one plain side. Choose the orientation avoiding the largest side in the Z or Y axis. Although my instructor Florent Lemaire pointed that this is not a completely correct answer. Set the layer thickness optimizing time and material. Set the temperature of the nozzle following the material recommendations. Set the build plate temperature depending on the temperature of the room and following the material labeled recommendations. Set the speed of the printing process. Set the infill to a conservative percentage to avoid material wasting, but optimizing mechanical properties of the part. Slice Save the GCODE file in a SD card or USB drive to upload it to the machine. Settings: Resolution 0.10 mm layer. No supports. Skirt width 10 mm. Skirt distance from object 0.0mm Skirt layers, 1. Skirt layer height 0.1 mm. Process: Ensure the machine is calibrated. Ensure that there\u2019s enough material for the printing job. Clean the build plate. Load the GCODE file. Start the printing process. Take care of any extruded filament during the pre-heating process. Those can mess up the first layer of the printing. Once the process started, take care of the temperature of the room and follow the risk assessment checklists. Once the process has finished, separate the printed part from the build platform using a clean spatula. Check dimension accuracy if needed. Take notes of the configurations you used on a document to keep a quality control data base. On this picture, my instructor Florent Lemaire pointed the skipped layers in the printing. The printing process was made overnight on Friday so I didn\u2019t had the chance to inspect the final result until next Monday, it could be due to a clogged nozzle or over-tighten Z axis. Unfortunately I didn\u2019t perform an extrusion purge test on the machine before starting the process. Result: \u00b6 SLA: \u00b6 Introduction: Stereo-lithography it\u2019s a manufacturing process that makes use of photo-reactive resins and light in a specific wavelength, to build 3D models. SLA Workflow with Formlabs form 2 : \u00b6 Machine: Formlabs Form 2 Material: Grey standard Formlabs UV resin Software: Formlabs preform Requirements: SLA printer (Formlabs form 2). Resin cartridge. Isopropyl alcohol. Plastic Container. Paper towels. Disposable globes. Clean Spatula. Fabric Tissue. UV curing chamber. Washer for Automatically washing. Slicer software for SLA. USB cable or SD memory to load files. Preparing files: Desing a model and export it as a STL file. Open Preform. Click on the \u201cmagick wand button\u201d Save the file and send it to the machine. Process: Turn on the printer. Pulsing the power button. Keep the lid closed as much as possible, light contaminates the resin by curing it. Be quick at open and manipulating anything inside the print chamber. Remove the tank cover. Open the vent in the cartridge by pushing the mechanical vent button. Place the building plate in the holder. Upload the file to print using a USB memory stick, USB cable or network using Preform software. Check before confirming that the chamber is free of any obstacles and the resin is flowing as expected. Start the printing process. If after the first layers you detect any anomaly in the printing like lose supports or detached parts, stop the printing. If the printing its successful, proceed to remove the building plate. Use paper towels to clean the excess of liquid in the building plate, not in the model. Don\u2019t pour any of the residual resin in the tank. Remove the printed part carefully using a clean spatula. Place the part in the washing machine. Set the time depending on the size and resin type. Once the washing process has finished, remove carefully the part from the machine using globes and avoiding breathing or touching the Isopropyl alcohol. Place the part inside the curing chamber. Set the temperature and time using the information available here . Once the curing process has finished, carefully remove the supports using a pincer or knife cutter. The print has finished. Settings \u00b6 0.1 resolution. 31 C temperature. Material: standard grey resin formlabs. Washing time 15 mins. Used 2-propanol Isopropyl Alcohol. Curing time 20 mins at 60 C. Visual reference: \u00b6 Estimated printing time: Opening valve: Build plate: Globes and paper towels are needed at any moment to manipulate the prints: Raising bed holder lock: 3D Printer chamber opened: Printing temperature of resin 31 C: Building plate with piece: Removing printed part from build plate with spatula: Cleaning build plate with paper towels: Isopropyl alcohol for the washing machine 2-propanol: About to submerge the printing in the washing machine: Washing machine time elapse: Final result: Cleaning and chemical disposing: Do not wash the resin with water or Isopropyl alcohol in the sink. Use paper towels, and don\u2019t dispose any of it in the paper recycling. Expose the used towers to sunlight to cure the plastic. Find a chemical disposal container to dispose the paper towels. Assignment Outcome: \u00b6 3D model: \u00b6 This is the first prototype of the electro-conductive sensor for my final project. As I need the part to be watertight I choose SLA printing, then as We don\u2019t have transparent resin available I made a window on my part to place a transparent plate. I followed design principles using nerves and reinforcing the unions using chamflers or rounding. It will be very difficult for a 5 axis milling machine to reproduce the shape, but it\u2019s possible to make 2 parts mold of course. More info about my project here. Part for printing: Assembly on 3D: Preform: Printing: Parameters: | Material | Grey V4 | | Printing time | 89 min | | Washing time | 30 min | | Curing time | 36 min | | Curing temperature | 60 C | Assembly: \u00b6 Parts: Printed part. Laser cutted window. 6 M3 15 mm Bolts. 6 M3 rubber spacers. 6 M3 hexagonal nuts. View 1: View 2: With Electrodes: Design fails: The rubber seal holder it\u2019s too small, the electrode holders are too big and the nuts can\u2019t touch the piece so I\u2019ll need to make it wider. For the next iteration. Files: \u00b6 Download","title":"6. 3D Scanning and printing"},{"location":"assignments/week06/#6-3d-scanning-and-printing","text":"","title":"6. 3D Scanning and printing"},{"location":"assignments/week06/#introduction","text":"This week we started on Friday to Print a benchmark model. More details in the group assignment page. Then we had the chance to look at the 3D scanners available at the FabLab.","title":"Introduction:"},{"location":"assignments/week06/#scanning","text":"Introduction: This is the process of digitizing the shape of a physical object, the size can be relative but some scanners are specialized to keep dimensional accuracy for reverse engineering. There are different technologies for scanning, in the FabLab we have optical light projection stereo scanners. Optical line scanning devices in the lab: Requirements: Einscan Pro Plus device. Rotation plate. Shinning 3D EinScan Software . Meshlab","title":"Scanning:"},{"location":"assignments/week06/#einscan-pro","text":"If you have a small object, less than 20 * 20 * 20 cm, choose to scan with the rotation plate, if not choose the hand-held scanning. If your object is as big as a room, and use the tracking stickers, although sticker are also used to improve the scanning of small objects without enough surfaces for matching in the rebuild process. If you\u2019re using the rotation plate place the object to scan in a position with any curved face on top. If your object has transparent or reflective surfaces, coat the all those surfaces with a thin layer of baby powder. This is used to improve the reflection of the light of the scan. Open EinScan Software. Connect the EinScan Pro device to a computer using the USB cable. Detailed computer specs here. Choose the \u201cFixed scan\u201d option. Create a new project group. Start the scan by pressing the play button. Press play to start the scanning process. Configure the step angle, for a full detailed scan choose the higher number (180, a scan every 2 degrees.) Don\u2019t move the object during the scanning process, avoid any interference between the scanner and the object. Once the first scan pass has finished, change the position of the object preserving one or more faces from the first pass visible to the scanner, so the software can unify the next scan passes. During the scans it may be some noise or unwanted points in the model, use the selection tools to remove all the unwanted points, press shit and click to select and backspace to delete. Keep scanning and turning the object in the plate changing the position until all the model gets covered. Once the model gets completely scanned look for any green sphere and remove it, those are mark tracking points that can damage your model. Click on the mesh model button to create a mesh. Process the mesh in the post-processing step, you can reduce, smooth, simplify and cover holes in the model. Save the model as a STL file.","title":"EinScan Pro +:"},{"location":"assignments/week06/#meshlab","text":"Import the STL model output from the EinScan Software. Filter the model, under the menu Filters>Cleaning and Repairing: Choose as many repair options as the model needs. save the new filtered STL file. Settings used: - Surface reconstruction VCG: - Voxel side (absolute and %) = 1.0295, 1.000 - Sub Volume splitting, 1. - Geodesic weighting, 2. - Show result, True. - Volume Laplacian iteration, 2. - Widering, 3. - Vertex splatting, False. - Post merge simplification, False. - Pre-smooth iteration, 3. Outcome: Viewed using Layout Editor 3D My file was about 110 MB, after Meshlab it was reduced to 100 MB, still to big to be uploaded to the GitLab Repo, even compressed it was about 57 MB. Download file on drive. complete.","title":"Meshlab:"},{"location":"assignments/week06/#xbox-kinect","text":"Credits to Theo Gautier for the photo. Note: We made this practice together. Requirements: Power supply 12 Volts. XBOX to USB and 12 Volts adapter. XBOX 360 kinect. Computer prefereably with at least 16 GB of RAM a dedicated GPU card. Skanect. Meshmixer. Workflow: Open Skanect and plug the USB converter to current and the a USB port in the computer. While on Skanect follow the steps to stand at a optimal distance from the scanned objective. If you\u2019re to close the color of the preview will change to blue, if you\u2019re too far it will change to red. Keep the distance until the color of the preview model stays at green color. Move around the object to scan until you cover all the sides and details. If Skanect loses track it will ask you to return to a specific position, so try to match the photo capture of the position and keep moving around the object to scan. Once you have finished the scan, process the points, create a mesh and export the model as STL. My team mate Theo Gautier was my model to scan, this is a photo of him before the process in the MediaLab of Agrilab Fablab And this is the model being processed in Meshmixer.","title":"Xbox Kinect:"},{"location":"assignments/week06/#fdm","text":"Description: It\u2019s a modern manufacturing process that uses CNC machines to build 3D models, has recently gained a lot of attention due to the availability of desktop 3D print machines to make plastic models. Parts: General structure. Power supply and control unit. Stepper motors. Control board. Motor drivers. Build plate or bed. Cart. X, Y, Z. Rails. Spool holder. Filament spool. Nozzle. Heating unit for nozzle. Thermal sensors. Leveling sensors. Extruder unit.","title":"FDM:"},{"location":"assignments/week06/#security-assessment","text":"Plastic particles in air: As in the printing process we are heating plastics and then use a fan to cool down the layers it\u2019s very important to know that we\u2019re actually emitting dangerous plastic particles to the air. So to prevent any hazardous environment follow this basic checklist: Avoid the use of dangerous materials like ABS, instead try to use PLA if the mechanical properties are not important for your piece. Use a HEPA air filter system in the room and keep it turn on while printing in the room. Keep a good maintenance of the filter, replacing or washing periodically the filter cartridges. Once your printing is running and everything seems working fine, stay away from the room. After every work ventilate the room by opening the windows. If possible work with a closed cased 3D printer. If you need to stay close in the same room of the printer for large amounts of time, use a face mask or particle gas mask. Detailed information here. Fire risk: As the FDM printing process requires high temperatures to melt the plastic, there\u2019s some risk associated to the usage of the machine. Although current 3D printers incorporate overheating control to prevent fires using thermo-couple wire sensors located in the heating extrude elements and the heating bed, its still a safety assurance to have extra preventing measures. Checklist to prevent fires while 3D printing: Check that the heat sensors work correctly. Look for any sign of wearing of the insulation that covers the nozzle. Look for any melted parts of the 3D printer that can indicate a over-high temperature. Take a look at the board components and try to identify any over heating on the motor drivers. Use safe temperature materials, there are some exotic mixes that require higher temperatures. Check that all the cooling fans are working correctly. Check if you have the right settings for the material. Try to split large models into ~8 to 10 hours parts. Avoid prints that are very long. Install Octoprint or astroprint to monitor online your prints. Place the 3D printer in a safe environment far away from any fast combustion materials or any other temperature sensitive chemicals. Have a fire extinguisher at hand. Detailed information here. Cross contamination: There are some people interested on food-safe or bio-medical 3D printing parts. But there\u2019s some risk associated to the FDM process that makes very difficult to make safe printed parts. Food-safe manufacturing checklist: Change the brass extruder nozzle for one made of lead-free stainless steel. Use a closed cased 3D printer. Use a lead-free glass for the printer bed. Use a lead-free material. Print with the higher resolution to reduce the amount of porosity on the part surface. For pos-processing you can cover the part with Teflon, Transparent resin or try electroplating. Food-safe use of 3D printed parts: Clean immediately after every usage, to avoid the food impregnate on the part surface. Don\u2019t put any reactive substance in the 3D printed part. If you\u2019re using a dish washing machine, check the temperatures to avoid any deformation on the part. Be conscious that there\u2019s no possibility to have a long-lasting 3D print part, so you need to dispose the part after it shows signs of wearing in the food-safe coating. Detailed information here. Disposing and recycling: The process of recycling 3D printed plastics requires the use of equipment to crush, melt and extrude new filament or other objects. Detailed information here. Precious plastic its also a project that shares machine building blueprints and methods to establish a plastic recycling station. The objective of recycling 3D printed residues its to decrease the environmental impact of the process. More information about this topic here on this research paper.","title":"Security assessment:"},{"location":"assignments/week06/#calibration","text":"Checklist: Turn on the printer. Make the cart go to the home position. Disable steppers. Move the cart to the closest corner of the build plate. Using a small piece of normal bond paper, check the Z axis distance to the plate by passing through the nozzle and the build platform. If you feel the paper passing too tight, lose the Z axis bolt, until the paper passes with a slight friction resistance. Move to the next corner and repeat the steps 3 to 5. Once all the corners are adjusted move to the center. Enable steppers again and make a test print. If the print sticks to the printing bed the calibration was successful. If not, repeat the process, until it\u2019s successful.","title":"Calibration:"},{"location":"assignments/week06/#troubleshooting","text":"Print not sticking to build plate: When the machine Z axis is far from the build plate it\u2019s very likely that the printing is not going to stick to the bed. If that happens you need to check the Z axis calibration, follow the checklist. Warp: When the build plate is too cold, the plastic shrinks quickly and the difference of contraction between the first layers and the current ones it makes the piece to warp and detach to the build plate. Elephant feet: When the Z axis is too close to the bed, the fused filament can make a bigger base that looks that a elephant feet. Melted points: When the temperature it\u2019s too high and the speed it\u2019s too slow, the filament will look very low detailed and melted looking.","title":"Troubleshooting:"},{"location":"assignments/week06/#fmd-work","text":"Requirements: STL 3D model. Slicing software. Filament material spool.","title":"FMD work:"},{"location":"assignments/week06/#slicing-using-cura","text":"Cura is a software that converts STL files into GCODE that\u2019s used by the 3D printing. Import the STL file to print. Place it in to the build plated in one plain side. Choose the orientation avoiding the largest side in the Z or Y axis. Although my instructor Florent Lemaire pointed that this is not a completely correct answer. Set the layer thickness optimizing time and material. Set the temperature of the nozzle following the material recommendations. Set the build plate temperature depending on the temperature of the room and following the material labeled recommendations. Set the speed of the printing process. Set the infill to a conservative percentage to avoid material wasting, but optimizing mechanical properties of the part. Slice Save the GCODE file in a SD card or USB drive to upload it to the machine. Settings: Resolution 0.10 mm layer. No supports. Skirt width 10 mm. Skirt distance from object 0.0mm Skirt layers, 1. Skirt layer height 0.1 mm. Process: Ensure the machine is calibrated. Ensure that there\u2019s enough material for the printing job. Clean the build plate. Load the GCODE file. Start the printing process. Take care of any extruded filament during the pre-heating process. Those can mess up the first layer of the printing. Once the process started, take care of the temperature of the room and follow the risk assessment checklists. Once the process has finished, separate the printed part from the build platform using a clean spatula. Check dimension accuracy if needed. Take notes of the configurations you used on a document to keep a quality control data base. On this picture, my instructor Florent Lemaire pointed the skipped layers in the printing. The printing process was made overnight on Friday so I didn\u2019t had the chance to inspect the final result until next Monday, it could be due to a clogged nozzle or over-tighten Z axis. Unfortunately I didn\u2019t perform an extrusion purge test on the machine before starting the process.","title":"Slicing using Cura"},{"location":"assignments/week06/#result","text":"","title":"Result:"},{"location":"assignments/week06/#sla","text":"Introduction: Stereo-lithography it\u2019s a manufacturing process that makes use of photo-reactive resins and light in a specific wavelength, to build 3D models.","title":"SLA:"},{"location":"assignments/week06/#sla-workflow-with-formlabs-form-2","text":"Machine: Formlabs Form 2 Material: Grey standard Formlabs UV resin Software: Formlabs preform Requirements: SLA printer (Formlabs form 2). Resin cartridge. Isopropyl alcohol. Plastic Container. Paper towels. Disposable globes. Clean Spatula. Fabric Tissue. UV curing chamber. Washer for Automatically washing. Slicer software for SLA. USB cable or SD memory to load files. Preparing files: Desing a model and export it as a STL file. Open Preform. Click on the \u201cmagick wand button\u201d Save the file and send it to the machine. Process: Turn on the printer. Pulsing the power button. Keep the lid closed as much as possible, light contaminates the resin by curing it. Be quick at open and manipulating anything inside the print chamber. Remove the tank cover. Open the vent in the cartridge by pushing the mechanical vent button. Place the building plate in the holder. Upload the file to print using a USB memory stick, USB cable or network using Preform software. Check before confirming that the chamber is free of any obstacles and the resin is flowing as expected. Start the printing process. If after the first layers you detect any anomaly in the printing like lose supports or detached parts, stop the printing. If the printing its successful, proceed to remove the building plate. Use paper towels to clean the excess of liquid in the building plate, not in the model. Don\u2019t pour any of the residual resin in the tank. Remove the printed part carefully using a clean spatula. Place the part in the washing machine. Set the time depending on the size and resin type. Once the washing process has finished, remove carefully the part from the machine using globes and avoiding breathing or touching the Isopropyl alcohol. Place the part inside the curing chamber. Set the temperature and time using the information available here . Once the curing process has finished, carefully remove the supports using a pincer or knife cutter. The print has finished.","title":"SLA Workflow with Formlabs form 2:"},{"location":"assignments/week06/#settings","text":"0.1 resolution. 31 C temperature. Material: standard grey resin formlabs. Washing time 15 mins. Used 2-propanol Isopropyl Alcohol. Curing time 20 mins at 60 C.","title":"Settings"},{"location":"assignments/week06/#visual-reference","text":"Estimated printing time: Opening valve: Build plate: Globes and paper towels are needed at any moment to manipulate the prints: Raising bed holder lock: 3D Printer chamber opened: Printing temperature of resin 31 C: Building plate with piece: Removing printed part from build plate with spatula: Cleaning build plate with paper towels: Isopropyl alcohol for the washing machine 2-propanol: About to submerge the printing in the washing machine: Washing machine time elapse: Final result: Cleaning and chemical disposing: Do not wash the resin with water or Isopropyl alcohol in the sink. Use paper towels, and don\u2019t dispose any of it in the paper recycling. Expose the used towers to sunlight to cure the plastic. Find a chemical disposal container to dispose the paper towels.","title":"Visual reference:"},{"location":"assignments/week06/#assignment-outcome","text":"","title":"Assignment Outcome:"},{"location":"assignments/week06/#3d-model","text":"This is the first prototype of the electro-conductive sensor for my final project. As I need the part to be watertight I choose SLA printing, then as We don\u2019t have transparent resin available I made a window on my part to place a transparent plate. I followed design principles using nerves and reinforcing the unions using chamflers or rounding. It will be very difficult for a 5 axis milling machine to reproduce the shape, but it\u2019s possible to make 2 parts mold of course. More info about my project here. Part for printing: Assembly on 3D: Preform: Printing: Parameters: | Material | Grey V4 | | Printing time | 89 min | | Washing time | 30 min | | Curing time | 36 min | | Curing temperature | 60 C |","title":"3D model:"},{"location":"assignments/week06/#assembly","text":"Parts: Printed part. Laser cutted window. 6 M3 15 mm Bolts. 6 M3 rubber spacers. 6 M3 hexagonal nuts. View 1: View 2: With Electrodes: Design fails: The rubber seal holder it\u2019s too small, the electrode holders are too big and the nuts can\u2019t touch the piece so I\u2019ll need to make it wider. For the next iteration.","title":"Assembly:"},{"location":"assignments/week06/#files","text":"Download","title":"Files:"},{"location":"assignments/week07/","text":"7. Electronics design \u00b6 A few notes for this week about documentation: I've made a list of recommendations to get easily into the documentation process to help me out to have a structure, and with the hope to help others struggling under similar conditions. [Check my notes on my new Tips section.] Introduction \u00b6 This week I\u2019ve learn to use Kicad and design my own version of the ATSAMD11C hello.D11C.blink.reset.clock I\u2019ve added a switch button and a blue LED. I\u2019ve made two boards. The first one broke in one corner when I tried to make a hole to use it as a badge, and I used the wrong SMD button. For the second one I\u2019ve removed the hole in the design and used the correct button. For my board programming I\u2019ve used the programmer I\u2019ve made in the Electronics production week . And I\u2019ve also used the oscilloscope to check the signals in my board as part of the group assignment, check it here . Electronic components \u00b6 Resistor: It\u2019s a passive electrical component that holds resistance to an electrical current. Detailed information Component Resistor Type SMD 1206 Value 0 Ohms, 100 Ohms, 50 Ohms, 1 KOhms Code Check Digikey # 311-100FRCT-ND Link DigiKey Formula: Ohms Law: Resistance = Voltage / Current Example for a 2V, 0.02A LED in a 5 Volts Power Supply: 5V - 2V = 3V; 3V / 0.02A = 150 Ohm Capacitor: It\u2019s a passive electrical device used to store temporally a charge, consisting of one or more pairs of conductors separated by an insulator. Component Capacitor Type SMD 1206 Value 1uF Code None Digikey # C3216X7R1H105K160AB Link DigiKey Regulator: Any electrical or electronic device that maintains the voltage of a power source within acceptable limits. Component Regulator Type SMD SOT23 Value 3.3V 100mA Code None Digikey # LM3480IM3-3.3/NOPB Link DigiKey Diode: It\u2019s a semiconductor device with two terminals, typically allowing the flow of current in one direction only. Component light emitting diode (LED) Type SMD 1206 Value 1.8V 0.02A Code None Digikey # 160-1167-1-ND Link DigiKey Micro-controller It\u2019s a compressed micro computer manufactured to control the functions of embedded systems Component ATMEL SAMD11C14A Microcontroller Type SMD 14 Pin Value 32Bits 48MHz 1.62~3.63V Code ATSAMD11C14A Digikey # ATSAMD11C14A-SSUTCT-ND Link DigiKey Electronic Schematics \u00b6 Symbols Kicad \u00b6 Requirements Install Kicad Download or clone Fab Academy Kicad Library. Add Symbol and Footprints libraries. Add Luc and Florent USB and JTAG KiCad footprint files. SAMD11 datasheet. SAMD11 pinout information. Look for availability of components in your local inventory. Software On Fedora Linux: sudo dnf install kicad Download for any other platform here. Cloning Fab Academy Kicad Library repository: git clone https://gitlab.fabcloud.org/pub/libraries/electronics/kicad.git Kicad Setup \u00b6 Add Symbol library Open Kicad, at the menu bar, click on: \u201cPreferences\u201d>\u201dManage symbol libraries\u201d>\u201dGlobal libraries\u201d. Click on: \u201cAdd a new empty row to table\u201d. Click on: \u201cLibrary Path\u201d and search-select the file \u201cfab.lib\u201d in Fab-Academy \u201ckicad\u201d repository. Click on: \u201cOK\u201d and close the manager window. Add footprint library Click on: \u201cPreferences\u201d>\u201dManage footprint libraries\u201d>\u201dGlobal libraries\u201d. Click on: \u201cAdd a new empty row to table\u201d. Click on: \u201cLibrary Path\u201d and search-select the file \u201cfab.pretty\u201d in Fab-Academy \u201ckicad\u201d repository. Click on: \u201cOK\u201d and close the manager window. Add custom USB and JTAG footprints Download this file Extract the content to your Kicad project directory Repeat the Add Symbol library and Add footprint library process using the files extracted. Edit footprints: Make your own library: Usage \u00b6 Schematic layout design \u00b6 Symbol: Click on: \u201cPlace symbol\u201d icon, pulse left click on canvas. Select a component preferably from the Fab Academy library Global label: Click on: \u201cPlace global label\u201d icon, pulse left click on canvas. Write the a new name for a label or select an existing one from the drop-down menu. Wire: Click on: \u201cPlace wire\u201d icon, then left-click in the start and end points of the wire, you can connect symbols by clicking in their pin connection area, represented by a circle in the terminals. No connection: Click on: \u201cPlace no connection flag\u201d , left-click on every unused connection. This is important to avoid errors in the electrical check tool. Associate footprints \u00b6 Click on: \u201cEdit symbol fields\u201d icon in the toolbar. Associate every symbol to the right footprint in the Fab-Academy footprint library by clicking in every footprint cell and search-find the footprints in the fabacademy footprint library. For the LED, Resistors, diode and Capacitor, select the type 1206 footprint. For the USB and JTAG connectors look into the custom library. Generate Netlist \u00b6 Click on: Icon \u201cGenerate Netlist\u201d in the top toolbar Click on: Button \u201cGenerate Netlist\u201d Save the \u201d\u201c.net\u201d file PCB Layout design \u00b6 Open the PCB layout editor. Click on \u201cLoad netlist\u201d. Using the wire tool you can trace the tracks of the board. Follow the design rules of the week05 assingment. Troubleshooting \u00b6 During the documentation process I\u2019ve found multiple mistakes in my schematic tht could lead to malfunction or a small explosion. I\u2019ve found also a fliped led in my schematic image. That I\u2019ve corrected except in the screen capture. Assignment Outcome \u00b6 Schematic \u00b6 For this process I\u2019ve selected the ATSAMD11C hello.D11C.blink.reset.clock board as the base of my design. Divided the work in four parts: Regulator USB connector JTAG conector Microntroller Placed the following list of symbols under the FabAcademy library: ATSAMD11C14A Regulator USB connector JTAG connector USB connector 1. Wired the USB connector to the VCC and GNDREF symbols. 2. Placed Global labels: - VCC - GND - D+ - D- 3. Wired the global labels to the USB connector: - VCC to pin 1 - D- to pin 2 - D+ to pin 3 - GND to pin 4 Regulator 1. Placed the following symbols: - C1 capacitor 1uF 2. Placed global label: - VCC - GND - V3.3 - btn_v33 3. Wired the sub-schema of the regulator. - VCC to pin 2 - GND to pin 3 - V3.3 to pin 1 - pin 1 of C1 between GND and pin 3 - pin 2 of C1 between pin 1 and V3.3 - btn_v33 between pin 1 and V3.3 JTAG connector 1. Placed Global labels: - V3.3 - GND - CLK - DIO - RESET 2. Wired the sub-schema of the JTAG connector. - GND to pin 9 and pin 3 - DIO to pin 2 - CLK to pin 4 - RESET to pin 10 - VTref to V3.3 Microcontroller 1. Placed the following components: - C2 0.1 uF - R1 100 Ohms - R4 100 Ohms - R5 10 KOhms - R6 10 KOhms - LED1 - Button1 2. Placed the following global labels: - GND - RESET - V3.3 - CLK - DIO 3. Wired the left-side of the Microntroller sub-schema: - GND to C2 to RESET and pin 6 - V3.3 to R5 to point between C2 and RESET - V3.3 to R6 to pin 7 - CLK to point between R6 and pin 7 4. Placed the following global labels: - VCC - GND - btn_v33 - D+ - D- 5. Wired the right-side of the Microntroller sub-schema: - GND to Button1 to pin 13 - btn_v33 to point between Button1 and pin 13 - VCC to anode of LED1 - cathode of LED1 to R4 - R4 to pin 1 PCB design \u00b6 At first the components appear disordered, so the first task it\u2019s to order all the components following the relationship established in the schematic. Then I\u2019ve used the pattern in the board I\u2019ve used as base to have a clear idea of the location of the components. The Microcontroller goes in the center. Regulator at left with its capacitor. JTAG conector at the bottom. LED at the lest close to the pin 5 of the Microcontroller. The clock and reset pull-down at the left. Button and pull-up resistor at the right. Design Rules Track 0.4 mm Outline 1.0 mm Clearance 0.1 mm Design Rules check \u00b6 Design rules check its a tool of PCBnew to detect violations to the design rules specified in the pcb design file. Its under the inspect menu of the top toolbar. My design didn\u2019t had any trouble in the traces as I\u2019ve made a very simple design, still in the future DRC will be an important tool for me to know if the design its suitable to process in MODS and also to have a functional milled circuit board. 3D model \u00b6 I\u2019ve made this capture by using the 3D tool in PCBnew in the view menu of the top toolbar. Processing files with mods \u00b6 Importing files as SVG. Traces Settings Bit diameter 0.4 mm Speed 2 mm/s Depth 0.1 mm Global speed 80% Outline Settings Bit diameter 1.0 mm Speed 3 mm/s Depth 1.89 mm Step cut 0.4 mm Global speed 100% Milling \u00b6 Milling time: 45 min. I\u2019ve broke one 0.4 mm and one FR1 PCB board, because the board was slightly curved and it didn\u2019t stick to the sacrificial plate. Solution: 1. Remove the ailed board and clean up thoughtfully the sacrificial bed until all the debris and dust gets removed. 2. Use two sides adhesive tape avoiding any bubble or Soldering \u00b6 This is my favorite process. Stain one the footprints of every component in the board to use it as a mechanical placing connection. Solder the components from inside to the outside of the board. Place first the Microcontroller and hold it until it is fixed and aligned. Solder the remaining pins of the Microcontroller. Solder the JATG conector. Solder the button. Solder the resistances. Solder the regulator and capacitor. Solder all the remaining components. First board: Second board: Debugging \u00b6 After soldering I\u2019ve performed the Smoke test by connecting the board to a power supply at 5 V. The test passed without any issue. Then I used the multimeter for continuity test and for DC Volt check before and after the regulator and in the power input pin of the Microcontroller. I didn\u2019t found any issues. Inspecting signals with the Oscilloscope \u00b6 I\u2019ve inspected the board using a oscilloscope and I\u2019ve observed a signal in the led output. I didn\u2019t find any other issue at that time. The oscilloscope is an instrument to visualize signals in cartesian coordinates. We have a Tektronix TBS1052B-EDU For this exercise we inspected Antonio\u2019s board . Every oscilloscope has different interaction, but the principles are the same you have the basic functions for: Scale the scope in X and Y axis. Change the pitch. Make a two channel graph. Auto-scale and focus the signal. Flashing \u00b6 Download files from FabAcademy material: Make file. Blink.c Bootloader Blink.ino Clone ASF repository: git clone git clone https://github.com/avrxml/asf.git Changing D11C/hello.D11C.blink.make code to point correctly to asf. I\u2019ve cloned the repository in a local directory ~/repos/asf Install arm-none-eabi-gcc dependency: sudo dnf install arm-none-eabi-gcc Install newlib dependency: sudo dnf install arm-none-eabi-newlib arm-none-eabi-gcc-cs-c++.x86_64 gcc-c++-arm-linux-gnu.x86_64 Connecting JTAG programmer board: Flashing: make -f hello.D11C.blink.make edbg If the command doesn\u2019t work, you can just used the generated bin file and use edbg like this: sudo ./edbg -t samd11 -bpv -f hello.D11C.blink.bin Changing the speed of the blink \u00b6 Files \u00b6 Custom library 1 Custom connector 1x04 male Custom SMD header 01x04 Custom library 2 fab-SWD10pin127pitch fab-USB_A male plug Header smd 1x04 Kicad Files Week07 kicad project file Week07 kicad schematic file Week07 kicad net file Week07 kicad pcb file Optionally you can use this link Download kicad files from gitlab repository as Zip file","title":"7. Electronics design"},{"location":"assignments/week07/#7-electronics-design","text":"A few notes for this week about documentation: I've made a list of recommendations to get easily into the documentation process to help me out to have a structure, and with the hope to help others struggling under similar conditions. [Check my notes on my new Tips section.]","title":"7. Electronics design"},{"location":"assignments/week07/#introduction","text":"This week I\u2019ve learn to use Kicad and design my own version of the ATSAMD11C hello.D11C.blink.reset.clock I\u2019ve added a switch button and a blue LED. I\u2019ve made two boards. The first one broke in one corner when I tried to make a hole to use it as a badge, and I used the wrong SMD button. For the second one I\u2019ve removed the hole in the design and used the correct button. For my board programming I\u2019ve used the programmer I\u2019ve made in the Electronics production week . And I\u2019ve also used the oscilloscope to check the signals in my board as part of the group assignment, check it here .","title":"Introduction"},{"location":"assignments/week07/#electronic-components","text":"Resistor: It\u2019s a passive electrical component that holds resistance to an electrical current. Detailed information Component Resistor Type SMD 1206 Value 0 Ohms, 100 Ohms, 50 Ohms, 1 KOhms Code Check Digikey # 311-100FRCT-ND Link DigiKey Formula: Ohms Law: Resistance = Voltage / Current Example for a 2V, 0.02A LED in a 5 Volts Power Supply: 5V - 2V = 3V; 3V / 0.02A = 150 Ohm Capacitor: It\u2019s a passive electrical device used to store temporally a charge, consisting of one or more pairs of conductors separated by an insulator. Component Capacitor Type SMD 1206 Value 1uF Code None Digikey # C3216X7R1H105K160AB Link DigiKey Regulator: Any electrical or electronic device that maintains the voltage of a power source within acceptable limits. Component Regulator Type SMD SOT23 Value 3.3V 100mA Code None Digikey # LM3480IM3-3.3/NOPB Link DigiKey Diode: It\u2019s a semiconductor device with two terminals, typically allowing the flow of current in one direction only. Component light emitting diode (LED) Type SMD 1206 Value 1.8V 0.02A Code None Digikey # 160-1167-1-ND Link DigiKey Micro-controller It\u2019s a compressed micro computer manufactured to control the functions of embedded systems Component ATMEL SAMD11C14A Microcontroller Type SMD 14 Pin Value 32Bits 48MHz 1.62~3.63V Code ATSAMD11C14A Digikey # ATSAMD11C14A-SSUTCT-ND Link DigiKey","title":"Electronic components"},{"location":"assignments/week07/#electronic-schematics","text":"Symbols","title":"Electronic Schematics"},{"location":"assignments/week07/#kicad","text":"Requirements Install Kicad Download or clone Fab Academy Kicad Library. Add Symbol and Footprints libraries. Add Luc and Florent USB and JTAG KiCad footprint files. SAMD11 datasheet. SAMD11 pinout information. Look for availability of components in your local inventory. Software On Fedora Linux: sudo dnf install kicad Download for any other platform here. Cloning Fab Academy Kicad Library repository: git clone https://gitlab.fabcloud.org/pub/libraries/electronics/kicad.git","title":"Kicad"},{"location":"assignments/week07/#kicad-setup","text":"Add Symbol library Open Kicad, at the menu bar, click on: \u201cPreferences\u201d>\u201dManage symbol libraries\u201d>\u201dGlobal libraries\u201d. Click on: \u201cAdd a new empty row to table\u201d. Click on: \u201cLibrary Path\u201d and search-select the file \u201cfab.lib\u201d in Fab-Academy \u201ckicad\u201d repository. Click on: \u201cOK\u201d and close the manager window. Add footprint library Click on: \u201cPreferences\u201d>\u201dManage footprint libraries\u201d>\u201dGlobal libraries\u201d. Click on: \u201cAdd a new empty row to table\u201d. Click on: \u201cLibrary Path\u201d and search-select the file \u201cfab.pretty\u201d in Fab-Academy \u201ckicad\u201d repository. Click on: \u201cOK\u201d and close the manager window. Add custom USB and JTAG footprints Download this file Extract the content to your Kicad project directory Repeat the Add Symbol library and Add footprint library process using the files extracted. Edit footprints: Make your own library:","title":"Kicad Setup"},{"location":"assignments/week07/#usage","text":"","title":"Usage"},{"location":"assignments/week07/#schematic-layout-design","text":"Symbol: Click on: \u201cPlace symbol\u201d icon, pulse left click on canvas. Select a component preferably from the Fab Academy library Global label: Click on: \u201cPlace global label\u201d icon, pulse left click on canvas. Write the a new name for a label or select an existing one from the drop-down menu. Wire: Click on: \u201cPlace wire\u201d icon, then left-click in the start and end points of the wire, you can connect symbols by clicking in their pin connection area, represented by a circle in the terminals. No connection: Click on: \u201cPlace no connection flag\u201d , left-click on every unused connection. This is important to avoid errors in the electrical check tool.","title":"Schematic layout design"},{"location":"assignments/week07/#associate-footprints","text":"Click on: \u201cEdit symbol fields\u201d icon in the toolbar. Associate every symbol to the right footprint in the Fab-Academy footprint library by clicking in every footprint cell and search-find the footprints in the fabacademy footprint library. For the LED, Resistors, diode and Capacitor, select the type 1206 footprint. For the USB and JTAG connectors look into the custom library.","title":"Associate footprints"},{"location":"assignments/week07/#generate-netlist","text":"Click on: Icon \u201cGenerate Netlist\u201d in the top toolbar Click on: Button \u201cGenerate Netlist\u201d Save the \u201d\u201c.net\u201d file","title":"Generate Netlist"},{"location":"assignments/week07/#pcb-layout-design","text":"Open the PCB layout editor. Click on \u201cLoad netlist\u201d. Using the wire tool you can trace the tracks of the board. Follow the design rules of the week05 assingment.","title":"PCB Layout design"},{"location":"assignments/week07/#troubleshooting","text":"During the documentation process I\u2019ve found multiple mistakes in my schematic tht could lead to malfunction or a small explosion. I\u2019ve found also a fliped led in my schematic image. That I\u2019ve corrected except in the screen capture.","title":"Troubleshooting"},{"location":"assignments/week07/#assignment-outcome","text":"","title":"Assignment Outcome"},{"location":"assignments/week07/#schematic","text":"For this process I\u2019ve selected the ATSAMD11C hello.D11C.blink.reset.clock board as the base of my design. Divided the work in four parts: Regulator USB connector JTAG conector Microntroller Placed the following list of symbols under the FabAcademy library: ATSAMD11C14A Regulator USB connector JTAG connector USB connector 1. Wired the USB connector to the VCC and GNDREF symbols. 2. Placed Global labels: - VCC - GND - D+ - D- 3. Wired the global labels to the USB connector: - VCC to pin 1 - D- to pin 2 - D+ to pin 3 - GND to pin 4 Regulator 1. Placed the following symbols: - C1 capacitor 1uF 2. Placed global label: - VCC - GND - V3.3 - btn_v33 3. Wired the sub-schema of the regulator. - VCC to pin 2 - GND to pin 3 - V3.3 to pin 1 - pin 1 of C1 between GND and pin 3 - pin 2 of C1 between pin 1 and V3.3 - btn_v33 between pin 1 and V3.3 JTAG connector 1. Placed Global labels: - V3.3 - GND - CLK - DIO - RESET 2. Wired the sub-schema of the JTAG connector. - GND to pin 9 and pin 3 - DIO to pin 2 - CLK to pin 4 - RESET to pin 10 - VTref to V3.3 Microcontroller 1. Placed the following components: - C2 0.1 uF - R1 100 Ohms - R4 100 Ohms - R5 10 KOhms - R6 10 KOhms - LED1 - Button1 2. Placed the following global labels: - GND - RESET - V3.3 - CLK - DIO 3. Wired the left-side of the Microntroller sub-schema: - GND to C2 to RESET and pin 6 - V3.3 to R5 to point between C2 and RESET - V3.3 to R6 to pin 7 - CLK to point between R6 and pin 7 4. Placed the following global labels: - VCC - GND - btn_v33 - D+ - D- 5. Wired the right-side of the Microntroller sub-schema: - GND to Button1 to pin 13 - btn_v33 to point between Button1 and pin 13 - VCC to anode of LED1 - cathode of LED1 to R4 - R4 to pin 1","title":"Schematic"},{"location":"assignments/week07/#pcb-design","text":"At first the components appear disordered, so the first task it\u2019s to order all the components following the relationship established in the schematic. Then I\u2019ve used the pattern in the board I\u2019ve used as base to have a clear idea of the location of the components. The Microcontroller goes in the center. Regulator at left with its capacitor. JTAG conector at the bottom. LED at the lest close to the pin 5 of the Microcontroller. The clock and reset pull-down at the left. Button and pull-up resistor at the right. Design Rules Track 0.4 mm Outline 1.0 mm Clearance 0.1 mm","title":"PCB design"},{"location":"assignments/week07/#design-rules-check","text":"Design rules check its a tool of PCBnew to detect violations to the design rules specified in the pcb design file. Its under the inspect menu of the top toolbar. My design didn\u2019t had any trouble in the traces as I\u2019ve made a very simple design, still in the future DRC will be an important tool for me to know if the design its suitable to process in MODS and also to have a functional milled circuit board.","title":"Design Rules check"},{"location":"assignments/week07/#3d-model","text":"I\u2019ve made this capture by using the 3D tool in PCBnew in the view menu of the top toolbar.","title":"3D model"},{"location":"assignments/week07/#processing-files-with-mods","text":"Importing files as SVG. Traces Settings Bit diameter 0.4 mm Speed 2 mm/s Depth 0.1 mm Global speed 80% Outline Settings Bit diameter 1.0 mm Speed 3 mm/s Depth 1.89 mm Step cut 0.4 mm Global speed 100%","title":"Processing files with mods"},{"location":"assignments/week07/#milling","text":"Milling time: 45 min. I\u2019ve broke one 0.4 mm and one FR1 PCB board, because the board was slightly curved and it didn\u2019t stick to the sacrificial plate. Solution: 1. Remove the ailed board and clean up thoughtfully the sacrificial bed until all the debris and dust gets removed. 2. Use two sides adhesive tape avoiding any bubble or","title":"Milling"},{"location":"assignments/week07/#soldering","text":"This is my favorite process. Stain one the footprints of every component in the board to use it as a mechanical placing connection. Solder the components from inside to the outside of the board. Place first the Microcontroller and hold it until it is fixed and aligned. Solder the remaining pins of the Microcontroller. Solder the JATG conector. Solder the button. Solder the resistances. Solder the regulator and capacitor. Solder all the remaining components. First board: Second board:","title":"Soldering"},{"location":"assignments/week07/#debugging","text":"After soldering I\u2019ve performed the Smoke test by connecting the board to a power supply at 5 V. The test passed without any issue. Then I used the multimeter for continuity test and for DC Volt check before and after the regulator and in the power input pin of the Microcontroller. I didn\u2019t found any issues.","title":"Debugging"},{"location":"assignments/week07/#inspecting-signals-with-the-oscilloscope","text":"I\u2019ve inspected the board using a oscilloscope and I\u2019ve observed a signal in the led output. I didn\u2019t find any other issue at that time. The oscilloscope is an instrument to visualize signals in cartesian coordinates. We have a Tektronix TBS1052B-EDU For this exercise we inspected Antonio\u2019s board . Every oscilloscope has different interaction, but the principles are the same you have the basic functions for: Scale the scope in X and Y axis. Change the pitch. Make a two channel graph. Auto-scale and focus the signal.","title":"Inspecting signals with the Oscilloscope"},{"location":"assignments/week07/#flashing","text":"Download files from FabAcademy material: Make file. Blink.c Bootloader Blink.ino Clone ASF repository: git clone git clone https://github.com/avrxml/asf.git Changing D11C/hello.D11C.blink.make code to point correctly to asf. I\u2019ve cloned the repository in a local directory ~/repos/asf Install arm-none-eabi-gcc dependency: sudo dnf install arm-none-eabi-gcc Install newlib dependency: sudo dnf install arm-none-eabi-newlib arm-none-eabi-gcc-cs-c++.x86_64 gcc-c++-arm-linux-gnu.x86_64 Connecting JTAG programmer board: Flashing: make -f hello.D11C.blink.make edbg If the command doesn\u2019t work, you can just used the generated bin file and use edbg like this: sudo ./edbg -t samd11 -bpv -f hello.D11C.blink.bin","title":"Flashing"},{"location":"assignments/week07/#changing-the-speed-of-the-blink","text":"","title":"Changing the speed of the blink"},{"location":"assignments/week07/#files","text":"Custom library 1 Custom connector 1x04 male Custom SMD header 01x04 Custom library 2 fab-SWD10pin127pitch fab-USB_A male plug Header smd 1x04 Kicad Files Week07 kicad project file Week07 kicad schematic file Week07 kicad net file Week07 kicad pcb file Optionally you can use this link Download kicad files from gitlab repository as Zip file","title":"Files"},{"location":"assignments/week08/","text":"8. Computer controlled machining \u00b6 Introduction \u00b6 CNC stands for Computer Controlled Machining and the modern predecessors were developed at the beginning of 1950 at the MIT servomechanism lab. Through the years this technology has became more precise and affordable, so we can have a tabletop Roland SRM-20 with a 0.01 mm precision or any SLM 3D printer . The process needs a hardware capable of following a series of instructions with the encoded geometrical position in 2, 3 or more axis of the tool so as the tool type, the cut-rate, the tolerance, and the speed of any movement. For this week our individual task is to design, encode, manufacture and assemble a large object. And our group assignment is to document our security training to use the CNC machine workshop at AgriLab , you can check our work here. Risk assessment \u00b6 Check my entry to the group assignment to find this information here. Check this risk assessment document to find out detailed information Design process \u00b6 I\u2019ve used Fusion 360 (under Windows) to design my project. I\u2019ve been trying to run Fusion on Linux but it has some complications due to my Nvidia driver configuration. The idea is just very simple yet useful. I got a very bad back pain everytime I solder in the ElectroLab, the reason is that there\u2019s no a right size bench. You can get one very tall bench or a very low chair. So I think a good cheap bench design will help us a little in the upcoming weeks. This is my first sketch. Then I started drawing it in Fusion. This is the parametric table. These are the three parts of the sketch. To make the second part of the body for the bench I\u2019ve copy pasted the first sketch into a new one, and then modify the groove to coincide and serve as join mechanism. These are the three parts extruded by 18 mm which is the width of the material. On the Render environment of Fusion I\u2019ve used Oak as a material for the appearance of the model. This is render I\u2019ve made using the basic render options of Fusion 360. To virtually assemble the parts I\u2019ve using the move/rotate tools under the design environment. CAM with Fusion 360 \u00b6 After the design has been completed the next steps to generate \u201d\u201c*.NC\u201d files for our CNC machine are: 1. Configure the tool size measuring the tool available in the lab. I\u2019ve chose a 10 mm diameter 32 mm two flutes flat-end mill. For now all the other parameters of the milling tools like the shaft and holder are not very important, because the milling depth is only about 18 mm. 2. Then under the manufacture environment of Fusion select setup to configure the machine, orientation, models and tool for the manufacturing process. Select Milling. Selecte Z as the vertical axis for your model, be aware of you machine axis too, in this case Y is the longest axis in the machine so as in the model. 3. Under the 2D strategy I\u2019ve selected 2D contour as my milling process. The reason is because in the test I\u2019ve found that as the quickest and simplest process for milling. Select the lower contour of your model. Select the right tool. Select the multi-height passes and use about hald the diameter of your milling bit. 4. Contour parameters I\u2019ve selected: The feedrate was too high and during the manufacturing process Luc had to lower the travel and cutting feedrate and increased the spindle RPM to reduce vibrations in the machine. So I\u2019ll advice to use 2000 or 2200 Feedrate for 18mm OSB sheets. 5. I\u2019ve used tabs to reduce vibration and the risk of detached parts during the process. Tabs are placed every 125.0 mm Tabs are rectangular Height 2.5 mm Width 10.0 mm 6. The tolerance was just enough and the parts fitted perfectly in place after the manufacturing. Tolerance was set as 0.125 mm 7. Multiple depths were configured Maximum roughing step-down was set to 5 mm Finishing step-down for a clean edge is 0.1 mm 8. The contour operation is finished and the program shows the cut path way. The video shows the complete process 9. Repeat the \u201c2D contour\u201d process for all the parts of the model. 10. Click in the post process button to find the next window to generate the GCODE for the CNC milling machine. I\u2019ve selected \u201cMach2Mill / mach2mill\u201d option which is the one we need in our lab for our CNC machine. 11. In the \u201coperations tab\u201d select the process you\u2019ll like to include in the output file. I\u2019ve selected only one output file for every operation to have a better control of the whole process. It means I\u2019ll have to launch a File for every process in the machine. 12. After the output file is written, look for the code G43 Z15. H8 approximately at line 19 and delete that line. The CNC machine at the lab uses this code to compensate the Z axis height by 15 mm and it means your cuts will happen 15 mm above your Z axis origin. 13. You can see here a simulation of the process that I\u2019ve made using the \u201csimulation\u201d tools in Fusion 360. Preparation \u00b6 I\u2019ve used OSB trying to minimize the cost of my design. The sheet should be maximum 2.0m, so we should cut it using the saw by 40 cm. Finally we need to measure in different points the thickness of the material. 17.6 mm 17.8 mm 17.5 mm So I\u2019ve used 17.5 mm as the thickness measurement. Milling machine check list \u00b6 Power on the machine. Start Depression. Start Vacuum dust aspiration. Setup the Z axis connecting the electrode and the clamps, make a small test pressing \u201ctoolset\u201d in the remote. Place the electrode at the top of the material. It\u2019s always useful to remember that the \u201cDepression\u201d should be activated to make this step as the height will change because a small compression caused by the vacuum. Lower the brush: To lower the brush go into \u201cinputs menu\u201d and look for \u201c06\u201d check it to red color and press \u201cok\u201d. Ensure that there\u2019s no obstacles in the build area. Ensure that you are using ear protections. Basic Workflow \u00b6 Power on: Open the compressed air valve. Push the power on button. In the remote accept \u201cGo home XYZ\u201d option. Press Ok. Fixing dust collector bug: The machine at the lab has a bug in the software that need to be corrected in order to lower the dust collector brush. In the menu go to the \u201cinputs and outputs\u201d option. Find the \u201c06\u201d input control Press Run to change the icon to \u201cRed\u201d color. Go to the main screen using the menu. Now the dust collector interrupter is enabled. X and Y axis calibration: On this process we need to set the center in the mill to the top left corner of the material to cut in our milling process. Move the axis by using the movement arrows in the remote. You can use the slow or fast movements to be more precise, press the slow button in the remote for this. Position the mid point of the mill in the top left corner. Z axis calibration: This process is very important for the correct operation of the machine. Be careful while setting up the Z axis. Pick the test probe and connect it to the port in the milling cart head. Connect the clam to the mill holder. Make an \u201cair\u201d test to check if the system works correctly. Pose the Z axis at a high level With help of your companion be prepared to touch the probe and the mill. Press the \u201ctoolset\u201d button in the remote. Wear the ear protection Activate the \u201cdepression\u201d to hold the material in place Run the \u201ctoolset\u201d test. Be prepared to stop the process if anything goes wrong. Load file: Connect the USB memory to the remote. press the \u201cfile\u201d button. Find and select the file with the arrow buttons in the remote. Press ok to load. Press Run the start the work. Select the global speeds and press Ok to start working. Milling with the CNC machine \u00b6 First process: I\u2019ve followed the same logic as the milling process by first cutting the interior contours to avoid misplaced cuts. Second process: This is the seat of the bench. Third process: This is the \u201cA\u201d part of the body. Last process: This is the \u201cB\u201d part of the body. I\u2019ve missed to take a photo of this because I\u2019ve some problems while milling. Troubleshooting \u00b6 The feedrate is speed was too high in relationship of the spindle speed. It was set to 3500 mm/s in Fusion 360. And the spindle speed to 10000 RPM. My instructor changed the spindle speed to 15000 RPM. The feedrate and movements speed were set to 30% and the whole process moved from 10 mins in the simulation to 30 mins in realtime work. I didn\u2019t have a companion. I\u2019ve asked my instructor to assist me. Assembly \u00b6 This is how the OSB sheet looked like after removing it from the machine. Here you can see the dogbones I\u2019ve used in my design. This is how the seat looks like assembled. And this is the final result. I\u2019d like to add a video of the assembly process in the next days. Testing the bench \u00b6 We can see here my back getting extremely curved while soldering at the soldering station. Here I\u2019m quite relaxed thanks to the support in the back of the chair but still it\u2019s not a good position for my back. Here I\u2019m using my bench and my back feels in a better position for long-time soldering. Here you can compare the height of every seat available at the lab. Files \u00b6 Download Zip with all files from Fabcloud gitlab Download files individually: Fusion file NC file 1 Cross NC file 2 Seat NC file 1 Body A NC file 1 Body B","title":"8. Computer controlled machining"},{"location":"assignments/week08/#8-computer-controlled-machining","text":"","title":"8. Computer controlled machining"},{"location":"assignments/week08/#introduction","text":"CNC stands for Computer Controlled Machining and the modern predecessors were developed at the beginning of 1950 at the MIT servomechanism lab. Through the years this technology has became more precise and affordable, so we can have a tabletop Roland SRM-20 with a 0.01 mm precision or any SLM 3D printer . The process needs a hardware capable of following a series of instructions with the encoded geometrical position in 2, 3 or more axis of the tool so as the tool type, the cut-rate, the tolerance, and the speed of any movement. For this week our individual task is to design, encode, manufacture and assemble a large object. And our group assignment is to document our security training to use the CNC machine workshop at AgriLab , you can check our work here.","title":"Introduction"},{"location":"assignments/week08/#risk-assessment","text":"Check my entry to the group assignment to find this information here. Check this risk assessment document to find out detailed information","title":"Risk assessment"},{"location":"assignments/week08/#design-process","text":"I\u2019ve used Fusion 360 (under Windows) to design my project. I\u2019ve been trying to run Fusion on Linux but it has some complications due to my Nvidia driver configuration. The idea is just very simple yet useful. I got a very bad back pain everytime I solder in the ElectroLab, the reason is that there\u2019s no a right size bench. You can get one very tall bench or a very low chair. So I think a good cheap bench design will help us a little in the upcoming weeks. This is my first sketch. Then I started drawing it in Fusion. This is the parametric table. These are the three parts of the sketch. To make the second part of the body for the bench I\u2019ve copy pasted the first sketch into a new one, and then modify the groove to coincide and serve as join mechanism. These are the three parts extruded by 18 mm which is the width of the material. On the Render environment of Fusion I\u2019ve used Oak as a material for the appearance of the model. This is render I\u2019ve made using the basic render options of Fusion 360. To virtually assemble the parts I\u2019ve using the move/rotate tools under the design environment.","title":"Design process"},{"location":"assignments/week08/#cam-with-fusion-360","text":"After the design has been completed the next steps to generate \u201d\u201c*.NC\u201d files for our CNC machine are: 1. Configure the tool size measuring the tool available in the lab. I\u2019ve chose a 10 mm diameter 32 mm two flutes flat-end mill. For now all the other parameters of the milling tools like the shaft and holder are not very important, because the milling depth is only about 18 mm. 2. Then under the manufacture environment of Fusion select setup to configure the machine, orientation, models and tool for the manufacturing process. Select Milling. Selecte Z as the vertical axis for your model, be aware of you machine axis too, in this case Y is the longest axis in the machine so as in the model. 3. Under the 2D strategy I\u2019ve selected 2D contour as my milling process. The reason is because in the test I\u2019ve found that as the quickest and simplest process for milling. Select the lower contour of your model. Select the right tool. Select the multi-height passes and use about hald the diameter of your milling bit. 4. Contour parameters I\u2019ve selected: The feedrate was too high and during the manufacturing process Luc had to lower the travel and cutting feedrate and increased the spindle RPM to reduce vibrations in the machine. So I\u2019ll advice to use 2000 or 2200 Feedrate for 18mm OSB sheets. 5. I\u2019ve used tabs to reduce vibration and the risk of detached parts during the process. Tabs are placed every 125.0 mm Tabs are rectangular Height 2.5 mm Width 10.0 mm 6. The tolerance was just enough and the parts fitted perfectly in place after the manufacturing. Tolerance was set as 0.125 mm 7. Multiple depths were configured Maximum roughing step-down was set to 5 mm Finishing step-down for a clean edge is 0.1 mm 8. The contour operation is finished and the program shows the cut path way. The video shows the complete process 9. Repeat the \u201c2D contour\u201d process for all the parts of the model. 10. Click in the post process button to find the next window to generate the GCODE for the CNC milling machine. I\u2019ve selected \u201cMach2Mill / mach2mill\u201d option which is the one we need in our lab for our CNC machine. 11. In the \u201coperations tab\u201d select the process you\u2019ll like to include in the output file. I\u2019ve selected only one output file for every operation to have a better control of the whole process. It means I\u2019ll have to launch a File for every process in the machine. 12. After the output file is written, look for the code G43 Z15. H8 approximately at line 19 and delete that line. The CNC machine at the lab uses this code to compensate the Z axis height by 15 mm and it means your cuts will happen 15 mm above your Z axis origin. 13. You can see here a simulation of the process that I\u2019ve made using the \u201csimulation\u201d tools in Fusion 360.","title":"CAM with Fusion 360"},{"location":"assignments/week08/#preparation","text":"I\u2019ve used OSB trying to minimize the cost of my design. The sheet should be maximum 2.0m, so we should cut it using the saw by 40 cm. Finally we need to measure in different points the thickness of the material. 17.6 mm 17.8 mm 17.5 mm So I\u2019ve used 17.5 mm as the thickness measurement.","title":"Preparation"},{"location":"assignments/week08/#milling-machine-check-list","text":"Power on the machine. Start Depression. Start Vacuum dust aspiration. Setup the Z axis connecting the electrode and the clamps, make a small test pressing \u201ctoolset\u201d in the remote. Place the electrode at the top of the material. It\u2019s always useful to remember that the \u201cDepression\u201d should be activated to make this step as the height will change because a small compression caused by the vacuum. Lower the brush: To lower the brush go into \u201cinputs menu\u201d and look for \u201c06\u201d check it to red color and press \u201cok\u201d. Ensure that there\u2019s no obstacles in the build area. Ensure that you are using ear protections.","title":"Milling machine check list"},{"location":"assignments/week08/#basic-workflow","text":"Power on: Open the compressed air valve. Push the power on button. In the remote accept \u201cGo home XYZ\u201d option. Press Ok. Fixing dust collector bug: The machine at the lab has a bug in the software that need to be corrected in order to lower the dust collector brush. In the menu go to the \u201cinputs and outputs\u201d option. Find the \u201c06\u201d input control Press Run to change the icon to \u201cRed\u201d color. Go to the main screen using the menu. Now the dust collector interrupter is enabled. X and Y axis calibration: On this process we need to set the center in the mill to the top left corner of the material to cut in our milling process. Move the axis by using the movement arrows in the remote. You can use the slow or fast movements to be more precise, press the slow button in the remote for this. Position the mid point of the mill in the top left corner. Z axis calibration: This process is very important for the correct operation of the machine. Be careful while setting up the Z axis. Pick the test probe and connect it to the port in the milling cart head. Connect the clam to the mill holder. Make an \u201cair\u201d test to check if the system works correctly. Pose the Z axis at a high level With help of your companion be prepared to touch the probe and the mill. Press the \u201ctoolset\u201d button in the remote. Wear the ear protection Activate the \u201cdepression\u201d to hold the material in place Run the \u201ctoolset\u201d test. Be prepared to stop the process if anything goes wrong. Load file: Connect the USB memory to the remote. press the \u201cfile\u201d button. Find and select the file with the arrow buttons in the remote. Press ok to load. Press Run the start the work. Select the global speeds and press Ok to start working.","title":"Basic Workflow"},{"location":"assignments/week08/#milling-with-the-cnc-machine","text":"First process: I\u2019ve followed the same logic as the milling process by first cutting the interior contours to avoid misplaced cuts. Second process: This is the seat of the bench. Third process: This is the \u201cA\u201d part of the body. Last process: This is the \u201cB\u201d part of the body. I\u2019ve missed to take a photo of this because I\u2019ve some problems while milling.","title":"Milling with the CNC machine"},{"location":"assignments/week08/#troubleshooting","text":"The feedrate is speed was too high in relationship of the spindle speed. It was set to 3500 mm/s in Fusion 360. And the spindle speed to 10000 RPM. My instructor changed the spindle speed to 15000 RPM. The feedrate and movements speed were set to 30% and the whole process moved from 10 mins in the simulation to 30 mins in realtime work. I didn\u2019t have a companion. I\u2019ve asked my instructor to assist me.","title":"Troubleshooting"},{"location":"assignments/week08/#assembly","text":"This is how the OSB sheet looked like after removing it from the machine. Here you can see the dogbones I\u2019ve used in my design. This is how the seat looks like assembled. And this is the final result. I\u2019d like to add a video of the assembly process in the next days.","title":"Assembly"},{"location":"assignments/week08/#testing-the-bench","text":"We can see here my back getting extremely curved while soldering at the soldering station. Here I\u2019m quite relaxed thanks to the support in the back of the chair but still it\u2019s not a good position for my back. Here I\u2019m using my bench and my back feels in a better position for long-time soldering. Here you can compare the height of every seat available at the lab.","title":"Testing the bench"},{"location":"assignments/week08/#files","text":"Download Zip with all files from Fabcloud gitlab Download files individually: Fusion file NC file 1 Cross NC file 2 Seat NC file 1 Body A NC file 1 Body B","title":"Files"},{"location":"assignments/week09/","text":"9. Embedded programming \u00b6 Introduction \u00b6 The Micro-controller that I\u2019m using in my board. Check this link for more information. This is the page for the group assignment. I \u2018ve contributed with the Raspberry pi board review. This week I\u2019ve learn how to program in bare-metal C using only the ASF library , then I used Rust Programming Language , but I didn\u2019t have time to write down all the steps in the compiling process and eventually found out some difficulties with the build toolchain. I\u2019ve also tried Haskell and autopilot and Finally the Arduino IDE. My board has only one Button as input in PA02 and one LED as output in PA05. So I was looking for something useful to make with only one button and one LED and the result is the one button Mouse Scroll that I\u2019ve made using the Arduino IDE , the Mouse library and event detection. Then I\u2019ve inspected using the oscilloscope ATSAMD11C14 Microcontroller \u00b6 Its a low-power, high-performance ARM\u00ae Cortex\u00ae-M0+ based flash microcontroller. It\u2019s one of the ATSAMD available in the AgriLab ElectroLab aside the SAMD21D17. I\u2019ve selected this microcontroller on week07 electronics design . The following information was learned and collected by me over this assignment. Summary of specifications: Information modified from Atmel documentation page SAMD11C14 Specs Family SAMD11 Max CPU speed 48 MHz Programmable memory size 16 KBytes SRAM 4 KBytes Auxiliary flash memory 64 Bytes Working Temperature range -40 to 105 C Operating Voltage range 1.62 to 3.63 Volts Direct memory access channels 6 SPI ports 2 I2C ports 2 Hardware touch periphereal PTC Periphereal pin select YES Native USB YES, Full speed Analog to Digital inputs (ADC) 5 ADC resolution 12 Bits ADC sampling rate 350 K Samples per Second Digital to Analog Outputs (DAC) 1 Input capture ports 3 Standalone output compare/ Standard PWM ports 4 Motor control PWM channels 8 16 Bit digital timers 2 Parallel port type GPIO Comparators 2 Internal Oscillator 32KHz, 32KHz ULP, 8 MHz Hardware Realtime clock counter/Realtime Clock YES IO Pins 12 Pincount 14 Low Power capability YES *This tables were taken from Mattairtech SAMD boards documentation.* Pinout table for Arduino IDE: SAMD11 Arduino PINOUT Other COM PWM Analog INT # PIN PIN # INT Analog PWM COM Other SCK*/RX2 TCC01 * * 5 A5 A4 4 * * TCC00 MOSI*/TX2 REF MOSI* TCC02 * 8 A8 (XIN) A2 2 * * DAC SCK* TCC03 * 9 A9 (XOUT) Vdd SDA/MISO* TC10 * NMI 14 A14 Gnd SCL/SS* TC11 * * 15 A15 A25 25 USB/DP BOOT 28 A28/RST A24 24 USB/DM SWDCLK TX1/MISO* 30 A30 A31 31 * RX1/SS* SWDIO ------------------- Detailed information: Arduino Port Alternate Function Comments (! means not used with this peripheral assignment) 0 ---- NOT A PIN NOT A PIN 1 ---- NOT A PIN NOT A PIN 2 PA02 DAC EIC/EXTINT[2] ADC/AIN[0] PTC/Y[0] DAC/VOUT 3 ---- NOT A PIN NOT A PIN 4 PA04 REFB / TX2* / TCC00 EIC/EXTINT[4] REF/ADC/VREFB ADC/AIN[2] AC/AIN[0] PTC/Y[2] SERCOM0/PAD[2] !SERCOM0/PAD[0] !TC1/WO[0] TCC0/WO[0] 5 PA05 RX2* / TCC01 EIC/EXTINT[5] ADC/AIN[3] AC/AIN[1] PTC/Y[3] SERCOM0/PAD[3] !SERCOM0/PAD[1] !TC1/WO[1] TCC0/WO[1] 6 ---- NOT A PIN NOT A PIN 7 ---- NOT A PIN NOT A PIN 8 PA08 TX1 / MOSI / TCC02 EIC/EXTINT[6] SERCOM1/PAD[2] !SERCOM0/PAD[2] TCC0/WO[2] !TCC0/WO[4] Xin32 / Xin 9 PA09 RX1 / SCK / TCC03 EIC/EXTINT[7] SERCOM1/PAD[3] !SERCOM0/PAD[3] TCC0/WO[3] !TCC0/WO[5] Xout32 / Xout 10 ---- NOT A PIN NOT A PIN 11 ---- NOT A PIN NOT A PIN 12 ---- NOT A PIN NOT A PIN 13 ---- NOT A PIN NOT A PIN 14 PA14 SDA / TC10 EIC/NMI ADC/AIN[6] PTC/X[0] PTC/Y[6] SERCOM0/PAD[0] !SERCOM2/PAD[0] TC1/WO[0] !TCC0/WO[0] 15 PA15 SCL / TC11 EIC/EXTINT[1] ADC/AIN[7] PTC/X[1] PTC/Y[7] SERCOM0/PAD[1] !SERCOM2/PAD[1] TC1/WO[1] !TCC0/WO[1] 16 ---- NOT A PIN NOT A PIN 17 ---- NOT A PIN NOT A PIN 18 ---- NOT A PIN NOT A PIN 19 ---- NOT A PIN NOT A PIN 20 ---- NOT A PIN NOT A PIN 21 ---- NOT A PIN NOT A PIN 22 ---- NOT A PIN NOT A PIN 23 ---- NOT A PIN NOT A PIN 24 PA24 USB_NEGATIVE USB/DM 25 PA25 USB_POSITIVE USB/DP 26 ---- NOT A PIN NOT A PIN 27 ---- NOT A PIN NOT A PIN 28 PA28 Reset Reset, BOOT (double tap bootloader entry) 29 ---- NOT A PIN NOT A PIN 30 PA30 MISO / SWD CLK !EIC/EXTINT[2] SERCOM1/PAD[0] !SERCOM1/PAD[2] !TC2/WO[0] !TCC0/WO[2] SWD CLK, leave floating during boot 31 PA31 SS / SWD IO EIC/EXTINT[3] SERCOM1/PAD[1] !SERCOM1/PAD[3] !TC2/WO[1] !TCC0/WO[3] SWD IO The SAMD11C14 its part of the SAMD family of microntrollers, its has multiple thing that are of the interest for my project including: Native USB connectors Digital to Analog Output Analog to Digital Input Communication I2C ISP Serial SAMD11C14 comes from: This is a reference for the PIN numbers of the SAMD11C14: And this is a schematic of the Digital to analog converter that I\u2019m interested to use for the Dielectric Spectroscopy module of my final project. The multiplexor table shows the pins and its capabilities for Communication and functions: Debugging \u00b6 I\u2019ve found out the difference between pull-up and pull-down arrangements for floating point connections. So I\u2019ve the idea to inspect using the oscilloscope the pin PA_02 which is connected to a button on my board designed in week07 Inspecting button at PA02: Power source at 5V: Signal in the Oscilloscope: Program to estimate mV at input: const int BTN = 2; int BTN_STATE = digitalRead(BTN); const long VIN_FACTOR = 3.3 / 1.023 ; void setup() { pinMode(LED_BUILTIN, OUTPUT); pinMode(BTN, INPUT); Serial.begin(9600); } void loop() { Serial.println(analogRead(BTN) * VIN_FACTOR); analogWrite(LED_BUILTIN, analogRead(BTN) ); } Arduino capture: EBDG workflow \u00b6 Introduction: Requirements \u00b6 Download files from FabAcademy material: Make file. Blink.c Bootloader Blink.ino Clone ASF repository: git clone git clone https://github.com/avrxml/asf.git Changing D11C/hello.D11C.blink.make code to point correctly to asf. I\u2019ve cloned the repository in a local directory ~/repos/asf Install arm-none-eabi-gcc dependency: sudo dnf install arm-none-eabi-gcc Install newlib dependency: sudo dnf install arm-none-eabi-newlib arm-none-eabi-gcc-cs-c++.x86_64 gcc-c++-arm-linux-gnu.x86_64 JTAG connection \u00b6 Flashing \u00b6 make -f hello.D11C.blink.make edbg If the command doesn\u2019t work, you can just used the generated bin file and use edbg like this: sudo ./edbg -t samd11 -bpv -f hello.D11C.blink.bin Blink Demo \u00b6 Sparky blink Demo \u00b6 Context: Useful link: Tutorial for bare metal C programming for SAMD Microcontroller Pseudo-code: Nested while loops: Loop1: Runs the whole program. Loop2: Waits until PA02 state changes, the change is made by pulsating the button on the board. Loop3: Toggles the LED state reducing the period every time. Loop4: Toggles the LED state increasing the period every time. If2: Keeps the LED on or off depending on the st variable, saves the value every in every cycle. /* This program uses the SAM11.h library from the ASF programming repository at github. This program reads PA02 to turn on the LED at PA05, and makes a bouncing-blinky effect like an fluorescent old lamp. IO pins: PA02 <- Digital pull-up button input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <samd11.h> #define LED PORT_PA05 int cb = 200000 ; double p = 0.7 ; int st = 0 ; void delay ( uint32_t n ) { uint32_t i = 0 ; while ( i < n ) ++ i ; } int main ( void ) { //Clock Setup SYSCTRL -> OSC8M . bit . PRESC = 1 ; //Configure PIN PA02 as digital input PORT -> Group [ 0 ]. PINCFG [ 2 ]. reg |= PORT_PINCFG_INEN ; PORT -> Group [ 0 ]. PINCFG [ 2 ]. reg &= ~ PORT_PINCFG_PULLEN ; //Set LED pin PA05 as digital output REG_PORT_DIRSET0 = LED ; // Loop_1 while ( 1 ) { // Loop_2 while ( 1 ){ // Read PA02 state, halts the program until the button is pulsated if (( PORT -> Group [ 0 ]. IN . reg & PORT_PA02 ) < 1 ){ if ( st == 0 ){ st = 1 ; } else { st = 0 ; } break ; //Break to loop_3 } } // Loop_3 while ( cb > 100 ) { // Decreases delay time cb = cb - ( cb * p ); //Toggle LED REG_PORT_OUTTGL0 |= LED ; delay ( cb ); } // Loop_4 while ( cb < 300000 ){ //Increases delay time cb = cb + ( cb * p ); // Toggle LED REG_PORT_OUTTGL0 |= LED ; delay ( cb ); } if ( st == 1 ){ // Turn LED on REG_PORT_OUTSET0 |= LED ; // Else turn LED off } else { REG_PORT_OUTCLR0 |= LED ;} } } Arduino Workflow \u00b6 Installing mattairtech libraries: Flashing Bootloader: One button scroll-down/up controller \u00b6 Configuration: To use Human Interface Devices such as Mouse or keyboards on a computer, requires an special configuration of the ATSAMD11 bootloader programmed by Mattairtech. And also import the library from the arduino library manager repository: /* This program uses Arduino and Mouse library. This program reads the board button to scroll-down and after the release of the button waits for 4 seconds to scroll up. After 4 seconds the program waits for a new button push event. IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <Mouse.h> const int BTN = 2; const int LED = 5; int timer = 0; int btn_state = 0; int idle1 = 0; int idle2 = 0; void blink() { for(int pw = 0; pw < 255; pw++){ delay(1); analogWrite(LED,pw); } analogWrite(LED,0); } void setup() { pinMode(LED, OUTPUT); pinMode(BTN, INPUT); Mouse.begin(); //Serial.begin(9600); } void loop() { analogWrite(LED,5); btn_state = digitalRead(BTN); if(btn_state == LOW){ while(btn_state == LOW){ delay(200); analogWrite(LED, 100); Mouse.move(0,0,-1); btn_state = digitalRead(BTN); } for(int clicks = 0; clicks < 10; clicks++){ delay(200); //Serial.println(\"Clicked\"); //Serial.print(clicks); if(clicks < 6){ //digitalWrite(LED, HIGH); blink(); } btn_state = digitalRead(BTN); while(btn_state == LOW && clicks < 6){ delay(200); analogWrite(LED,30); Mouse.move(0,0,1); btn_state = digitalRead(BTN); } } } delay(200); //Serial.println(\"waitting\"); } Ncurses for microcontrollers \u00b6 About NCURSES : Its a library for application programming interface, for text-based user interfaces: Like on this example: This is an example on asciinema : This next program produces an UI that\u2019s transmitted over SERIAL Communication to the computer and accesed by using minicon. By pressing the physical button on my board the interface shows a message. MCURSES its a version of NCURSES for embeded systems, it means that\u2019s small enough to fit in the memory of the SAMD11C14. To install MCURSES: git clone https://github.com/ChrisMicro/mcurses /*--------------------------------------------------------------------------------------------------------------------------------------------------- mcurses box demo Copyright (c) 2011-2015 Frank Meyer - frank(at)fli4l.de Revision History: V1.0 2015 xx xx Frank Meyer, original version V1.1 2017 01 14 ChrisMicro, converted to Arduino example This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. Modification for Fab Academy week09: IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France --------------------------------------------------------------------------------------------------------------------------------------------------- */ #include \"mcurses.h\" #define myitoa(x,buf) itoa ((x), buf, 10) int buttonState = 0; char PROGMEM logoFab[] = \"\\r\\ ######## ########\\n\\ \\r\\ ######## #######\\n\\ \\r\\ ################### ######\\n\\ \\r\\ ## ############## ###\\n\\ \\r\\ (( ############# %%%\\n\\ \\r\\ ((( /##### %%%\\n\\ \\r\\ (((( %%%%\\n\\ \\r\\ (((( ((((((( %%%%%%%%%%%%%%\\n\\ \\r\\ (((( ((((((((( &%%%%%%%%%%%%%%%\\n\\ \\r\\ ((( (((((((((( &%%%%%%%%% %%%*\\n\\ \\r\\ (( ((((((((( %%%%%%%%% %%%\\n\\ \\r\\ ((( ((((((( (%%%%% %%%\\n\\ \\r\\ (((((((((( %%%%%%\\n\\ \\r\\ (((((((( %%%%%%%\\n\\ \\r\\ (((((((( %%%%%%%%\\n\\ \"; void Arduino_putchar(uint8_t c) { Serial.write(c); } void setup() { Serial.begin(115200); setFunction_putchar(Arduino_putchar); // tell the library which output channel shall be used initscr(); // initialize mcurses pinMode(5, OUTPUT); pinMode(2, INPUT); } void loop() { buttonState = digitalRead(2); // check if the pushbutton is pressed. If it is, the buttonState is HIGH: if (buttonState == LOW) { // turn LED on: digitalWrite(5, HIGH); mvaddstr_P (18, 0, PSTR(\"fabacademy.org\")); mvaddstr_P (20, 0, PSTR(\"This is an example of MCURSES a NCURSES library for microcontrollers\")); } else { // turn LED off: digitalWrite(5, LOW); } char buf[10]; uint8_t idx; mvaddstr_P (0, 0, PSTR(logoFab)); delay(500); clear (); } This is the result shown in asciinema: Video demo: Files \u00b6 For Millivolts plotter: blink.ino For blinky with ASF: blinky.c make file For Mouse controller: Arduino Mouse Scroller For Mcurses on Microcontrollers example: Arduino code mcurses-config.h mcurses.c mcurses.h","title":"9. Embedded programming"},{"location":"assignments/week09/#9-embedded-programming","text":"","title":"9. Embedded programming"},{"location":"assignments/week09/#introduction","text":"The Micro-controller that I\u2019m using in my board. Check this link for more information. This is the page for the group assignment. I \u2018ve contributed with the Raspberry pi board review. This week I\u2019ve learn how to program in bare-metal C using only the ASF library , then I used Rust Programming Language , but I didn\u2019t have time to write down all the steps in the compiling process and eventually found out some difficulties with the build toolchain. I\u2019ve also tried Haskell and autopilot and Finally the Arduino IDE. My board has only one Button as input in PA02 and one LED as output in PA05. So I was looking for something useful to make with only one button and one LED and the result is the one button Mouse Scroll that I\u2019ve made using the Arduino IDE , the Mouse library and event detection. Then I\u2019ve inspected using the oscilloscope","title":"Introduction"},{"location":"assignments/week09/#atsamd11c14-microcontroller","text":"Its a low-power, high-performance ARM\u00ae Cortex\u00ae-M0+ based flash microcontroller. It\u2019s one of the ATSAMD available in the AgriLab ElectroLab aside the SAMD21D17. I\u2019ve selected this microcontroller on week07 electronics design . The following information was learned and collected by me over this assignment. Summary of specifications: Information modified from Atmel documentation page SAMD11C14 Specs Family SAMD11 Max CPU speed 48 MHz Programmable memory size 16 KBytes SRAM 4 KBytes Auxiliary flash memory 64 Bytes Working Temperature range -40 to 105 C Operating Voltage range 1.62 to 3.63 Volts Direct memory access channels 6 SPI ports 2 I2C ports 2 Hardware touch periphereal PTC Periphereal pin select YES Native USB YES, Full speed Analog to Digital inputs (ADC) 5 ADC resolution 12 Bits ADC sampling rate 350 K Samples per Second Digital to Analog Outputs (DAC) 1 Input capture ports 3 Standalone output compare/ Standard PWM ports 4 Motor control PWM channels 8 16 Bit digital timers 2 Parallel port type GPIO Comparators 2 Internal Oscillator 32KHz, 32KHz ULP, 8 MHz Hardware Realtime clock counter/Realtime Clock YES IO Pins 12 Pincount 14 Low Power capability YES *This tables were taken from Mattairtech SAMD boards documentation.* Pinout table for Arduino IDE: SAMD11 Arduino PINOUT Other COM PWM Analog INT # PIN PIN # INT Analog PWM COM Other SCK*/RX2 TCC01 * * 5 A5 A4 4 * * TCC00 MOSI*/TX2 REF MOSI* TCC02 * 8 A8 (XIN) A2 2 * * DAC SCK* TCC03 * 9 A9 (XOUT) Vdd SDA/MISO* TC10 * NMI 14 A14 Gnd SCL/SS* TC11 * * 15 A15 A25 25 USB/DP BOOT 28 A28/RST A24 24 USB/DM SWDCLK TX1/MISO* 30 A30 A31 31 * RX1/SS* SWDIO ------------------- Detailed information: Arduino Port Alternate Function Comments (! means not used with this peripheral assignment) 0 ---- NOT A PIN NOT A PIN 1 ---- NOT A PIN NOT A PIN 2 PA02 DAC EIC/EXTINT[2] ADC/AIN[0] PTC/Y[0] DAC/VOUT 3 ---- NOT A PIN NOT A PIN 4 PA04 REFB / TX2* / TCC00 EIC/EXTINT[4] REF/ADC/VREFB ADC/AIN[2] AC/AIN[0] PTC/Y[2] SERCOM0/PAD[2] !SERCOM0/PAD[0] !TC1/WO[0] TCC0/WO[0] 5 PA05 RX2* / TCC01 EIC/EXTINT[5] ADC/AIN[3] AC/AIN[1] PTC/Y[3] SERCOM0/PAD[3] !SERCOM0/PAD[1] !TC1/WO[1] TCC0/WO[1] 6 ---- NOT A PIN NOT A PIN 7 ---- NOT A PIN NOT A PIN 8 PA08 TX1 / MOSI / TCC02 EIC/EXTINT[6] SERCOM1/PAD[2] !SERCOM0/PAD[2] TCC0/WO[2] !TCC0/WO[4] Xin32 / Xin 9 PA09 RX1 / SCK / TCC03 EIC/EXTINT[7] SERCOM1/PAD[3] !SERCOM0/PAD[3] TCC0/WO[3] !TCC0/WO[5] Xout32 / Xout 10 ---- NOT A PIN NOT A PIN 11 ---- NOT A PIN NOT A PIN 12 ---- NOT A PIN NOT A PIN 13 ---- NOT A PIN NOT A PIN 14 PA14 SDA / TC10 EIC/NMI ADC/AIN[6] PTC/X[0] PTC/Y[6] SERCOM0/PAD[0] !SERCOM2/PAD[0] TC1/WO[0] !TCC0/WO[0] 15 PA15 SCL / TC11 EIC/EXTINT[1] ADC/AIN[7] PTC/X[1] PTC/Y[7] SERCOM0/PAD[1] !SERCOM2/PAD[1] TC1/WO[1] !TCC0/WO[1] 16 ---- NOT A PIN NOT A PIN 17 ---- NOT A PIN NOT A PIN 18 ---- NOT A PIN NOT A PIN 19 ---- NOT A PIN NOT A PIN 20 ---- NOT A PIN NOT A PIN 21 ---- NOT A PIN NOT A PIN 22 ---- NOT A PIN NOT A PIN 23 ---- NOT A PIN NOT A PIN 24 PA24 USB_NEGATIVE USB/DM 25 PA25 USB_POSITIVE USB/DP 26 ---- NOT A PIN NOT A PIN 27 ---- NOT A PIN NOT A PIN 28 PA28 Reset Reset, BOOT (double tap bootloader entry) 29 ---- NOT A PIN NOT A PIN 30 PA30 MISO / SWD CLK !EIC/EXTINT[2] SERCOM1/PAD[0] !SERCOM1/PAD[2] !TC2/WO[0] !TCC0/WO[2] SWD CLK, leave floating during boot 31 PA31 SS / SWD IO EIC/EXTINT[3] SERCOM1/PAD[1] !SERCOM1/PAD[3] !TC2/WO[1] !TCC0/WO[3] SWD IO The SAMD11C14 its part of the SAMD family of microntrollers, its has multiple thing that are of the interest for my project including: Native USB connectors Digital to Analog Output Analog to Digital Input Communication I2C ISP Serial SAMD11C14 comes from: This is a reference for the PIN numbers of the SAMD11C14: And this is a schematic of the Digital to analog converter that I\u2019m interested to use for the Dielectric Spectroscopy module of my final project. The multiplexor table shows the pins and its capabilities for Communication and functions:","title":"ATSAMD11C14 Microcontroller"},{"location":"assignments/week09/#debugging","text":"I\u2019ve found out the difference between pull-up and pull-down arrangements for floating point connections. So I\u2019ve the idea to inspect using the oscilloscope the pin PA_02 which is connected to a button on my board designed in week07 Inspecting button at PA02: Power source at 5V: Signal in the Oscilloscope: Program to estimate mV at input: const int BTN = 2; int BTN_STATE = digitalRead(BTN); const long VIN_FACTOR = 3.3 / 1.023 ; void setup() { pinMode(LED_BUILTIN, OUTPUT); pinMode(BTN, INPUT); Serial.begin(9600); } void loop() { Serial.println(analogRead(BTN) * VIN_FACTOR); analogWrite(LED_BUILTIN, analogRead(BTN) ); } Arduino capture:","title":"Debugging"},{"location":"assignments/week09/#ebdg-workflow","text":"Introduction:","title":"EBDG workflow"},{"location":"assignments/week09/#requirements","text":"Download files from FabAcademy material: Make file. Blink.c Bootloader Blink.ino Clone ASF repository: git clone git clone https://github.com/avrxml/asf.git Changing D11C/hello.D11C.blink.make code to point correctly to asf. I\u2019ve cloned the repository in a local directory ~/repos/asf Install arm-none-eabi-gcc dependency: sudo dnf install arm-none-eabi-gcc Install newlib dependency: sudo dnf install arm-none-eabi-newlib arm-none-eabi-gcc-cs-c++.x86_64 gcc-c++-arm-linux-gnu.x86_64","title":"Requirements"},{"location":"assignments/week09/#jtag-connection","text":"","title":"JTAG connection"},{"location":"assignments/week09/#flashing","text":"make -f hello.D11C.blink.make edbg If the command doesn\u2019t work, you can just used the generated bin file and use edbg like this: sudo ./edbg -t samd11 -bpv -f hello.D11C.blink.bin","title":"Flashing"},{"location":"assignments/week09/#blink-demo","text":"","title":"Blink Demo"},{"location":"assignments/week09/#sparky-blink-demo","text":"Context: Useful link: Tutorial for bare metal C programming for SAMD Microcontroller Pseudo-code: Nested while loops: Loop1: Runs the whole program. Loop2: Waits until PA02 state changes, the change is made by pulsating the button on the board. Loop3: Toggles the LED state reducing the period every time. Loop4: Toggles the LED state increasing the period every time. If2: Keeps the LED on or off depending on the st variable, saves the value every in every cycle. /* This program uses the SAM11.h library from the ASF programming repository at github. This program reads PA02 to turn on the LED at PA05, and makes a bouncing-blinky effect like an fluorescent old lamp. IO pins: PA02 <- Digital pull-up button input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <samd11.h> #define LED PORT_PA05 int cb = 200000 ; double p = 0.7 ; int st = 0 ; void delay ( uint32_t n ) { uint32_t i = 0 ; while ( i < n ) ++ i ; } int main ( void ) { //Clock Setup SYSCTRL -> OSC8M . bit . PRESC = 1 ; //Configure PIN PA02 as digital input PORT -> Group [ 0 ]. PINCFG [ 2 ]. reg |= PORT_PINCFG_INEN ; PORT -> Group [ 0 ]. PINCFG [ 2 ]. reg &= ~ PORT_PINCFG_PULLEN ; //Set LED pin PA05 as digital output REG_PORT_DIRSET0 = LED ; // Loop_1 while ( 1 ) { // Loop_2 while ( 1 ){ // Read PA02 state, halts the program until the button is pulsated if (( PORT -> Group [ 0 ]. IN . reg & PORT_PA02 ) < 1 ){ if ( st == 0 ){ st = 1 ; } else { st = 0 ; } break ; //Break to loop_3 } } // Loop_3 while ( cb > 100 ) { // Decreases delay time cb = cb - ( cb * p ); //Toggle LED REG_PORT_OUTTGL0 |= LED ; delay ( cb ); } // Loop_4 while ( cb < 300000 ){ //Increases delay time cb = cb + ( cb * p ); // Toggle LED REG_PORT_OUTTGL0 |= LED ; delay ( cb ); } if ( st == 1 ){ // Turn LED on REG_PORT_OUTSET0 |= LED ; // Else turn LED off } else { REG_PORT_OUTCLR0 |= LED ;} } }","title":"Sparky blink Demo"},{"location":"assignments/week09/#arduino-workflow","text":"Installing mattairtech libraries: Flashing Bootloader:","title":"Arduino Workflow"},{"location":"assignments/week09/#one-button-scroll-downup-controller","text":"Configuration: To use Human Interface Devices such as Mouse or keyboards on a computer, requires an special configuration of the ATSAMD11 bootloader programmed by Mattairtech. And also import the library from the arduino library manager repository: /* This program uses Arduino and Mouse library. This program reads the board button to scroll-down and after the release of the button waits for 4 seconds to scroll up. After 4 seconds the program waits for a new button push event. IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <Mouse.h> const int BTN = 2; const int LED = 5; int timer = 0; int btn_state = 0; int idle1 = 0; int idle2 = 0; void blink() { for(int pw = 0; pw < 255; pw++){ delay(1); analogWrite(LED,pw); } analogWrite(LED,0); } void setup() { pinMode(LED, OUTPUT); pinMode(BTN, INPUT); Mouse.begin(); //Serial.begin(9600); } void loop() { analogWrite(LED,5); btn_state = digitalRead(BTN); if(btn_state == LOW){ while(btn_state == LOW){ delay(200); analogWrite(LED, 100); Mouse.move(0,0,-1); btn_state = digitalRead(BTN); } for(int clicks = 0; clicks < 10; clicks++){ delay(200); //Serial.println(\"Clicked\"); //Serial.print(clicks); if(clicks < 6){ //digitalWrite(LED, HIGH); blink(); } btn_state = digitalRead(BTN); while(btn_state == LOW && clicks < 6){ delay(200); analogWrite(LED,30); Mouse.move(0,0,1); btn_state = digitalRead(BTN); } } } delay(200); //Serial.println(\"waitting\"); }","title":"One button scroll-down/up controller"},{"location":"assignments/week09/#ncurses-for-microcontrollers","text":"About NCURSES : Its a library for application programming interface, for text-based user interfaces: Like on this example: This is an example on asciinema : This next program produces an UI that\u2019s transmitted over SERIAL Communication to the computer and accesed by using minicon. By pressing the physical button on my board the interface shows a message. MCURSES its a version of NCURSES for embeded systems, it means that\u2019s small enough to fit in the memory of the SAMD11C14. To install MCURSES: git clone https://github.com/ChrisMicro/mcurses /*--------------------------------------------------------------------------------------------------------------------------------------------------- mcurses box demo Copyright (c) 2011-2015 Frank Meyer - frank(at)fli4l.de Revision History: V1.0 2015 xx xx Frank Meyer, original version V1.1 2017 01 14 ChrisMicro, converted to Arduino example This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. Modification for Fab Academy week09: IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France --------------------------------------------------------------------------------------------------------------------------------------------------- */ #include \"mcurses.h\" #define myitoa(x,buf) itoa ((x), buf, 10) int buttonState = 0; char PROGMEM logoFab[] = \"\\r\\ ######## ########\\n\\ \\r\\ ######## #######\\n\\ \\r\\ ################### ######\\n\\ \\r\\ ## ############## ###\\n\\ \\r\\ (( ############# %%%\\n\\ \\r\\ ((( /##### %%%\\n\\ \\r\\ (((( %%%%\\n\\ \\r\\ (((( ((((((( %%%%%%%%%%%%%%\\n\\ \\r\\ (((( ((((((((( &%%%%%%%%%%%%%%%\\n\\ \\r\\ ((( (((((((((( &%%%%%%%%% %%%*\\n\\ \\r\\ (( ((((((((( %%%%%%%%% %%%\\n\\ \\r\\ ((( ((((((( (%%%%% %%%\\n\\ \\r\\ (((((((((( %%%%%%\\n\\ \\r\\ (((((((( %%%%%%%\\n\\ \\r\\ (((((((( %%%%%%%%\\n\\ \"; void Arduino_putchar(uint8_t c) { Serial.write(c); } void setup() { Serial.begin(115200); setFunction_putchar(Arduino_putchar); // tell the library which output channel shall be used initscr(); // initialize mcurses pinMode(5, OUTPUT); pinMode(2, INPUT); } void loop() { buttonState = digitalRead(2); // check if the pushbutton is pressed. If it is, the buttonState is HIGH: if (buttonState == LOW) { // turn LED on: digitalWrite(5, HIGH); mvaddstr_P (18, 0, PSTR(\"fabacademy.org\")); mvaddstr_P (20, 0, PSTR(\"This is an example of MCURSES a NCURSES library for microcontrollers\")); } else { // turn LED off: digitalWrite(5, LOW); } char buf[10]; uint8_t idx; mvaddstr_P (0, 0, PSTR(logoFab)); delay(500); clear (); } This is the result shown in asciinema: Video demo:","title":"Ncurses for microcontrollers"},{"location":"assignments/week09/#files","text":"For Millivolts plotter: blink.ino For blinky with ASF: blinky.c make file For Mouse controller: Arduino Mouse Scroller For Mcurses on Microcontrollers example: Arduino code mcurses-config.h mcurses.c mcurses.h","title":"Files"},{"location":"assignments/week10/","text":"10. Mechanical design / Machine design \u00b6 Introduction \u00b6 On this week we learn to design and make a machine. We faced different difficulties related to the teamwork, machine motion, electronics and the GCODE. This was a special week since the goal was to design and make a machine working as a team. And we are a very diverse team with different skills and motivations. The work was divided naturally as things came and were picked by us Theo , Elina and me. Theo has the skill to design and make machines quickly, so He took responsibility of the machine frame and material selection. Our instructors Luc Hanneuse and Florent Lemaire looked ahead to this week and they gave us access to Arduino UNO GRBL boards that I\u2019ll explain later on this section . As I\u2019ve been working just fine under Electronics and software I\u2019ve picked the responsibility of that part of the project. Elina took responsability of the pumping system and the research of the best pancake recipe for the machine. One of the challenges on AgriLab under the COVID-19 corfew and restrictions were the complete all this machine design and building process in Thursday, Friday and Monday, between 9am to 5:20pm. This documentation its separated on multiple sections describing my work process chronologically. This is a resume of the work: The idea and teamwork. The electronics setup. GRBL firmware setup. Machine building. The GCODE file creation process with Fusion 360. Testing. Final result. Learning outcome. Check the group assignment here Idea generation and team work. \u00b6 We first talked together to explain our ideas and split the work. Theo\u2019s idea: Pancake machine. Elina\u2019s idea: 3 axis CNC machine. My idea was to work on someone\u2019s else idea. So we agreed to work together to develop Theo\u2019s pancake machine. This was the first sketch we made together. Then we explored the available materials and parts in the Lab. Pancake robot: \u00b6 General schematic or diagram Work split \u00b6 Theo machine design and building Antonio CNC control system Elina pumping system and pancake recipe Criteria to chose the materials for the structure \u00b6 This is a list of priorities for the materials we have used for the machine. Although we had to prioritize also time and availability and machining process. The person in charge of the final selections was my team mate Theo Food safety Structural strength Heat resistance Quantity Quickness for building Materials selected \u00b6 After looking at our instructor Luc Laser machine: We got some ideas and after looking of the available quicker machining processes we choose: Plexiglass: Safety datasheet. This is a transparent plastic material that\u2019s food-safe for contact. We selected Laser cut for machining process. MDF wood 6mm thickness: Safety datasheet. This is a material made out of wood fibers, mixed with wax and resins. Compared to PLexiglass its more suitable for heat resistance, so the parts closed to the source of heat will be made out of it. Compared to aluminum its cheaper and easy for machining. Extruded aluminum profile 20x20 mm: Datasheet. This is strongest structural material of our list. For machining it required a big saw machine available in the MechaLab at Agrilab. It\u2019s also the most expensive material. It brings a lot of structural advantages like the rails that we used for assembly multiple parts of the machine. Electronics setup \u00b6 Introduction: CNC control its a complex task, and there are few options open-sourced and easy to use. GRBL its an Open-source software for hobby CNC control written for the AVR Atmega328 micro-controllers . Arduino UNO Boards are based on the AVR Atmega328 micro-controller, so our electronic CNC board kit uses all the capabilities of the software and makes the electronics assemble process easy and accessible for new CNC learners. The GRBL board we have it\u2019s a common one used for CNC machines, like small low power laser cutters, small milling machines and vinyl cutters. I\u2019ll explain more about it later, check it here. Requirements \u00b6 Those are the parts, consumables, tools and software I\u2019ve used to accomplish my part of the project. Parts \u00b6 Click on name to check reference Part Quantity NEMA 17 step motors 2 CNC GRBL arduino UNO compatible board 1 HR4988 Motor drivers 2 Limit switches 2 Arduino UNO 1 Connectors for wiring # Recycled ATX power supply 1 Consumables \u00b6 Ribbon wire 4 colors for stepper motors AWG wire 1669 Connectors \u201cType 1\u201d Connector \u201cType 2\u201d Tools \u00b6 GST Crimping Tool Soldering iron Clippers Multimeter Cross screw driver Wire stripper Software \u00b6 Arduino IDE Universal Gcode sender GRBL firmware Fusion 360 Instructions for the usage and configurations are detailed in the next steps. ATX Power supply setup \u00b6 We checked possible power sources and the most suitable one was this recycled ATX power supply. In AgriLab there\u2019s a large stock of recycled parts and materials. ATX Power on jumper \u00b6 To switch on the power supply I added a jumper between the green wire and ground. Explain more Cut the wires Connect using an electrical union connector ATX voltage Outputs \u00b6 This is the table with the Voltage and Power of every output in the ATX power supply. I\u2019ve used 3 pairs of 12 Volts based in the power consumption of every component listed here: Part Voltage Wire color Black Ground wire Arduino UNO board 5 Volts Red Yes GRBL board 12 Volts Yellow Yes 12 V Red LED 12 Volts Yellow Yes Peristaltic pump 12 Volts Yellow Yes CNC GRBL Arduino UNO compatible board \u00b6 This is the schematic given by the manufacturer. Schematic has some faults in the motor driver silk. characteristics: GRBL Board Operation voltage 12 to 16 V not regulated, only protected by a fusible Axis 3 connectors for XYZ +1 Clone axis connector Limit switches +-X, +-Y, +- Z Spindle control Enable, Direction, cooling Also used for laser output control Machine override controls Abort, Hold, Resume Emergency stop Serial communication pinouts SDA, SCL, TX RX, RST, 3.3V 5V Microstepping configuration jumpers 1/2, 1/4, 1/8, 1/16 Assembly \u00b6 Connect the motor driver boards to the GRBL board sockets. Check the pinout and be sure all the pins coincide correctly. Motor drivers \u00b6 Characteristic: HR4988 motor driver Operation voltage 5 Volts Resistance R100 0.1 Ohms Motor Voltage Regulator Potentiometer for VREF Pinouts in order: Left Right Direction GND Step VDD Sleep 1B Reset 1A MS3 2A MS2 2B MS1 GND Enable VMOT Stepper motors \u00b6 Wiring \u00b6 The wiring with the stepper motors was confusing and I invested one afternoon to find out the right wiring configuration. I\u2019ve find the correct wiring configuration after looking at this video tutorial in Spanish from \u201cEl Profe Garc\u00eda\u201d. On the video I\u2019ve learn how to identify the coils inside the step motor. And on this other video form the same channel shows the right pinout connection with a controller board. I\u2019ve found the solution by looking carefully at driver the controller. Silk draft: Silk board: See labels at the right side: Comparison table: Silk board Silk draft B2 B2 A2 B1 A1 A1 B1 A2 For me it was so confusing to see some documentation showing 2A, 2B, 1A and 1B, and others showing A1, A2, B2, B1. The connector cable has 4 wires of colors, Red, Green, Blue and Black. This is the right configuration to punch the connectors to the cable from the motor driver to the stepper motor. Code Motor driver color Step motor color B2 Green Red A1 Red Blue A1 Black Green B1 Blue Black VREF calibration \u00b6 This is an important task to prevent over-heating of the motor drivers, and excessive vibration and over-heating of the step motors. This the motor datasheet provided by the manufacturer SMD resistor calculator Calculation: Values Current Sense resistance 0.01 Ohms Rsense Rated motor current 1.3 A RMC Safety margin percentage 25 % SM I\u2019ve found this formula VREF = RMC x 8 x Rsense Process: Use the multimeter as voltmeter in a scale of less than 5 Volts. Get a multimeter with a clamp connector in the cathode Power on the GRBL board Place the cathode (screw driver) in the VREF potentiometer and the ground probe in the bottom left GND pin. Turn the potentiometer clockwise to increase and anti-clockwise to decrease the VREF. This method helped me to reduce a crancky noise in the motors and overheating of the driver controller board. I have tried also to reduce the length of the cables to reduce the noise but this VREF method work fine at the end. Steps per millimeter for belt driven systems \u00b6 I\u2019ve calculated this using this calulator. Data Value Motor step angle 1.8\u00b0 Driven Microstepping Full step Belt pitch 2 mm (GT2) Pulley tooth count 20 Result: 5.00 Resolution Teeth Step angle Stepping Belt 200 micron 20 1.8\u00b0 Full step 2mm Wiring and connections \u00b6 Follow this instructions to connect and wire the CNC control system: Connect motor driver boards to the CNC arduino shield Connect stepper motors with the correct wiring configuration specified in the stepper motors section. Connect X and Y limit switches to -X and -Y ports in the board. Connect power supply yellow and black cables from the ATX power supply. I\u2019ve included a 12 V Red led to give some visual feedback, it\u2019s connected by an independent yellow and black wires from the ATX power supply. Software setup \u00b6 GRBL \u00b6 As I mentioned before, GRBL is an Open-Source firmware that runs in Atmega328 based Arduinos for low cost CNC machines. The version I\u2019ve used is the v1.1 released in 08/2019. I\u2019ve downloaded the repository using this command: git clone https://github.com/grbl/grbl.git Install requirements for Fedora Linux: Avr gcc compiler Arduino sudo dnf install avr-gcc arduino Once the requirements are installed, the next steps are documented in the GRBL repository. Compiling and Flashing GRBL using Arduino IDE \u00b6 These instructions were extracted from GRBL documentation here: Launch the Arduino IDE Make sure you are using the most recent version of the Arduino IDE! Load the grbl folder into the Arduino IDE as a Library. Click the Sketch drop-down menu, navigate to Include Library and select Add .ZIP Library . The Add .ZIP Library command supports both a .ZIP file or a folder. In our case, there is no .ZIP file. You can confirm that the library has been added. Click the Sketch drop-down menu again, navigate to Include Library , then scroll to the bottom of the list where you should see grbl . IMPORTANT: Select the grbl folder inside the grbl-XXX folder, which only contains the source files and an example directory. If you accidentally select the .zip file or the wrong folder, you will need to navigate to your Arduino library, delete the mistake, and re-do Step 3. Open the GrblUpload Arduino example. Click the File down-down menu, navigate to Examples->Grbl , and select GrblUpload . Do not alter this example in any way! Grbl does not use any Arduino code. Altering this example may cause the Arduino IDE to reference Arduino code and compiling will fail. Compile and upload Grbl to your Arduino. Connect your Arduino Uno to your computer. Make sure your board is set to the Arduino Uno in the Tool->Board menu and the serial port is selected correctly in Tool->Serial Port . (There are some controller boards on ebay that have the Arduino Pro bootloader on it, if you get error messages like \u201cavrdude: stk500_getsync() attempt n of 10: not in sync: resp=0x20\u201d then choose another board, try Arudino Pro/Pro Mini) Click the Upload , and Grbl should compile and flash to your Arduino! (Flashing with a programmer also works by using the Upload Using Programmer menu command.) Compiling and flashing using command line tools \u00b6 Requirements for Fedora Linux GRBL repository: git clone https://github.com/grbl/grbl.git AVR-GCC and Arduino core libraries: sudo dnf install avr-gcc arduino-core Make: sudo dnf install make Usage Go to your local GRBL repository using your terminal by cd , in my case this is: cd $HOME/repos/grbl Then use make to compile the grbl HEX file that\u2019s going to be flashed to your Arduino UNO board: make clean && make grbl.hex If the HEX file is successfully compiled then proceed to flash it to the board by executing: avrdude -v -patmega328p -Uflash:w:grbl_v1.1h.20190825.hex:i -carduino -b 115200 -P /dev/ttyACM0 Where: /dev/ttyACM0 it\u2019s the local addres of my Arduino UNO board. -patmega328p it\u2019s microprocessor family -Uflash:w:grbl*.hex it\u2019s the grbl_file_name.hex you have compiled. b 115200 it\u2019s the baudrate speed. There are different ways to know this value, the easiest one it\u2019s this: Execute on the terminal with your board unplugged : ls /dev/tty* Save the output and then execute the same command again, but with your Arduino board connected , compare the difference, and the new address it\u2019s the one of your Arduino: Disable Z axis homing routine \u00b6 After flashing the board, and setting up electronics and power source I tried to configure the homming using Universal Gcode Sender but, I got many alarms in the process of trying the limit switches. Remember I\u2019m using a 2 axis configuration in hardware but then the GRBL by default expects Z axis limit switch in the routine. We need to edit and re-flash the firmware to the board, this are the steps needed: In the lines 75 and 76 of the grbl/config.h file its declared the homing process and as the comments point: line 75 moves the Z axis which is not existing in our configuration, line 76 moves the XY axis at the same time and rate. This whole process it\u2019s called \u201climit finding\u201d: Edition: Comment line 75 by adding double slash \u201c//\u201d at the begging of the line. Edit line 76 by changing \u201cHOMING_CYCLE_1\u201d to \u201cHOMING_CYCLE_0\u201d. Save the file, and run the compilation process with Arduino or Linux command tools. Now the homing cycle starts by moving the X and Y axis and the errors are fixed. Firmware configuration \u00b6 The important points of the firmware configuration are: \u201cReport in inches\u201d, which means you need to disable it to use millimeters. \u201cHoming cycle enabled\u201d, this is required since we\u2019re using a band-pulley system, and as result the machine is not precise enough to preserve an reliable 0 position. \u201cWorking area limits\u201d: X: 310 mm Y: 290 mm We obtained this measurements by manually measuring the travel length of each axis: X axis: Y axis: I\u2019ve used UGS to change this configuration and also manually typing the codes in a terminal using serial communication and minicom : Firmware configuration table: The values like this \u201c$0\u201d or \u201c$23\u201d should by typed in the terminal after Serial communication has been established: OR under Universal GCODE Sender see firmware configuration process here : This is a recorded session using Minicom for serial communication at 115200 Bauds to /dev/ttyACM0 Arduino UNO with GRBL firmware: Setting Value Description $0 10 Step pulse time $1 25 Step idle delay $2 0 Step pulse invert $3 2 Step direction invert $4 0 Invert Step enable pin $5 0 Invert limit pins $6 0 Invert probe pin $10 1 Status report options $11 0.010 Junction deviation $12 0.020 Arc tolerance $13 0 Report in inches $20 1 Soft limits enable $21 0 Hard limits enable $22 1 Homing cycle enable $23 7 Homing direction invert $24 25.000 Homing locate feed rate $25 700.000 Homing search feed rate $26 250 Homing switch de-bouncing delay $27 1.000 Homing switch pull-off distance $30 10000 Maximum spindle speed $31 0 Minimum spindle speed $32 1 Laser mode enabled $100 5.000 X-axis travel resolution $101 5.000 Y-axis travel resolution $102 5.000 Z-axis travel resolution $110 10000.000 X-axis maximum rate $111 10000.000 Y-axis maximum rate $112 500.000 Z-axis maximum rate $120 5000.000 X-axis acceleration $121 5000.000 Y-axis acceleration $122 10.000 Z-axis acceleration $130 310.000 X-axis maximum travel $131 290.000 Y-axis maximum travel $132 0.000 Z-axis maximum travel GCODE testing \u00b6 I\u2019ve the time to test multiple GCODES compatible for this version of GRBL. Code Action $H Starts homing cycle $G28 Goes to the maximum point $G0 X100 Linear movement on X axis by 100 mm $G0 Y100 Linear movement on Y axis by 100 mm $G0 X100 Y100 Linear movement on X and Y axis by 100 mm $G53 Uses absolute coordinates for positioning $G27 Uses XY plane To execute this commands I\u2019ve used Universal GCODE Sender: Fusion 360 work-flow \u00b6 I\u2019ve used Autodesk\u2019s Fusion 360 to understand how the process of making GCODE works with a familiar software. Although there are other options like LaserWeb The Design process consisted just in drawing a shape using the sketch tools under the Design environment of Fusion 360. I\u2019ve drafted simple shapes to test the pancake machine this an example of the test we ran on the Pancake Machine: I\u2019ve drafted this Nut of 120mm side to side and a inner circle of 70 mm diameter. I\u2019ve made under the \u201cManufacture\u201d apart a setup process, selecting the Nut sketch as the working area: I\u2019ve selected as Machine \u201cAutodesk Generic Cutting Machine\u201d Then selected the machining process as \u201cCutting\u201d: Then selected \u201c2D profile as cutting process\u201d in the top bar as shown: Under the \u201cSelect Tool\u201d apart I\u2019ve selected the \u201c1- laser cutter\u201d option as shown: Then selected the countours in the sketch as shown: Finally setting this parameters: offset of 10mm. retract heigh 5mm. stock top at 0 mm. Then under the \u201cInspection menu\u201d I\u2019ve generated the following GCODE simulation. To process the files and output a GCODE File for the machine the process its made as shown: Under the \u201cinspection apart\u201d in the topbar select \u201cPost process\u201d option: Then Select \u201cGrbl Laser/grbl laser\u201d for machine type: I\u2019ve setup the output directory and the program name as ~/Desktop/cake_test_01.nc : This the GCODE generated: % (cake_test_01) (Machine) ( vendor: Autodesk) ( description: Generic Cutting Machine) G90 G94 G17 G21 (2D Profile2) G54 G0 S255 M4 G0 X62.576 Y25.508 G1 X61.576 Y23.776 F1000 G1 X62.447 Y22.268 G1 X131.498 G1 X166.023 Y82.068 G1 X131.498 Y141.868 G1 X62.447 G1 X27.921 Y82.068 G1 X61.576 Y23.776 G1 X63.576 G1 S0 M30 % Universal GCODE sender \u00b6 Extracted from Universal GCODE SENDER website *A full featured gcode platform used for interfacing with advanced CNC controllers like GRBL , TinyG, g2core and Smoothieware. Universal Gcode Sender is a self-contained Java application which includes all external dependencies and can be used on most computers running Windows, MacOSX or Linux. * Characteristics: Multiplatform Written in JAVA programming language. Provides an interface for Serial communication. Provides tools like Joystick and file input to run GCODE files. It has a testing tools The Configuration wizard makes the firmware configuration easier. Overview: Instructions to install and run UGS under Linux: \u00b6 Download Universal GCODE sender following this link Once the files have been downloaded run the installation process depending on your platform. Install JAVA OpenJDK Runtime for Linux: dnf install java-11-openjdk.x86_64 Follow the instructions on this page for more information about OpenJDK in Fedora Linux For Linux I\u2019ve only had to extract the ZIP files and run the following command inside the \u201cbin\u201d directory: ./ugsplatform Run Universal GCODE sender and activate the communication with the machine. I\u2019ve identify the GRBL Serial communiction device as /dev/ttyACM0 automatically with UGS. Then I\u2019ve established serial communication at 115200 bauds. Firmware configuration Wizard: \u00b6 I\u2019ve followed the Firmware configuration wizard to setup the values I\u2019ve explained under the Firmware Configuration section Load GCODE files \u00b6 Run the HOME cycle: Import the GCODE in \u201cFile\u201d \u2013> \u201cOpen\u201d Press the \u201cPlay\u201d Button to run the GCODE Testing \u00b6 Fixing Slow speeds: \u00b6 Change the maximum acceleration on the firmware configuration: Fixing High vibration: \u00b6 Decrease the motor drivers VREF until the vibration gets reduced. Do this by running a displacement GCODE command like: G00 X100 to debug the X axis G00 Y100 to debug the Y axis Fixing stuck motors \u00b6 Axis not moving: Check the transmission band, look for any stuck parts or excessive friction. Adjust the motor drivers VREF increasing the output Motors not changing direction I\u2019ve found that the silk labels on the motor drivers are inverted and thus it gets confusing if you try to connect the stepper motors following the schematics. Final result \u00b6 At the end we tested the machine and made some pancakes this video was edited by Theo . The assemble process of the different parts of the project took place while working, the integration and final test took place on Monday. We iterated two times, the first version of the machine had an independent pumping control for speed flow control with a joystick . while Elina worked on her system and later her introduced tool control to activate and deactivate the peristaltic pump system. With the commnads \u201cM03\u201d and \u201cM04\u201d. This independent Arduino pumping system was later removed. Learning outcome \u00b6 For an effective teamwork communication its crucial , the first two days we had a very good understanding of the tasks and over the last two days communication stopped and so we started facing some misunderstandings between instructors and students. Its important to mention and keep record of all the modifications we make to others works , for example on day 3 I spent 4 hours debugging the machine after a modification to the firmware I didn\u2019t knew about. As the task was for 3 days 4 maximum, stress was a factor that limited our integration as teammates but at the end we cope and moved forward to deliver the machine on time. Design improvements: Use Laserweb for user friendly interaction adding a raspberry pi as server and a display in place to have an embed pancake machine system. We have also discussed to run a machine demo on FabAcademy graduation. Files \u00b6 firmware test_cake gcode test_cake fusion file","title":"10. Mechanical design / Machine design"},{"location":"assignments/week10/#10-mechanical-design-machine-design","text":"","title":"10. Mechanical design / Machine design"},{"location":"assignments/week10/#introduction","text":"On this week we learn to design and make a machine. We faced different difficulties related to the teamwork, machine motion, electronics and the GCODE. This was a special week since the goal was to design and make a machine working as a team. And we are a very diverse team with different skills and motivations. The work was divided naturally as things came and were picked by us Theo , Elina and me. Theo has the skill to design and make machines quickly, so He took responsibility of the machine frame and material selection. Our instructors Luc Hanneuse and Florent Lemaire looked ahead to this week and they gave us access to Arduino UNO GRBL boards that I\u2019ll explain later on this section . As I\u2019ve been working just fine under Electronics and software I\u2019ve picked the responsibility of that part of the project. Elina took responsability of the pumping system and the research of the best pancake recipe for the machine. One of the challenges on AgriLab under the COVID-19 corfew and restrictions were the complete all this machine design and building process in Thursday, Friday and Monday, between 9am to 5:20pm. This documentation its separated on multiple sections describing my work process chronologically. This is a resume of the work: The idea and teamwork. The electronics setup. GRBL firmware setup. Machine building. The GCODE file creation process with Fusion 360. Testing. Final result. Learning outcome. Check the group assignment here","title":"Introduction"},{"location":"assignments/week10/#idea-generation-and-team-work","text":"We first talked together to explain our ideas and split the work. Theo\u2019s idea: Pancake machine. Elina\u2019s idea: 3 axis CNC machine. My idea was to work on someone\u2019s else idea. So we agreed to work together to develop Theo\u2019s pancake machine. This was the first sketch we made together. Then we explored the available materials and parts in the Lab.","title":"Idea generation and team work."},{"location":"assignments/week10/#pancake-robot","text":"General schematic or diagram","title":"Pancake robot:"},{"location":"assignments/week10/#work-split","text":"Theo machine design and building Antonio CNC control system Elina pumping system and pancake recipe","title":"Work split"},{"location":"assignments/week10/#criteria-to-chose-the-materials-for-the-structure","text":"This is a list of priorities for the materials we have used for the machine. Although we had to prioritize also time and availability and machining process. The person in charge of the final selections was my team mate Theo Food safety Structural strength Heat resistance Quantity Quickness for building","title":"Criteria to chose the materials for the structure"},{"location":"assignments/week10/#materials-selected","text":"After looking at our instructor Luc Laser machine: We got some ideas and after looking of the available quicker machining processes we choose: Plexiglass: Safety datasheet. This is a transparent plastic material that\u2019s food-safe for contact. We selected Laser cut for machining process. MDF wood 6mm thickness: Safety datasheet. This is a material made out of wood fibers, mixed with wax and resins. Compared to PLexiglass its more suitable for heat resistance, so the parts closed to the source of heat will be made out of it. Compared to aluminum its cheaper and easy for machining. Extruded aluminum profile 20x20 mm: Datasheet. This is strongest structural material of our list. For machining it required a big saw machine available in the MechaLab at Agrilab. It\u2019s also the most expensive material. It brings a lot of structural advantages like the rails that we used for assembly multiple parts of the machine.","title":"Materials selected"},{"location":"assignments/week10/#electronics-setup","text":"Introduction: CNC control its a complex task, and there are few options open-sourced and easy to use. GRBL its an Open-source software for hobby CNC control written for the AVR Atmega328 micro-controllers . Arduino UNO Boards are based on the AVR Atmega328 micro-controller, so our electronic CNC board kit uses all the capabilities of the software and makes the electronics assemble process easy and accessible for new CNC learners. The GRBL board we have it\u2019s a common one used for CNC machines, like small low power laser cutters, small milling machines and vinyl cutters. I\u2019ll explain more about it later, check it here.","title":"Electronics setup"},{"location":"assignments/week10/#requirements","text":"Those are the parts, consumables, tools and software I\u2019ve used to accomplish my part of the project.","title":"Requirements"},{"location":"assignments/week10/#parts","text":"Click on name to check reference Part Quantity NEMA 17 step motors 2 CNC GRBL arduino UNO compatible board 1 HR4988 Motor drivers 2 Limit switches 2 Arduino UNO 1 Connectors for wiring # Recycled ATX power supply 1","title":"Parts"},{"location":"assignments/week10/#consumables","text":"Ribbon wire 4 colors for stepper motors AWG wire 1669 Connectors \u201cType 1\u201d Connector \u201cType 2\u201d","title":"Consumables"},{"location":"assignments/week10/#tools","text":"GST Crimping Tool Soldering iron Clippers Multimeter Cross screw driver Wire stripper","title":"Tools"},{"location":"assignments/week10/#software","text":"Arduino IDE Universal Gcode sender GRBL firmware Fusion 360 Instructions for the usage and configurations are detailed in the next steps.","title":"Software"},{"location":"assignments/week10/#atx-power-supply-setup","text":"We checked possible power sources and the most suitable one was this recycled ATX power supply. In AgriLab there\u2019s a large stock of recycled parts and materials.","title":"ATX Power supply setup"},{"location":"assignments/week10/#atx-power-on-jumper","text":"To switch on the power supply I added a jumper between the green wire and ground. Explain more Cut the wires Connect using an electrical union connector","title":"ATX Power on jumper"},{"location":"assignments/week10/#atx-voltage-outputs","text":"This is the table with the Voltage and Power of every output in the ATX power supply. I\u2019ve used 3 pairs of 12 Volts based in the power consumption of every component listed here: Part Voltage Wire color Black Ground wire Arduino UNO board 5 Volts Red Yes GRBL board 12 Volts Yellow Yes 12 V Red LED 12 Volts Yellow Yes Peristaltic pump 12 Volts Yellow Yes","title":"ATX voltage Outputs"},{"location":"assignments/week10/#cnc-grbl-arduino-uno-compatible-board","text":"This is the schematic given by the manufacturer. Schematic has some faults in the motor driver silk. characteristics: GRBL Board Operation voltage 12 to 16 V not regulated, only protected by a fusible Axis 3 connectors for XYZ +1 Clone axis connector Limit switches +-X, +-Y, +- Z Spindle control Enable, Direction, cooling Also used for laser output control Machine override controls Abort, Hold, Resume Emergency stop Serial communication pinouts SDA, SCL, TX RX, RST, 3.3V 5V Microstepping configuration jumpers 1/2, 1/4, 1/8, 1/16","title":"CNC GRBL Arduino UNO compatible board"},{"location":"assignments/week10/#assembly","text":"Connect the motor driver boards to the GRBL board sockets. Check the pinout and be sure all the pins coincide correctly.","title":"Assembly"},{"location":"assignments/week10/#motor-drivers","text":"Characteristic: HR4988 motor driver Operation voltage 5 Volts Resistance R100 0.1 Ohms Motor Voltage Regulator Potentiometer for VREF Pinouts in order: Left Right Direction GND Step VDD Sleep 1B Reset 1A MS3 2A MS2 2B MS1 GND Enable VMOT","title":"Motor drivers"},{"location":"assignments/week10/#stepper-motors","text":"","title":"Stepper motors"},{"location":"assignments/week10/#wiring","text":"The wiring with the stepper motors was confusing and I invested one afternoon to find out the right wiring configuration. I\u2019ve find the correct wiring configuration after looking at this video tutorial in Spanish from \u201cEl Profe Garc\u00eda\u201d. On the video I\u2019ve learn how to identify the coils inside the step motor. And on this other video form the same channel shows the right pinout connection with a controller board. I\u2019ve found the solution by looking carefully at driver the controller. Silk draft: Silk board: See labels at the right side: Comparison table: Silk board Silk draft B2 B2 A2 B1 A1 A1 B1 A2 For me it was so confusing to see some documentation showing 2A, 2B, 1A and 1B, and others showing A1, A2, B2, B1. The connector cable has 4 wires of colors, Red, Green, Blue and Black. This is the right configuration to punch the connectors to the cable from the motor driver to the stepper motor. Code Motor driver color Step motor color B2 Green Red A1 Red Blue A1 Black Green B1 Blue Black","title":"Wiring"},{"location":"assignments/week10/#vref-calibration","text":"This is an important task to prevent over-heating of the motor drivers, and excessive vibration and over-heating of the step motors. This the motor datasheet provided by the manufacturer SMD resistor calculator Calculation: Values Current Sense resistance 0.01 Ohms Rsense Rated motor current 1.3 A RMC Safety margin percentage 25 % SM I\u2019ve found this formula VREF = RMC x 8 x Rsense Process: Use the multimeter as voltmeter in a scale of less than 5 Volts. Get a multimeter with a clamp connector in the cathode Power on the GRBL board Place the cathode (screw driver) in the VREF potentiometer and the ground probe in the bottom left GND pin. Turn the potentiometer clockwise to increase and anti-clockwise to decrease the VREF. This method helped me to reduce a crancky noise in the motors and overheating of the driver controller board. I have tried also to reduce the length of the cables to reduce the noise but this VREF method work fine at the end.","title":"VREF calibration"},{"location":"assignments/week10/#steps-per-millimeter-for-belt-driven-systems","text":"I\u2019ve calculated this using this calulator. Data Value Motor step angle 1.8\u00b0 Driven Microstepping Full step Belt pitch 2 mm (GT2) Pulley tooth count 20 Result: 5.00 Resolution Teeth Step angle Stepping Belt 200 micron 20 1.8\u00b0 Full step 2mm","title":"Steps per millimeter for belt driven systems"},{"location":"assignments/week10/#wiring-and-connections","text":"Follow this instructions to connect and wire the CNC control system: Connect motor driver boards to the CNC arduino shield Connect stepper motors with the correct wiring configuration specified in the stepper motors section. Connect X and Y limit switches to -X and -Y ports in the board. Connect power supply yellow and black cables from the ATX power supply. I\u2019ve included a 12 V Red led to give some visual feedback, it\u2019s connected by an independent yellow and black wires from the ATX power supply.","title":"Wiring and connections"},{"location":"assignments/week10/#software-setup","text":"","title":"Software setup"},{"location":"assignments/week10/#grbl","text":"As I mentioned before, GRBL is an Open-Source firmware that runs in Atmega328 based Arduinos for low cost CNC machines. The version I\u2019ve used is the v1.1 released in 08/2019. I\u2019ve downloaded the repository using this command: git clone https://github.com/grbl/grbl.git Install requirements for Fedora Linux: Avr gcc compiler Arduino sudo dnf install avr-gcc arduino Once the requirements are installed, the next steps are documented in the GRBL repository.","title":"GRBL"},{"location":"assignments/week10/#compiling-and-flashing-grbl-using-arduino-ide","text":"These instructions were extracted from GRBL documentation here: Launch the Arduino IDE Make sure you are using the most recent version of the Arduino IDE! Load the grbl folder into the Arduino IDE as a Library. Click the Sketch drop-down menu, navigate to Include Library and select Add .ZIP Library . The Add .ZIP Library command supports both a .ZIP file or a folder. In our case, there is no .ZIP file. You can confirm that the library has been added. Click the Sketch drop-down menu again, navigate to Include Library , then scroll to the bottom of the list where you should see grbl . IMPORTANT: Select the grbl folder inside the grbl-XXX folder, which only contains the source files and an example directory. If you accidentally select the .zip file or the wrong folder, you will need to navigate to your Arduino library, delete the mistake, and re-do Step 3. Open the GrblUpload Arduino example. Click the File down-down menu, navigate to Examples->Grbl , and select GrblUpload . Do not alter this example in any way! Grbl does not use any Arduino code. Altering this example may cause the Arduino IDE to reference Arduino code and compiling will fail. Compile and upload Grbl to your Arduino. Connect your Arduino Uno to your computer. Make sure your board is set to the Arduino Uno in the Tool->Board menu and the serial port is selected correctly in Tool->Serial Port . (There are some controller boards on ebay that have the Arduino Pro bootloader on it, if you get error messages like \u201cavrdude: stk500_getsync() attempt n of 10: not in sync: resp=0x20\u201d then choose another board, try Arudino Pro/Pro Mini) Click the Upload , and Grbl should compile and flash to your Arduino! (Flashing with a programmer also works by using the Upload Using Programmer menu command.)","title":"Compiling and Flashing GRBL using Arduino IDE"},{"location":"assignments/week10/#compiling-and-flashing-using-command-line-tools","text":"Requirements for Fedora Linux GRBL repository: git clone https://github.com/grbl/grbl.git AVR-GCC and Arduino core libraries: sudo dnf install avr-gcc arduino-core Make: sudo dnf install make Usage Go to your local GRBL repository using your terminal by cd , in my case this is: cd $HOME/repos/grbl Then use make to compile the grbl HEX file that\u2019s going to be flashed to your Arduino UNO board: make clean && make grbl.hex If the HEX file is successfully compiled then proceed to flash it to the board by executing: avrdude -v -patmega328p -Uflash:w:grbl_v1.1h.20190825.hex:i -carduino -b 115200 -P /dev/ttyACM0 Where: /dev/ttyACM0 it\u2019s the local addres of my Arduino UNO board. -patmega328p it\u2019s microprocessor family -Uflash:w:grbl*.hex it\u2019s the grbl_file_name.hex you have compiled. b 115200 it\u2019s the baudrate speed. There are different ways to know this value, the easiest one it\u2019s this: Execute on the terminal with your board unplugged : ls /dev/tty* Save the output and then execute the same command again, but with your Arduino board connected , compare the difference, and the new address it\u2019s the one of your Arduino:","title":"Compiling and flashing using command line tools"},{"location":"assignments/week10/#disable-z-axis-homing-routine","text":"After flashing the board, and setting up electronics and power source I tried to configure the homming using Universal Gcode Sender but, I got many alarms in the process of trying the limit switches. Remember I\u2019m using a 2 axis configuration in hardware but then the GRBL by default expects Z axis limit switch in the routine. We need to edit and re-flash the firmware to the board, this are the steps needed: In the lines 75 and 76 of the grbl/config.h file its declared the homing process and as the comments point: line 75 moves the Z axis which is not existing in our configuration, line 76 moves the XY axis at the same time and rate. This whole process it\u2019s called \u201climit finding\u201d: Edition: Comment line 75 by adding double slash \u201c//\u201d at the begging of the line. Edit line 76 by changing \u201cHOMING_CYCLE_1\u201d to \u201cHOMING_CYCLE_0\u201d. Save the file, and run the compilation process with Arduino or Linux command tools. Now the homing cycle starts by moving the X and Y axis and the errors are fixed.","title":"Disable Z axis homing routine"},{"location":"assignments/week10/#firmware-configuration","text":"The important points of the firmware configuration are: \u201cReport in inches\u201d, which means you need to disable it to use millimeters. \u201cHoming cycle enabled\u201d, this is required since we\u2019re using a band-pulley system, and as result the machine is not precise enough to preserve an reliable 0 position. \u201cWorking area limits\u201d: X: 310 mm Y: 290 mm We obtained this measurements by manually measuring the travel length of each axis: X axis: Y axis: I\u2019ve used UGS to change this configuration and also manually typing the codes in a terminal using serial communication and minicom : Firmware configuration table: The values like this \u201c$0\u201d or \u201c$23\u201d should by typed in the terminal after Serial communication has been established: OR under Universal GCODE Sender see firmware configuration process here : This is a recorded session using Minicom for serial communication at 115200 Bauds to /dev/ttyACM0 Arduino UNO with GRBL firmware: Setting Value Description $0 10 Step pulse time $1 25 Step idle delay $2 0 Step pulse invert $3 2 Step direction invert $4 0 Invert Step enable pin $5 0 Invert limit pins $6 0 Invert probe pin $10 1 Status report options $11 0.010 Junction deviation $12 0.020 Arc tolerance $13 0 Report in inches $20 1 Soft limits enable $21 0 Hard limits enable $22 1 Homing cycle enable $23 7 Homing direction invert $24 25.000 Homing locate feed rate $25 700.000 Homing search feed rate $26 250 Homing switch de-bouncing delay $27 1.000 Homing switch pull-off distance $30 10000 Maximum spindle speed $31 0 Minimum spindle speed $32 1 Laser mode enabled $100 5.000 X-axis travel resolution $101 5.000 Y-axis travel resolution $102 5.000 Z-axis travel resolution $110 10000.000 X-axis maximum rate $111 10000.000 Y-axis maximum rate $112 500.000 Z-axis maximum rate $120 5000.000 X-axis acceleration $121 5000.000 Y-axis acceleration $122 10.000 Z-axis acceleration $130 310.000 X-axis maximum travel $131 290.000 Y-axis maximum travel $132 0.000 Z-axis maximum travel","title":"Firmware configuration"},{"location":"assignments/week10/#gcode-testing","text":"I\u2019ve the time to test multiple GCODES compatible for this version of GRBL. Code Action $H Starts homing cycle $G28 Goes to the maximum point $G0 X100 Linear movement on X axis by 100 mm $G0 Y100 Linear movement on Y axis by 100 mm $G0 X100 Y100 Linear movement on X and Y axis by 100 mm $G53 Uses absolute coordinates for positioning $G27 Uses XY plane To execute this commands I\u2019ve used Universal GCODE Sender:","title":"GCODE testing"},{"location":"assignments/week10/#fusion-360-work-flow","text":"I\u2019ve used Autodesk\u2019s Fusion 360 to understand how the process of making GCODE works with a familiar software. Although there are other options like LaserWeb The Design process consisted just in drawing a shape using the sketch tools under the Design environment of Fusion 360. I\u2019ve drafted simple shapes to test the pancake machine this an example of the test we ran on the Pancake Machine: I\u2019ve drafted this Nut of 120mm side to side and a inner circle of 70 mm diameter. I\u2019ve made under the \u201cManufacture\u201d apart a setup process, selecting the Nut sketch as the working area: I\u2019ve selected as Machine \u201cAutodesk Generic Cutting Machine\u201d Then selected the machining process as \u201cCutting\u201d: Then selected \u201c2D profile as cutting process\u201d in the top bar as shown: Under the \u201cSelect Tool\u201d apart I\u2019ve selected the \u201c1- laser cutter\u201d option as shown: Then selected the countours in the sketch as shown: Finally setting this parameters: offset of 10mm. retract heigh 5mm. stock top at 0 mm. Then under the \u201cInspection menu\u201d I\u2019ve generated the following GCODE simulation. To process the files and output a GCODE File for the machine the process its made as shown: Under the \u201cinspection apart\u201d in the topbar select \u201cPost process\u201d option: Then Select \u201cGrbl Laser/grbl laser\u201d for machine type: I\u2019ve setup the output directory and the program name as ~/Desktop/cake_test_01.nc : This the GCODE generated: % (cake_test_01) (Machine) ( vendor: Autodesk) ( description: Generic Cutting Machine) G90 G94 G17 G21 (2D Profile2) G54 G0 S255 M4 G0 X62.576 Y25.508 G1 X61.576 Y23.776 F1000 G1 X62.447 Y22.268 G1 X131.498 G1 X166.023 Y82.068 G1 X131.498 Y141.868 G1 X62.447 G1 X27.921 Y82.068 G1 X61.576 Y23.776 G1 X63.576 G1 S0 M30 %","title":"Fusion 360 work-flow"},{"location":"assignments/week10/#universal-gcode-sender","text":"Extracted from Universal GCODE SENDER website *A full featured gcode platform used for interfacing with advanced CNC controllers like GRBL , TinyG, g2core and Smoothieware. Universal Gcode Sender is a self-contained Java application which includes all external dependencies and can be used on most computers running Windows, MacOSX or Linux. * Characteristics: Multiplatform Written in JAVA programming language. Provides an interface for Serial communication. Provides tools like Joystick and file input to run GCODE files. It has a testing tools The Configuration wizard makes the firmware configuration easier. Overview:","title":"Universal GCODE sender"},{"location":"assignments/week10/#instructions-to-install-and-run-ugs-under-linux","text":"Download Universal GCODE sender following this link Once the files have been downloaded run the installation process depending on your platform. Install JAVA OpenJDK Runtime for Linux: dnf install java-11-openjdk.x86_64 Follow the instructions on this page for more information about OpenJDK in Fedora Linux For Linux I\u2019ve only had to extract the ZIP files and run the following command inside the \u201cbin\u201d directory: ./ugsplatform Run Universal GCODE sender and activate the communication with the machine. I\u2019ve identify the GRBL Serial communiction device as /dev/ttyACM0 automatically with UGS. Then I\u2019ve established serial communication at 115200 bauds.","title":"Instructions to install and run UGS under Linux:"},{"location":"assignments/week10/#firmware-configuration-wizard","text":"I\u2019ve followed the Firmware configuration wizard to setup the values I\u2019ve explained under the Firmware Configuration section","title":"Firmware configuration Wizard:"},{"location":"assignments/week10/#load-gcode-files","text":"Run the HOME cycle: Import the GCODE in \u201cFile\u201d \u2013> \u201cOpen\u201d Press the \u201cPlay\u201d Button to run the GCODE","title":"Load  GCODE files"},{"location":"assignments/week10/#testing","text":"","title":"Testing"},{"location":"assignments/week10/#fixing-slow-speeds","text":"Change the maximum acceleration on the firmware configuration:","title":"Fixing Slow speeds:"},{"location":"assignments/week10/#fixing-high-vibration","text":"Decrease the motor drivers VREF until the vibration gets reduced. Do this by running a displacement GCODE command like: G00 X100 to debug the X axis G00 Y100 to debug the Y axis","title":"Fixing High vibration:"},{"location":"assignments/week10/#fixing-stuck-motors","text":"Axis not moving: Check the transmission band, look for any stuck parts or excessive friction. Adjust the motor drivers VREF increasing the output Motors not changing direction I\u2019ve found that the silk labels on the motor drivers are inverted and thus it gets confusing if you try to connect the stepper motors following the schematics.","title":"Fixing stuck motors"},{"location":"assignments/week10/#final-result","text":"At the end we tested the machine and made some pancakes this video was edited by Theo . The assemble process of the different parts of the project took place while working, the integration and final test took place on Monday. We iterated two times, the first version of the machine had an independent pumping control for speed flow control with a joystick . while Elina worked on her system and later her introduced tool control to activate and deactivate the peristaltic pump system. With the commnads \u201cM03\u201d and \u201cM04\u201d. This independent Arduino pumping system was later removed.","title":"Final result"},{"location":"assignments/week10/#learning-outcome","text":"For an effective teamwork communication its crucial , the first two days we had a very good understanding of the tasks and over the last two days communication stopped and so we started facing some misunderstandings between instructors and students. Its important to mention and keep record of all the modifications we make to others works , for example on day 3 I spent 4 hours debugging the machine after a modification to the firmware I didn\u2019t knew about. As the task was for 3 days 4 maximum, stress was a factor that limited our integration as teammates but at the end we cope and moved forward to deliver the machine on time. Design improvements: Use Laserweb for user friendly interaction adding a raspberry pi as server and a display in place to have an embed pancake machine system. We have also discussed to run a machine demo on FabAcademy graduation.","title":"Learning outcome"},{"location":"assignments/week10/#files","text":"firmware test_cake gcode test_cake fusion file","title":"Files"},{"location":"assignments/week11/","text":"11. Input devices \u00b6 Introduction \u00b6 This week I\u2019ve learn to include a sensor on a pcb design, to programming it and to use the input data. I\u2019ve chose to use use this input devices: A3144 Hall effect sensor. RFID ISO11784 for animal Tag FDX reading board Sparkfun\u2019s AS726x Spectral sensor VISIBLE Group assignment Testing sensors with SAMD11 board \u00b6 I\u2019ve used my SAMD11 board from week07 , I\u2019ve soldered wires to the pins to access the io pins. Oscilloscope \u00b6 While working on the breadboard inspecting the pinouts I\u2019ve had the idea to make analog write, place a wire as probe in the middle of an Oscilloscope. I\u2019ve observed a change in the wave when tested the probe into my chocolate \u201ccocoa\u201d beverage. The change it\u2019s really small but gives me the idea that connecting an amplifier I\u2019ll be able to get a better signal processing. This is of my interest for my final project, for QC of milk based in EC. After this exercise I\u2019ve jump to design a new board. Board design \u00b6 Micro-controller and connector arrangement \u00b6 I\u2019ve used the SAMD11 micro-controller, but I\u2019ve got the understanding that I\u2019ve like to use more peripherals I should switch to the SAM21 which has more IO and memory. Components \u00b6 Final design: Reset button Input button Output LED 2 Connectors 1x04 1 Connector 1x05 Hall effect sensor and voltage divider Discarded: JTAG connector Micro-USB female connector Micro-controller and connector arrangement Clock, LED and input button arrangement Reset button and regulator arrangement USB connector and HALL effect sensor arrangement After my instructors advice I\u2019ve flipped my schematics following the positive-top, ground-bottom convention. PCB design \u00b6 I\u2019ve faced some problems while designing my board. I didn\u2019t use an 0.4mm clearance I\u2019ve used an USB connector that\u2019s not possible to mill with a 0.4mm milling bit. I\u2019ve started the tracing from outside to the inside and later I\u2019ve problems with the connector\u2019s tracks., so I had to start over and design from the inside to the outside. This was my first approach before noticing this problems. Changing to inside to outside strategy I\u2019ve worked also with my schematic in one side to add jumpers and check the sequence of connections properly to avoid shorcuts and misplaced components I\u2019ve used inkscape to make and outline with this shape. The funny round thing in the right it\u2019s just my approach to make a rotation sensor board with the hall effect sensor. Wo the axis of the rotor is going to pass through the 10 mm hole. Then I\u2019ve imported the design into Kicad as SVG. Then I\u2019ve realized the problems with the traces for milling\u2026 and I had to rework my traces again. This is the final PCB design Milling \u00b6 For milling I\u2019ve made three files using mods. Tracks Holes Outline Stuffing \u00b6 Soldering \u00b6 Micro-controller Jumpers Oscillators Resistors Buttons Connectors Hall effect SMD Flashing \u00b6 For flashing I\u2019ve used the JTAG programmer I\u2019ve made in Week05. Hall effect fluid sensor \u00b6 For the this I\u2019ve used the Allegro Micro A1324: Characteristics \u00b6 Datasheet SMD SOT23 form factor 3 pins. Temperature stable -40 to 150 C. Low noise Analog output Supply voltage 4.5 to 5.5 Volts. Current 9 mA. Frequency 17 KHz. Circuit design \u00b6 I\u2019ve follow this Allegro Hall effect sensor applications guide , to design my circuit. My design uses a voltage divider to scale a Maximum 5 Volts output to 3.3 Volts to prevent burning my SAMD11C14 microcontroller. Schematic \u00b6 BOM Component ID Form factor Allegromicro a1324 Hall effect sensor. U3 SOT23W Resistor 2 K Ohms R3 1206 Resistor 1 K Ohms R2 1206 Resistor 0 Ohms (jumper) R8 1206 PCB \u00b6 I\u2019ve decided to make this shape to later add a mechanical spinning component so it could be used as a liquid flow sensor. Code \u00b6 This code works by reading the analog output signal of the Allegromicro a1324 sensor connected to the pin PA_04 of my board using the AnalogRead function of the Generic Arduino Mattairtech bootloader for SAMD11C14. First declares the constants \u201cHALL\u201d to 4, \u201cVIN_FACTOR\u201d the factor of conversion to analog to millivolts 3.3/1023. Declares a long precision variable \u201cvalue\u201d. Sets Hall pin as input, and starts Serial (USB) communication at 9600 bauds. Loops analog read of HALL and sends TX Serial with the result of Value times VIN_FACTOR. /* This program reads the analog output of a HALL effect A-1324 sensor to millivolts Pinout: Hall sensor @ PIN 4 Pseudo-code: First declares the constants \"HALL\" to 4, \"VIN_FACTOR\" the factor of conversion to analog to millivolts 3.3/1023. Declares a long precision variable \"value\". Sets Hall pin as input, and starts Serial (USB) communication at 9600 bauds. Loops analog read of HALL and sends TX Serial with the result of Value times VIN_FACTOR. Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ const int HALL = 4; const long VIN_FACTOR = 3.3 / 1.023 ; long value = 0; void setup() { pinMode(HALL, INPUT); Serial.begin(9600); } void loop() { value = analogRead(HALL); Serial.println(value * VIN_FACTOR); } Using Arduino\u2019s serial plotter I\u2019ve found the sensor sends a lot of noise, and I\u2019ve learn that\u2019s normal because of the materials of the board. This is the signal response when an magnet passes 3 times over the sensor at 3mm distance. About the 100mV step response \u00b6 The step response signal is around 100 mV, the hall sensor needs at least 4.5V so I\u2019ve think that maybe the voltage divider is not a good idea after all. So in the future I\u2019ll like to switch to a regulator, and test again. The reason of the 100mV step signal is that I\u2019m scaling the output signal assuming a maximun of 5 Volts, so the measured signal is 625 mV after the voltage divider, the arrengement of the voltage divider reduces by 66% the original analog output of the allegromicro a1324 hall effect sensor, so the step response of 100mV could be +34% without it. I\u2019ve used the Arduino IDE software to flash my board. The included plotter in the IDE as following. I\u2019ve read the input with a resolution of 10 bits and didn\u2019t tried any other resolution like 12 bits wich is an advantage of the SAMD11C14 microcontroller. RFID Reader: \u00b6 RFID stands for \u201cradio-frequency identification\u201d and belongs to AIDC technologies, \u201cAutomated identification and data capture\u201d. This is an important part of my final project and RFID it\u2019s board used in animal identification systems. There are two standards HDX and FDX. Here I\u2019m using an FDX standard reader that\u2019s used also in Mexico for cattle identification. The RFID module that I\u2019m using is the 134.2K Animal Tag FDX-B ISO11784 Reader Module . I\u2019ve find this module in Agrilab\u2019s Electrolab inventory . Every cow in France gets an RFID earring by default but in Mexico its deployment its still ongoing due to multiple factors like supply chain and distribution. Characteristics of the RFID module: \u00b6 Serial communication at 9600 bauds. LSB Hexadecimal format ASCII. 5 to 9 Volts FDX RFID standard complaining with the ISO11784 standard This module uses Serial communication, the TX pin outputs at 9600 bauds, the reading distance it\u2019s approximately 25 to 30 centimeters at 5 Volts and 10 mA. You can appreciate the distance of detection in the demo video below. Interfacing with the module \u00b6 To interface with this board I\u2019ve used the Serial1 interface of my SAMD11C14 based board. Using the Mattairtech Generic SAMD11C14 bootloader , you have the RX1 pin on the pin PA_31 pin. To read Serial communications we need the TX pin of the module connected to the RX1 pin of the board, GND to ground and VCC to the 5 Volts pin of my SAMD11C14 board, the 5 Volts come from the USB connector. You can appreciate the wiring I\u2019ve used with a bread board in the demo video below. Code \u00b6 This is the minimal code you need to read the module output, later on I\u2019ll need to decode and detect valid RFID earrings. This code uses two serial communication interfaces, Serial which its equal to USBSerial and Serial1 which is located in Pins 30 and 31 of the SAMD11C14 bootloader from Mattairtech. I the Setup the code starts Serial communication on Serial and Serial1 interfaces, both at 9600 bauds. In Loop the board makes a char variable and assigns the value of the Serial1.read() output. .read() means that my board will open and read Serial communication in Serial1 interface. Then the Loop ends by printing the result using the Serial (USBSerial) communication. You can appreciate the output here. /* This program reads the TX output of the RFID ISO11784 for animal Tag FDX reading board, using the Serial1 interface of the SAMD11 micro-controller. TX to RX on pin 31 Serial1 Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ void setup() { Serial.begin(9600); Serial1.begin(9600); } void loop() { char id = Serial1.read(); Serial.println(id); delay(100); } Flashing \u00b6 Serial output \u00b6 Video \u00b6 Sparkfun spectral sensor \u00b6 I\u2019ve been stuck on this due to the library size. I\u2019ve above 7000 bytes of the flash memory. So I\u2019ve been looking to the AS7262 datasheet So I\u2019ve learn that its possible to use i2c protocol by writing bytes to the sensor or UART by sending commands. To read the device temperature: - i2c: 0x06 bit 7:0 - UART: ATTEMP Things I\u2019ve to do to enable UART communication: Remove the solder from the Jp1 jumper Add a older to the jp2 jumper. Learning outcomes \u00b6 This week assignment was very didactic and I\u2019ve learn about step response by experimenting with the liquids at the beginning. It\u2019s was my first time designing and manufacturing a sensor, so it was very satisfactory to me to see the sensor working using the Oscilloscope, but also I\u2019ve learned about electronic noise. I\u2019ve learned to mill on this order: Traces Holes Outline Then I\u2019ve learned the basics about interfacing with Serial communications. Physical properties related to the measurement \u00b6 The hall effect sensor measures changes in magnetic fields in a certain range, the allegro a1324 measures changes around 4.75 to 5.25 mV/G at 25 C. Using semiconductors (such as silicon), Hall effect sensors work by measuring the changing voltage when the device is placed in a magnetic field. In other words, once a Hall effect sensor detects that it is now in a magnetic field, it is able to sense the position of objects. *Source RS-online https://se.rs-online.com/web/generalDisplay.html?id=ideas-and-advice/hall-effect-sensors-guide Files \u00b6 Kicad: Compressed ZIP Milling for Roland SRM-20: Traces Holes Outline Inkscape: Outline shape SVG Outline shape DXF Arduino: Hall effect RFID","title":"11. Input devices"},{"location":"assignments/week11/#11-input-devices","text":"","title":"11. Input devices"},{"location":"assignments/week11/#introduction","text":"This week I\u2019ve learn to include a sensor on a pcb design, to programming it and to use the input data. I\u2019ve chose to use use this input devices: A3144 Hall effect sensor. RFID ISO11784 for animal Tag FDX reading board Sparkfun\u2019s AS726x Spectral sensor VISIBLE Group assignment","title":"Introduction"},{"location":"assignments/week11/#testing-sensors-with-samd11-board","text":"I\u2019ve used my SAMD11 board from week07 , I\u2019ve soldered wires to the pins to access the io pins.","title":"Testing sensors with SAMD11 board"},{"location":"assignments/week11/#oscilloscope","text":"While working on the breadboard inspecting the pinouts I\u2019ve had the idea to make analog write, place a wire as probe in the middle of an Oscilloscope. I\u2019ve observed a change in the wave when tested the probe into my chocolate \u201ccocoa\u201d beverage. The change it\u2019s really small but gives me the idea that connecting an amplifier I\u2019ll be able to get a better signal processing. This is of my interest for my final project, for QC of milk based in EC. After this exercise I\u2019ve jump to design a new board.","title":"Oscilloscope"},{"location":"assignments/week11/#board-design","text":"","title":"Board design"},{"location":"assignments/week11/#micro-controller-and-connector-arrangement","text":"I\u2019ve used the SAMD11 micro-controller, but I\u2019ve got the understanding that I\u2019ve like to use more peripherals I should switch to the SAM21 which has more IO and memory.","title":"Micro-controller and connector arrangement"},{"location":"assignments/week11/#components","text":"Final design: Reset button Input button Output LED 2 Connectors 1x04 1 Connector 1x05 Hall effect sensor and voltage divider Discarded: JTAG connector Micro-USB female connector Micro-controller and connector arrangement Clock, LED and input button arrangement Reset button and regulator arrangement USB connector and HALL effect sensor arrangement After my instructors advice I\u2019ve flipped my schematics following the positive-top, ground-bottom convention.","title":"Components"},{"location":"assignments/week11/#pcb-design","text":"I\u2019ve faced some problems while designing my board. I didn\u2019t use an 0.4mm clearance I\u2019ve used an USB connector that\u2019s not possible to mill with a 0.4mm milling bit. I\u2019ve started the tracing from outside to the inside and later I\u2019ve problems with the connector\u2019s tracks., so I had to start over and design from the inside to the outside. This was my first approach before noticing this problems. Changing to inside to outside strategy I\u2019ve worked also with my schematic in one side to add jumpers and check the sequence of connections properly to avoid shorcuts and misplaced components I\u2019ve used inkscape to make and outline with this shape. The funny round thing in the right it\u2019s just my approach to make a rotation sensor board with the hall effect sensor. Wo the axis of the rotor is going to pass through the 10 mm hole. Then I\u2019ve imported the design into Kicad as SVG. Then I\u2019ve realized the problems with the traces for milling\u2026 and I had to rework my traces again. This is the final PCB design","title":"PCB design"},{"location":"assignments/week11/#milling","text":"For milling I\u2019ve made three files using mods. Tracks Holes Outline","title":"Milling"},{"location":"assignments/week11/#stuffing","text":"","title":"Stuffing"},{"location":"assignments/week11/#soldering","text":"Micro-controller Jumpers Oscillators Resistors Buttons Connectors Hall effect SMD","title":"Soldering"},{"location":"assignments/week11/#flashing","text":"For flashing I\u2019ve used the JTAG programmer I\u2019ve made in Week05.","title":"Flashing"},{"location":"assignments/week11/#hall-effect-fluid-sensor","text":"For the this I\u2019ve used the Allegro Micro A1324:","title":"Hall effect fluid sensor"},{"location":"assignments/week11/#characteristics","text":"Datasheet SMD SOT23 form factor 3 pins. Temperature stable -40 to 150 C. Low noise Analog output Supply voltage 4.5 to 5.5 Volts. Current 9 mA. Frequency 17 KHz.","title":"Characteristics"},{"location":"assignments/week11/#circuit-design","text":"I\u2019ve follow this Allegro Hall effect sensor applications guide , to design my circuit. My design uses a voltage divider to scale a Maximum 5 Volts output to 3.3 Volts to prevent burning my SAMD11C14 microcontroller.","title":"Circuit design"},{"location":"assignments/week11/#schematic","text":"BOM Component ID Form factor Allegromicro a1324 Hall effect sensor. U3 SOT23W Resistor 2 K Ohms R3 1206 Resistor 1 K Ohms R2 1206 Resistor 0 Ohms (jumper) R8 1206","title":"Schematic"},{"location":"assignments/week11/#pcb","text":"I\u2019ve decided to make this shape to later add a mechanical spinning component so it could be used as a liquid flow sensor.","title":"PCB"},{"location":"assignments/week11/#code","text":"This code works by reading the analog output signal of the Allegromicro a1324 sensor connected to the pin PA_04 of my board using the AnalogRead function of the Generic Arduino Mattairtech bootloader for SAMD11C14. First declares the constants \u201cHALL\u201d to 4, \u201cVIN_FACTOR\u201d the factor of conversion to analog to millivolts 3.3/1023. Declares a long precision variable \u201cvalue\u201d. Sets Hall pin as input, and starts Serial (USB) communication at 9600 bauds. Loops analog read of HALL and sends TX Serial with the result of Value times VIN_FACTOR. /* This program reads the analog output of a HALL effect A-1324 sensor to millivolts Pinout: Hall sensor @ PIN 4 Pseudo-code: First declares the constants \"HALL\" to 4, \"VIN_FACTOR\" the factor of conversion to analog to millivolts 3.3/1023. Declares a long precision variable \"value\". Sets Hall pin as input, and starts Serial (USB) communication at 9600 bauds. Loops analog read of HALL and sends TX Serial with the result of Value times VIN_FACTOR. Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ const int HALL = 4; const long VIN_FACTOR = 3.3 / 1.023 ; long value = 0; void setup() { pinMode(HALL, INPUT); Serial.begin(9600); } void loop() { value = analogRead(HALL); Serial.println(value * VIN_FACTOR); } Using Arduino\u2019s serial plotter I\u2019ve found the sensor sends a lot of noise, and I\u2019ve learn that\u2019s normal because of the materials of the board. This is the signal response when an magnet passes 3 times over the sensor at 3mm distance.","title":"Code"},{"location":"assignments/week11/#about-the-100mv-step-response","text":"The step response signal is around 100 mV, the hall sensor needs at least 4.5V so I\u2019ve think that maybe the voltage divider is not a good idea after all. So in the future I\u2019ll like to switch to a regulator, and test again. The reason of the 100mV step signal is that I\u2019m scaling the output signal assuming a maximun of 5 Volts, so the measured signal is 625 mV after the voltage divider, the arrengement of the voltage divider reduces by 66% the original analog output of the allegromicro a1324 hall effect sensor, so the step response of 100mV could be +34% without it. I\u2019ve used the Arduino IDE software to flash my board. The included plotter in the IDE as following. I\u2019ve read the input with a resolution of 10 bits and didn\u2019t tried any other resolution like 12 bits wich is an advantage of the SAMD11C14 microcontroller.","title":"About the 100mV step response"},{"location":"assignments/week11/#rfid-reader","text":"RFID stands for \u201cradio-frequency identification\u201d and belongs to AIDC technologies, \u201cAutomated identification and data capture\u201d. This is an important part of my final project and RFID it\u2019s board used in animal identification systems. There are two standards HDX and FDX. Here I\u2019m using an FDX standard reader that\u2019s used also in Mexico for cattle identification. The RFID module that I\u2019m using is the 134.2K Animal Tag FDX-B ISO11784 Reader Module . I\u2019ve find this module in Agrilab\u2019s Electrolab inventory . Every cow in France gets an RFID earring by default but in Mexico its deployment its still ongoing due to multiple factors like supply chain and distribution.","title":"RFID Reader:"},{"location":"assignments/week11/#characteristics-of-the-rfid-module","text":"Serial communication at 9600 bauds. LSB Hexadecimal format ASCII. 5 to 9 Volts FDX RFID standard complaining with the ISO11784 standard This module uses Serial communication, the TX pin outputs at 9600 bauds, the reading distance it\u2019s approximately 25 to 30 centimeters at 5 Volts and 10 mA. You can appreciate the distance of detection in the demo video below.","title":"Characteristics of the RFID module:"},{"location":"assignments/week11/#interfacing-with-the-module","text":"To interface with this board I\u2019ve used the Serial1 interface of my SAMD11C14 based board. Using the Mattairtech Generic SAMD11C14 bootloader , you have the RX1 pin on the pin PA_31 pin. To read Serial communications we need the TX pin of the module connected to the RX1 pin of the board, GND to ground and VCC to the 5 Volts pin of my SAMD11C14 board, the 5 Volts come from the USB connector. You can appreciate the wiring I\u2019ve used with a bread board in the demo video below.","title":"Interfacing with the module"},{"location":"assignments/week11/#code_1","text":"This is the minimal code you need to read the module output, later on I\u2019ll need to decode and detect valid RFID earrings. This code uses two serial communication interfaces, Serial which its equal to USBSerial and Serial1 which is located in Pins 30 and 31 of the SAMD11C14 bootloader from Mattairtech. I the Setup the code starts Serial communication on Serial and Serial1 interfaces, both at 9600 bauds. In Loop the board makes a char variable and assigns the value of the Serial1.read() output. .read() means that my board will open and read Serial communication in Serial1 interface. Then the Loop ends by printing the result using the Serial (USBSerial) communication. You can appreciate the output here. /* This program reads the TX output of the RFID ISO11784 for animal Tag FDX reading board, using the Serial1 interface of the SAMD11 micro-controller. TX to RX on pin 31 Serial1 Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ void setup() { Serial.begin(9600); Serial1.begin(9600); } void loop() { char id = Serial1.read(); Serial.println(id); delay(100); }","title":"Code"},{"location":"assignments/week11/#flashing_1","text":"","title":"Flashing"},{"location":"assignments/week11/#serial-output","text":"","title":"Serial output"},{"location":"assignments/week11/#video","text":"","title":"Video"},{"location":"assignments/week11/#sparkfun-spectral-sensor","text":"I\u2019ve been stuck on this due to the library size. I\u2019ve above 7000 bytes of the flash memory. So I\u2019ve been looking to the AS7262 datasheet So I\u2019ve learn that its possible to use i2c protocol by writing bytes to the sensor or UART by sending commands. To read the device temperature: - i2c: 0x06 bit 7:0 - UART: ATTEMP Things I\u2019ve to do to enable UART communication: Remove the solder from the Jp1 jumper Add a older to the jp2 jumper.","title":"Sparkfun spectral sensor"},{"location":"assignments/week11/#learning-outcomes","text":"This week assignment was very didactic and I\u2019ve learn about step response by experimenting with the liquids at the beginning. It\u2019s was my first time designing and manufacturing a sensor, so it was very satisfactory to me to see the sensor working using the Oscilloscope, but also I\u2019ve learned about electronic noise. I\u2019ve learned to mill on this order: Traces Holes Outline Then I\u2019ve learned the basics about interfacing with Serial communications.","title":"Learning outcomes"},{"location":"assignments/week11/#physical-properties-related-to-the-measurement","text":"The hall effect sensor measures changes in magnetic fields in a certain range, the allegro a1324 measures changes around 4.75 to 5.25 mV/G at 25 C. Using semiconductors (such as silicon), Hall effect sensors work by measuring the changing voltage when the device is placed in a magnetic field. In other words, once a Hall effect sensor detects that it is now in a magnetic field, it is able to sense the position of objects. *Source RS-online https://se.rs-online.com/web/generalDisplay.html?id=ideas-and-advice/hall-effect-sensors-guide","title":"Physical properties related to the measurement"},{"location":"assignments/week11/#files","text":"Kicad: Compressed ZIP Milling for Roland SRM-20: Traces Holes Outline Inkscape: Outline shape SVG Outline shape DXF Arduino: Hall effect RFID","title":"Files"},{"location":"assignments/week12/","text":"12. Molding and casting \u00b6 Rework at Digiscope \u00b6 On July 16th I\u2019ve received help from the FabLab Digiscope in the Universit\u00e9 Paris-Eclay Campus the instructor Jonah Marrs guided me thorught the week12 Molding and casting process with the Shopbot Desktop for milling, the milling bits usage, VCarve pro software for Gcode generation and the Smooth-on Mold max 29NV Silicone for making a mold. The original plan was make a Chocolate mold but as the Silicone used is not Food safe contact I\u2019ve determined to use it as a wax candle mold. Equipment and materials \u00b6 Shopbot Desktop - 1/8 in Flat-end mill - 1/16 Ball-end mill - Silicon Mold Max 29NV - Scale Recipient for mixing - Globes Googles Tool for mill change - Processing files \u00b6 I\u2019ve designed my model using Solidworks and exported the file as STL file format . Then I\u2019ve imported the STL file to Rhino to delete some surfaces, because Vcarve tried to mill all the wax brick and that could take a significant ammount of time, around 4 hours. Although I\u2019ve committed a mistake by leaving the top surface. The configuration of VCarve pro is as follows: Input the dimensions of the material in this case the wax brick dimensions are: - x: 3 inches - y: 7 inches - z: 1.5 inches Import the STL model we have created for 3D milling. Create the end milling tools we are going to use. Create a Rough milling process Create a surface finishing process Export the files as Shopbot opensbp format. Calculating Spindle speed \u00b6 For this process I\u2019ve used as suggested by instructor Jonah the MIT spindle feed and speed calculator. Input data: Diameter Surface speed of WAX. Configuring the Shopbot desktop \u00b6 The shopbot desktop machine has a frequency control for the rotor spin that needs to be changes every time the spin speed is changed. And as any other CNC machine the axis origins need to be calibrated manually using the jogging control. The tools need to be changed manually. Frequency for the milling process were 177HZ and 55 Hz. Milling Wax mold \u00b6 The GCODE files were exported in two parts: First part: Rough cut with 1/4 inch flat-end mill Second Part: Surface finishing along X axis with 1/16 ball-end mill Surface finishing along Y axis with 1/16 ball-end mill Fixing wax brick with hot glue Loading Files on shopbots UI. Inserting flat-end milling bit. Staring rough cut. Changing to ball-end milling bit. Chip sizes. Rough cut result. Finishing cut result. Mixing the silicon \u00b6 Datasheet for Mold Max 29NV Link I\u2019ve used the Smooth-on Mold max 29NV Silicone . The mixing proportion is 10:1 in mass, the volume needed is around 72000 mm\u00b3 minus 19000 mm\u00b3 = 53000 mm\u00b3 the density of the material is 1.17 gram per cubic centimeter, the grams needed for the mold are: 62.01 of component A and 6 grams of component B. I\u2019ve set the container as Zero reference in the balance and poor the silicon until reach 63.42 grams. Then I\u2019ve poured 6 grams of part B. Finally, I\u2019ve mixed with a stick both parts using this technique to avoid introducing too many air bubbles into the mix. Pouring Silicon \u00b6 I\u2019ve cleaned the wax mold just by using the vacuum machine and then I\u2019ve placed the mold in a flat leveled surface. Then I\u2019ve started pouring the silicon into the milled cavity using This technique to avoid introducing air bubbles . I\u2019ve stop until the cavity was filled. The curing process takes about 6 hours at ambient temperature and I\u2019ve translated the mold in a ziplock bag since I need to travel the next day. Ziplock bag Waiting for the bus Demolding \u00b6 I\u2019ve demolded the silicon mold after 12 hours. I didn\u2019t use any releasing agents. Casting candles \u00b6 After demolding the mold I\u2019ve travelled and finished casting candles using the mold. I\u2019ve melted the candle wax using boiling water bath method using one big pot filled of water and a small pot containing a small piece of wax candle. Piece of wax candle. Additionally I\u2019ve added a few drops of this wax to add color to the mix. Molded candle still hot. Demolding the casted candle. Conclusions \u00b6 This work has been made with the help of the Fablab Digiscope , instructor Jonah Marrs , Romain Di Vozzo , Selena Pere and Lea Paymal . Thanks for your support and kindness. Casting candles with Smooth-on Mold max 29NV Silicone its quick and simple, the shopbot and VCARVE combination is super quick and easy to learn. I\u2019ve made all this rework in only a few hours on a Friday, before traveling, and that\u2019s why there are a lot o details missing on documentation and steps in the processes. A Note about discrimination \u00b6 discrimination noun [ U ] us /d\u026a\u02ccskr\u026am\u00b7\u0259\u02c8ne\u026a\u00b7\u0283\u0259n/ discrimination noun [U] (WORSE TREATMENT) the treatment of a person or particular group of people differently, in a way that is worse than the way people are usually treated: Some immigrants were victims of discrimination. The law made racial discrimination in employment a serious crime. Discrimination is also prejudice against people and a refusal to give them their rights. During my stance in the Fab Academy in AgriLab I was denied multiple times the right to being involved in the instruction, The right of being listen with common respect, The right to be treated like a equal and not being prejudged, The right to use the machines and work freely with the same rights as the other students, The right of not being disrespected in the work place by my culture, and language, The right to learn from my instructors, The right to have a voice to defend myself from false accusations, The right of have a evaluation based on the quality of my work and not a personal point of view. The right to know the right information on time and not just before. The right to receive an instruction without anger or disgust. The right to receive a fair evaluation and don\u2019t being left behind on purpose making me wait one week for a \u201ctoo compressed image in your documentation or a typo or a false \u201cmissing file\u201d allegation. It\u2019s wasn\u2019t just all the days with people not even saying good morning or ignoring me actively, or denying me specifically the instruction or even changing the code of a machine I was working on and saying nothing. Or ask for review and be told \u201cyes today\u201d and being ignored right after, or being treated \u201cwell\u201d just in posts on Linkedin. The last week in AgriLab I was denied the use of the machines and being told of being immature for speaking out about this issues with the coordination. NO speak out loud about discrimination is the right thing to do. Introduction \u00b6 For this week we need to: Mill a mold using our available CNC machine . Cast an object using the milled mold. Test materials for the group assignment Things I\u2019ve learn so far: 3D modeling for molding. Process 3D CNC operations. Machining Wax bricks for molds. Calculate volume of material needed. Mix food-safe silicone. Cast silicon. Use the vacuum chamber. Project: This is the rotor for my milk flow sensor. 3D design on Fusion \u00b6 Model inspired on this: And this 6 mm diameter x 50 mm long shaft I\u2019ve found and cut in Agrilab. Design \u00b6 Sketch. Diameter: 50mm Shaft hole diameter: 5mm Blades width: 6mm Round corners 3mm Cross section of the model extruded. I\u2019ve made this by using revolve on a profile and then applying difference. This is a video of my entire CAD design process: Manufacturing \u00b6 I\u2019ve placed thi origin in the corner shown in the capture. Rough cut. Smoother cut. Tool configuration: Diameter: 3 mm Shaft diameter: 3 mm Overall length: 50 mm length bellow holder: 25 mm Shoulder length: 16 mm Flute length: 15 mm Tool number 3. (Just for current agrilab CNC machine tool configuration) GCODE \u00b6 Delete line with G43 code. This adds 16 mm compensation to Z axis. G43 Z16. H3 Preparation prior to Milling process \u00b6 The milling process requires the Wax brick to be fixed to the CNC bed . But the WAX brick dimensions do not coincide with the pattern in the bed that holds pieces using the vacuum pump. So, we had the task to design a holding tool, for that I\u2019ve measure the CNC bed. I had the idea to make also taps for the vacuum holes of the CNC machine. The tap dimensions are 50 mm square and 4 mm radius in every corner. The lenght from rail to rail to use the holder pieces is 380 mm. The depth of the cuts in the CNC bed is 10 mm. The squares of the CNC bed pattern are 40 mm with a cut of 10 mm. These are the holder that are used to hold pieces in using the rails in the CNC bed. Holder design \u00b6 I\u2019ve chose to design a holder device for the machinable wax bricks, using 6 mm MDF plates and the laser cutter. Draw \u00b6 Inkscape captures missing Laser \u00b6 FTP captures missing Mold base \u00b6 This is the resulting piece, it holds steady in the CNC bed without the need of the vacuum pump. You can see here the small flexes that help the bricks to fit in place. All the bricks have slight 1-2mm differences in their dimensions. This is the brick placed in the holder. Since I didn\u2019t have time to finish my entire design for milling . In the milling day I\u2019ve used Theo\u2019s holder for the 75 x 176 x 37 mm Wax brick. So I\u2019m saving my brick and holder for later. Milling \u00b6 Process: 2D pocket cut (Rough cut) 3D parallel cut (Smoothing cut) Mistakes during the process: At first my process didn\u2019t include a 3D machining process. Generated the GCODE with the tool Number 1. Solutions: Change the model adding angled spins to my design. Generate the GCODE with tool number 3 which in our CNC was the 3 mm Flat-end milling bit. Pocket \u00b6 This is the rough process, the machine just cuts the silhouette as a 2D but it lefts scales and steps the later will be smoothed. Parallel \u00b6 This is the smoothing process, the machine moves in along side the Z and X axis during this process. The resulting piece has a smoother surface. Group assignment \u00b6 For the group assignment I had the idea to make a sample table and cast some coins. For that I\u2019ve used: 2 pieces of 6 mm MDF plate. Plastic sheet. Laser cutter. This is the sample table. Putting altogether the parts. I\u2019ve also bring paper towels and globes for my team mates. I\u2019ve cast a coin using Food-safe silicone, as Elina , but with the difference that I\u2019ve used the vacuum pump to extract air bubbles from the mix. This is the result, the very small features were replicated perfectly in the mold. Food-safe Silicone \u00b6 This is the Food-safe silicone RTV polyaddition 3428 made by Esprit Composite . It\u2019s a two components silicone A 100 and B 10 by mass. Esprit composite Food-safe Silicone Datasheet Link Safety sheet Link Pot life 90 mins @ 23 C Demold time 16 hours @ 23 C Color White Mixing ratio A:100g, B:10g MASS Indentation hardness 28 Shore A Tensile strength 7.5 MPa Elongation 600% Tear strength 20 KN/m Viscosity 25000 mPa Shrinkage 0.1% Safety precautions Not hazardous Solubility None I\u2019ve found this information on English Stephane Muller\u2019s Fab-Academy page And in French in Esprit Composites web site. I\u2019ve used a disposable cup and a chopstick to mix the components. This the vacuum chamber and pump. I\u2019ve found two food-safe demolding agents: Petroleum jelly and, Sunflower seed oil. Silicone preparation \u00b6 There are two important steps before preparing the mix. To know the volume need so by that avoid any excessive amount of silicone. To use a demolding agent and so help the silicone come out easily. Volume \u00b6 I\u2019ve used water and the disposable plastic cup to estimate the volume needed of the mix. It\u2019s important to remark that I still had to measure the mass of the volume to know the amount of the component B. I\u2019ve prepared also Theo\u2019s Silicone for his food-safe silicone assignment. And this is the volume needed for him. The top mark was the initial water level. The following mark is the current water level. The bottom mark is the water level after filling my mold. After over-estimating the residuals I\u2019ve marked the level of MIX in the cup. Mass \u00b6 I\u2019ve weighted the empty cup and then used the Zero function in the balance. So the next grams measured will be only the weight of the components. The component A and B weighted 97 g together 4 mm above to the level of the volume mark. 88 g Component A 9 g Component B Mixing \u00b6 I\u2019ve used the chopstick to mix the components following the instructions of Professor Neil Gershenfeld to avoid filling the mix with air bubbles. This a sample of the movements I\u2019ve used to mix the components. Vacuum chamber \u00b6 I\u2019ve used the vacuum chamber to extract the air bubbles of the silicone Mix. Parameters: Pressure: -1.5 MPa. Time: 10 mins. After releasing the vacuum. Casting \u00b6 Demolding agent \u00b6 I\u2019ve chose Sunflower seed oil as demolding agent, following the instructions of the RTV3428 Silicone, it states that any agent should be food-safe as the silicone. Coating the borders of the mold with the Sunflower oil using a coffee filter. Coating the inside of the mold pouring oil into the cavity. After realizing the excessive coat of oil I\u2019ve placed the mold backwards to help ease the excessive oil out of the cavity. Pouring \u00b6 Theo\u2019s mold. My initial mold. A big mistake. I\u2019ve chose to put some PLA wires I found out nearby with the idea to help me in the demolding process. Same for the Chopsticks. I didn\u2019t have the chance to record myself pouring the mix into the mold, but here I show out the technique I\u2019ve used. The idea is to make a small stream pouring into the mold to break any bubble in the mix. I\u2019ve show to Theo the same technique. Demolding \u00b6 Remarks: The oil worked very good. Next time I\u2019ll not use any weird attachment, like I did with the chopsticks. I\u2019ve pour the silicone on Monday 11 am and cast off on Tuesday 11 am. The mold after removing the silicone part. The casted part. I\u2019ve used a knife to cut the excess of material. After clearing the excess I\u2019ve inserted the 6 mm shaft as planned. The hole in the silicone is 5 mm so it is tight and stable. Extra \u00b6 Casting bismuth \u00b6 I\u2019ve helped Theo\u2019s with his test for soft metal casting. This is the setup of the pizza oven and a improvised table I\u2019ve found in AgriLab. The oven with the special container for molten metals. We used a K-type thermo-pair attached to the container using Kapton tape. Theo coated the mold with a thick layer of baby powder. This is Bismuth and his characteristic light reflective crystal structure. This device is a XTC-Profiler a thermo-pair reader that we use in the Electro-Lab. This was Theo\u2019s first attempt to cast Bismuth. The Bismuth got cold quickly, since the mold was 4 meters away from the oven. So the Bismuth didn\u2019t flow on the mold. This is a video of a second attempt performed by our instructor Luc This is Theo\u2019s third and successful attempt to cast the Bismuth into the mold. Final cast piece. Data casting Bismuth Oven max Temp 290 C Time of practice 46 mins Time to reach 280 C 26 mins Attempts until success 3 Conclusion \u00b6 Silicone RTV3428 it\u2019s really easy to use. The viscosity was perfect to replicate all the features of the design. I\u2019d like to use a cap for the top of my design, or a two parts mold. I\u2019d keep using this material for my next sensor parts. Design changes Design a mold that covers or embeds the shaft to avoid direct contact with the milk and the metal. Future projects \u00b6 I\u2019ve the idea to cast the entire body of my flow sensor, but since it\u2019s the first time for me using Food-safe materials I\u2019ll wait until finish my design properly. Rework for global review (AgriLab) \u00b6 I\u2019ve started to prepare a molded version of the buttons I\u2019ve designed for my final project. My time will be managed like this: Task Date Milling mold base 13/07 Pouring silicone on wax mold 13/07 Casting on silicone mold 14/07 Files \u00b6 Original design File 3D Model SOLIDWORKS 3D model Roland Modela 4 project file project for toolpath Requirement File 3D Model STL stl model Milling path Rough Made with Roland Modela 4 Milling path finishing Made with Roland Modela 4 Software Install \u00b6 For this rework I\u2019ve chose to use Solidworks for modeling, and Roland MODELA v4 to generate the toolpaths for the machining. I\u2019m using a version of the buttons I\u2019ve designed for my final project. To install Roland Modela I\u2019ve used the links on the documentation of Yuichi Tamiya my global instructor. Software to install: Modela player 4. Virtual Modela. Download Links on Google Drive Configuration \u00b6 Once Roland Modela 4 its installed we can start using it, since this is a windows program I\u2019ve to switch to Windows OS to use it. Add Roland SRM-20 as the main machine. - Add a new tool: I\u2019ll add the 1mm flat-head milling bit we use for cutting PCBs. - Import the STL model. - Add process: - ) - ) - ) - ) - ) Rought cut: - - - Finishing: - - - Simulation with virtual Modela software: - - - Rework at Digiscope \u00b6 On July 16th I\u2019ve received help from the FabLab Digiscope in the Universit\u00e9 Paris-Eclay Campus the instructor Jonah Marrs guided me thorught the week12 Molding and casting process with the Shopbot Desktop for milling, the milling bits usage, VCarve pro software for Gcode generation and the Smooth-on Mold max 29NV Silicone for making a mold. The original plan was make a Chocolate mold but as the Silicone used is not Food safe contact I\u2019ve determined to use it as a wax candle mold. Equipment and materials \u00b6 Shopbot Desktop - 1/8 in Flat-end mill - 1/16 Ball-end mill - Silicon Mold Max 29NV - Scale Recipient for mixing - Globes Googles Tool for mill change - Processing files \u00b6 I\u2019ve designed my model using Solidworks and exported the file as STL file format . Then I\u2019ve imported the STL file to Rhino to delete some surfaces, because Vcarve tried to mill all the wax brick and that could take a significant ammount of time, around 4 hours. Although I\u2019ve committed a mistake by leaving the top surface. The configuration of VCarve pro is as follows: Input the dimensions of the material in this case the wax brick dimensions are: - x: 3 inches - y: 7 inches - z: 1.5 inches Import the STL model we have created for 3D milling. Create the end milling tools we are going to use. Create a Rough milling process Create a surface finishing process Export the files as Shopbot opensbp format. Calculating Spindle speed \u00b6 For this process I\u2019ve used as suggested by instructor Jonah the MIT spindle feed and speed calculator. Input data: Diameter Surface speed of WAX. etc. Configuring the Shopbot desktop \u00b6 The shopbot desktop machine has a frequency control for the rotor spin that needs to be changes every time the spin speed is changed. And as any other CNC machine the axis origins need to be calibrated manually using the jogging control. The tools need to be changed manually. Frequency for the milling process were 177HZ and 55 Hz. Milling Wax mold \u00b6 The GCODE files were exported in two parts: First part: Rough cut with 1/4 inch flat-end mill Second Part: Surface finishing along X axis with 1/16 ball-end mill Surface finishing along Y axis with 1/16 ball-end mill Fixing wax brick with hot glue Loading Files on shopbots UI. Inserting flat-end milling bit. Staring rough cut. Changing to ball-end milling bit. Chip sizes. Rough cut result. Finishing cut result. Mixing the silicon \u00b6 Datasheet for Mold Max 29NV Link I\u2019ve used the Smooth-on Mold max 29NV Silicone . The mixing proportion is 10:1 in mass, the volume needed is around 72000 mm\u00b3 minus 19000 mm\u00b3 = 53000 mm\u00b3 the density of the material is 1.17 gram per cubic centimeter, the grams needed for the mold are: 62.01 of component A and 6 grams of component B. I\u2019ve set the container as Zero reference in the balance and poor the silicon until reach 63.42 grams. Then I\u2019ve poured 6 grams of part B. Finally, I\u2019ve mixed with a stick both parts using this technique to avoid introducing too many air bubbles into the mix. Pouring Silicon \u00b6 I\u2019ve cleaned the wax mold just by using the vacuum machine and then I\u2019ve placed the mold in a flat leveled surface. Then I\u2019ve started pouring the silicon into the milled cavity using This technique to avoid introducing air bubbles . I\u2019ve stop until the cavity was filled. The curing process takes about 6 hours at ambient temperature and I\u2019ve translated the mold in a ziplock bag since I need to travel the next day. Ziplock bag Waiting for the bus Demolding \u00b6 I\u2019ve demolded the silicon mold after 12 hours. I didn\u2019t use any releasing agents. ) Casting candles \u00b6 After demolding the mold I\u2019ve travelled and finished casting candles using the mold. I\u2019ve melted the candle wax using boiling water bath method using one big pot filled of water and a small pot containing a small piece of wax candle. Piece of wax candle. Additionally I\u2019ve added a few drops of this wax to add color to the mix. Molded candle still hot. Demolding the casted candle. Conclusions \u00b6 This work has been made with the help of the Fablab Digiscope , instructor Jonah Marrs , Romain Di Vozzo , Selena Pere and Lea Paymal . Thanks for your support and kindness. Casting candles with Smooth-on Mold max 29NV Silicone its quick and simple, the shopbot and VCARVE combination is super quick and easy to learn. I\u2019ve made all this rework in only a few hours on a Friday, before traveling, and that\u2019s why there are a lot o details missing on documentation and steps in the processes. Files \u00b6 Final files \u00b6 Solidworks candle file STL candle file V Carve pro file Past files \u00b6 NC Rotor Rough Pocket process file. NC Rotor Smoother Parallel process file. Inkscape laser mold base file for 6x6 inches Wax brick Fusion 360 Rotor design and manufacturing file","title":"12. Molding and casting"},{"location":"assignments/week12/#12-molding-and-casting","text":"","title":"12. Molding and casting"},{"location":"assignments/week12/#rework-at-digiscope","text":"On July 16th I\u2019ve received help from the FabLab Digiscope in the Universit\u00e9 Paris-Eclay Campus the instructor Jonah Marrs guided me thorught the week12 Molding and casting process with the Shopbot Desktop for milling, the milling bits usage, VCarve pro software for Gcode generation and the Smooth-on Mold max 29NV Silicone for making a mold. The original plan was make a Chocolate mold but as the Silicone used is not Food safe contact I\u2019ve determined to use it as a wax candle mold.","title":"Rework at Digiscope"},{"location":"assignments/week12/#equipment-and-materials","text":"Shopbot Desktop - 1/8 in Flat-end mill - 1/16 Ball-end mill - Silicon Mold Max 29NV - Scale Recipient for mixing - Globes Googles Tool for mill change -","title":"Equipment and materials"},{"location":"assignments/week12/#processing-files","text":"I\u2019ve designed my model using Solidworks and exported the file as STL file format . Then I\u2019ve imported the STL file to Rhino to delete some surfaces, because Vcarve tried to mill all the wax brick and that could take a significant ammount of time, around 4 hours. Although I\u2019ve committed a mistake by leaving the top surface. The configuration of VCarve pro is as follows: Input the dimensions of the material in this case the wax brick dimensions are: - x: 3 inches - y: 7 inches - z: 1.5 inches Import the STL model we have created for 3D milling. Create the end milling tools we are going to use. Create a Rough milling process Create a surface finishing process Export the files as Shopbot opensbp format.","title":"Processing files"},{"location":"assignments/week12/#calculating-spindle-speed","text":"For this process I\u2019ve used as suggested by instructor Jonah the MIT spindle feed and speed calculator. Input data: Diameter Surface speed of WAX.","title":"Calculating Spindle speed"},{"location":"assignments/week12/#configuring-the-shopbot-desktop","text":"The shopbot desktop machine has a frequency control for the rotor spin that needs to be changes every time the spin speed is changed. And as any other CNC machine the axis origins need to be calibrated manually using the jogging control. The tools need to be changed manually. Frequency for the milling process were 177HZ and 55 Hz.","title":"Configuring the Shopbot desktop"},{"location":"assignments/week12/#milling-wax-mold","text":"The GCODE files were exported in two parts: First part: Rough cut with 1/4 inch flat-end mill Second Part: Surface finishing along X axis with 1/16 ball-end mill Surface finishing along Y axis with 1/16 ball-end mill Fixing wax brick with hot glue Loading Files on shopbots UI. Inserting flat-end milling bit. Staring rough cut. Changing to ball-end milling bit. Chip sizes. Rough cut result. Finishing cut result.","title":"Milling Wax mold"},{"location":"assignments/week12/#mixing-the-silicon","text":"Datasheet for Mold Max 29NV Link I\u2019ve used the Smooth-on Mold max 29NV Silicone . The mixing proportion is 10:1 in mass, the volume needed is around 72000 mm\u00b3 minus 19000 mm\u00b3 = 53000 mm\u00b3 the density of the material is 1.17 gram per cubic centimeter, the grams needed for the mold are: 62.01 of component A and 6 grams of component B. I\u2019ve set the container as Zero reference in the balance and poor the silicon until reach 63.42 grams. Then I\u2019ve poured 6 grams of part B. Finally, I\u2019ve mixed with a stick both parts using this technique to avoid introducing too many air bubbles into the mix.","title":"Mixing the silicon"},{"location":"assignments/week12/#pouring-silicon","text":"I\u2019ve cleaned the wax mold just by using the vacuum machine and then I\u2019ve placed the mold in a flat leveled surface. Then I\u2019ve started pouring the silicon into the milled cavity using This technique to avoid introducing air bubbles . I\u2019ve stop until the cavity was filled. The curing process takes about 6 hours at ambient temperature and I\u2019ve translated the mold in a ziplock bag since I need to travel the next day. Ziplock bag Waiting for the bus","title":"Pouring Silicon"},{"location":"assignments/week12/#demolding","text":"I\u2019ve demolded the silicon mold after 12 hours. I didn\u2019t use any releasing agents.","title":"Demolding"},{"location":"assignments/week12/#casting-candles","text":"After demolding the mold I\u2019ve travelled and finished casting candles using the mold. I\u2019ve melted the candle wax using boiling water bath method using one big pot filled of water and a small pot containing a small piece of wax candle. Piece of wax candle. Additionally I\u2019ve added a few drops of this wax to add color to the mix. Molded candle still hot. Demolding the casted candle.","title":"Casting candles"},{"location":"assignments/week12/#conclusions","text":"This work has been made with the help of the Fablab Digiscope , instructor Jonah Marrs , Romain Di Vozzo , Selena Pere and Lea Paymal . Thanks for your support and kindness. Casting candles with Smooth-on Mold max 29NV Silicone its quick and simple, the shopbot and VCARVE combination is super quick and easy to learn. I\u2019ve made all this rework in only a few hours on a Friday, before traveling, and that\u2019s why there are a lot o details missing on documentation and steps in the processes.","title":"Conclusions"},{"location":"assignments/week12/#a-note-about-discrimination","text":"discrimination noun [ U ] us /d\u026a\u02ccskr\u026am\u00b7\u0259\u02c8ne\u026a\u00b7\u0283\u0259n/ discrimination noun [U] (WORSE TREATMENT) the treatment of a person or particular group of people differently, in a way that is worse than the way people are usually treated: Some immigrants were victims of discrimination. The law made racial discrimination in employment a serious crime. Discrimination is also prejudice against people and a refusal to give them their rights. During my stance in the Fab Academy in AgriLab I was denied multiple times the right to being involved in the instruction, The right of being listen with common respect, The right to be treated like a equal and not being prejudged, The right to use the machines and work freely with the same rights as the other students, The right of not being disrespected in the work place by my culture, and language, The right to learn from my instructors, The right to have a voice to defend myself from false accusations, The right of have a evaluation based on the quality of my work and not a personal point of view. The right to know the right information on time and not just before. The right to receive an instruction without anger or disgust. The right to receive a fair evaluation and don\u2019t being left behind on purpose making me wait one week for a \u201ctoo compressed image in your documentation or a typo or a false \u201cmissing file\u201d allegation. It\u2019s wasn\u2019t just all the days with people not even saying good morning or ignoring me actively, or denying me specifically the instruction or even changing the code of a machine I was working on and saying nothing. Or ask for review and be told \u201cyes today\u201d and being ignored right after, or being treated \u201cwell\u201d just in posts on Linkedin. The last week in AgriLab I was denied the use of the machines and being told of being immature for speaking out about this issues with the coordination. NO speak out loud about discrimination is the right thing to do.","title":"A Note about discrimination"},{"location":"assignments/week12/#introduction","text":"For this week we need to: Mill a mold using our available CNC machine . Cast an object using the milled mold. Test materials for the group assignment Things I\u2019ve learn so far: 3D modeling for molding. Process 3D CNC operations. Machining Wax bricks for molds. Calculate volume of material needed. Mix food-safe silicone. Cast silicon. Use the vacuum chamber. Project: This is the rotor for my milk flow sensor.","title":"Introduction"},{"location":"assignments/week12/#3d-design-on-fusion","text":"Model inspired on this: And this 6 mm diameter x 50 mm long shaft I\u2019ve found and cut in Agrilab.","title":"3D design on Fusion"},{"location":"assignments/week12/#design","text":"Sketch. Diameter: 50mm Shaft hole diameter: 5mm Blades width: 6mm Round corners 3mm Cross section of the model extruded. I\u2019ve made this by using revolve on a profile and then applying difference. This is a video of my entire CAD design process:","title":"Design"},{"location":"assignments/week12/#manufacturing","text":"I\u2019ve placed thi origin in the corner shown in the capture. Rough cut. Smoother cut. Tool configuration: Diameter: 3 mm Shaft diameter: 3 mm Overall length: 50 mm length bellow holder: 25 mm Shoulder length: 16 mm Flute length: 15 mm Tool number 3. (Just for current agrilab CNC machine tool configuration)","title":"Manufacturing"},{"location":"assignments/week12/#gcode","text":"Delete line with G43 code. This adds 16 mm compensation to Z axis. G43 Z16. H3","title":"GCODE"},{"location":"assignments/week12/#preparation-prior-to-milling-process","text":"The milling process requires the Wax brick to be fixed to the CNC bed . But the WAX brick dimensions do not coincide with the pattern in the bed that holds pieces using the vacuum pump. So, we had the task to design a holding tool, for that I\u2019ve measure the CNC bed. I had the idea to make also taps for the vacuum holes of the CNC machine. The tap dimensions are 50 mm square and 4 mm radius in every corner. The lenght from rail to rail to use the holder pieces is 380 mm. The depth of the cuts in the CNC bed is 10 mm. The squares of the CNC bed pattern are 40 mm with a cut of 10 mm. These are the holder that are used to hold pieces in using the rails in the CNC bed.","title":"Preparation prior to Milling process"},{"location":"assignments/week12/#holder-design","text":"I\u2019ve chose to design a holder device for the machinable wax bricks, using 6 mm MDF plates and the laser cutter.","title":"Holder design"},{"location":"assignments/week12/#draw","text":"Inkscape captures missing","title":"Draw"},{"location":"assignments/week12/#laser","text":"FTP captures missing","title":"Laser"},{"location":"assignments/week12/#mold-base","text":"This is the resulting piece, it holds steady in the CNC bed without the need of the vacuum pump. You can see here the small flexes that help the bricks to fit in place. All the bricks have slight 1-2mm differences in their dimensions. This is the brick placed in the holder. Since I didn\u2019t have time to finish my entire design for milling . In the milling day I\u2019ve used Theo\u2019s holder for the 75 x 176 x 37 mm Wax brick. So I\u2019m saving my brick and holder for later.","title":"Mold base"},{"location":"assignments/week12/#milling","text":"Process: 2D pocket cut (Rough cut) 3D parallel cut (Smoothing cut) Mistakes during the process: At first my process didn\u2019t include a 3D machining process. Generated the GCODE with the tool Number 1. Solutions: Change the model adding angled spins to my design. Generate the GCODE with tool number 3 which in our CNC was the 3 mm Flat-end milling bit.","title":"Milling"},{"location":"assignments/week12/#pocket","text":"This is the rough process, the machine just cuts the silhouette as a 2D but it lefts scales and steps the later will be smoothed.","title":"Pocket"},{"location":"assignments/week12/#parallel","text":"This is the smoothing process, the machine moves in along side the Z and X axis during this process. The resulting piece has a smoother surface.","title":"Parallel"},{"location":"assignments/week12/#group-assignment","text":"For the group assignment I had the idea to make a sample table and cast some coins. For that I\u2019ve used: 2 pieces of 6 mm MDF plate. Plastic sheet. Laser cutter. This is the sample table. Putting altogether the parts. I\u2019ve also bring paper towels and globes for my team mates. I\u2019ve cast a coin using Food-safe silicone, as Elina , but with the difference that I\u2019ve used the vacuum pump to extract air bubbles from the mix. This is the result, the very small features were replicated perfectly in the mold.","title":"Group assignment"},{"location":"assignments/week12/#food-safe-silicone","text":"This is the Food-safe silicone RTV polyaddition 3428 made by Esprit Composite . It\u2019s a two components silicone A 100 and B 10 by mass. Esprit composite Food-safe Silicone Datasheet Link Safety sheet Link Pot life 90 mins @ 23 C Demold time 16 hours @ 23 C Color White Mixing ratio A:100g, B:10g MASS Indentation hardness 28 Shore A Tensile strength 7.5 MPa Elongation 600% Tear strength 20 KN/m Viscosity 25000 mPa Shrinkage 0.1% Safety precautions Not hazardous Solubility None I\u2019ve found this information on English Stephane Muller\u2019s Fab-Academy page And in French in Esprit Composites web site. I\u2019ve used a disposable cup and a chopstick to mix the components. This the vacuum chamber and pump. I\u2019ve found two food-safe demolding agents: Petroleum jelly and, Sunflower seed oil.","title":"Food-safe Silicone"},{"location":"assignments/week12/#silicone-preparation","text":"There are two important steps before preparing the mix. To know the volume need so by that avoid any excessive amount of silicone. To use a demolding agent and so help the silicone come out easily.","title":"Silicone preparation"},{"location":"assignments/week12/#volume","text":"I\u2019ve used water and the disposable plastic cup to estimate the volume needed of the mix. It\u2019s important to remark that I still had to measure the mass of the volume to know the amount of the component B. I\u2019ve prepared also Theo\u2019s Silicone for his food-safe silicone assignment. And this is the volume needed for him. The top mark was the initial water level. The following mark is the current water level. The bottom mark is the water level after filling my mold. After over-estimating the residuals I\u2019ve marked the level of MIX in the cup.","title":"Volume"},{"location":"assignments/week12/#mass","text":"I\u2019ve weighted the empty cup and then used the Zero function in the balance. So the next grams measured will be only the weight of the components. The component A and B weighted 97 g together 4 mm above to the level of the volume mark. 88 g Component A 9 g Component B","title":"Mass"},{"location":"assignments/week12/#mixing","text":"I\u2019ve used the chopstick to mix the components following the instructions of Professor Neil Gershenfeld to avoid filling the mix with air bubbles. This a sample of the movements I\u2019ve used to mix the components.","title":"Mixing"},{"location":"assignments/week12/#vacuum-chamber","text":"I\u2019ve used the vacuum chamber to extract the air bubbles of the silicone Mix. Parameters: Pressure: -1.5 MPa. Time: 10 mins. After releasing the vacuum.","title":"Vacuum chamber"},{"location":"assignments/week12/#casting","text":"","title":"Casting"},{"location":"assignments/week12/#demolding-agent","text":"I\u2019ve chose Sunflower seed oil as demolding agent, following the instructions of the RTV3428 Silicone, it states that any agent should be food-safe as the silicone. Coating the borders of the mold with the Sunflower oil using a coffee filter. Coating the inside of the mold pouring oil into the cavity. After realizing the excessive coat of oil I\u2019ve placed the mold backwards to help ease the excessive oil out of the cavity.","title":"Demolding agent"},{"location":"assignments/week12/#pouring","text":"Theo\u2019s mold. My initial mold. A big mistake. I\u2019ve chose to put some PLA wires I found out nearby with the idea to help me in the demolding process. Same for the Chopsticks. I didn\u2019t have the chance to record myself pouring the mix into the mold, but here I show out the technique I\u2019ve used. The idea is to make a small stream pouring into the mold to break any bubble in the mix. I\u2019ve show to Theo the same technique.","title":"Pouring"},{"location":"assignments/week12/#demolding_1","text":"Remarks: The oil worked very good. Next time I\u2019ll not use any weird attachment, like I did with the chopsticks. I\u2019ve pour the silicone on Monday 11 am and cast off on Tuesday 11 am. The mold after removing the silicone part. The casted part. I\u2019ve used a knife to cut the excess of material. After clearing the excess I\u2019ve inserted the 6 mm shaft as planned. The hole in the silicone is 5 mm so it is tight and stable.","title":"Demolding"},{"location":"assignments/week12/#extra","text":"","title":"Extra"},{"location":"assignments/week12/#casting-bismuth","text":"I\u2019ve helped Theo\u2019s with his test for soft metal casting. This is the setup of the pizza oven and a improvised table I\u2019ve found in AgriLab. The oven with the special container for molten metals. We used a K-type thermo-pair attached to the container using Kapton tape. Theo coated the mold with a thick layer of baby powder. This is Bismuth and his characteristic light reflective crystal structure. This device is a XTC-Profiler a thermo-pair reader that we use in the Electro-Lab. This was Theo\u2019s first attempt to cast Bismuth. The Bismuth got cold quickly, since the mold was 4 meters away from the oven. So the Bismuth didn\u2019t flow on the mold. This is a video of a second attempt performed by our instructor Luc This is Theo\u2019s third and successful attempt to cast the Bismuth into the mold. Final cast piece. Data casting Bismuth Oven max Temp 290 C Time of practice 46 mins Time to reach 280 C 26 mins Attempts until success 3","title":"Casting bismuth"},{"location":"assignments/week12/#conclusion","text":"Silicone RTV3428 it\u2019s really easy to use. The viscosity was perfect to replicate all the features of the design. I\u2019d like to use a cap for the top of my design, or a two parts mold. I\u2019d keep using this material for my next sensor parts. Design changes Design a mold that covers or embeds the shaft to avoid direct contact with the milk and the metal.","title":"Conclusion"},{"location":"assignments/week12/#future-projects","text":"I\u2019ve the idea to cast the entire body of my flow sensor, but since it\u2019s the first time for me using Food-safe materials I\u2019ll wait until finish my design properly.","title":"Future projects"},{"location":"assignments/week12/#rework-for-global-review-agrilab","text":"I\u2019ve started to prepare a molded version of the buttons I\u2019ve designed for my final project. My time will be managed like this: Task Date Milling mold base 13/07 Pouring silicone on wax mold 13/07 Casting on silicone mold 14/07","title":"Rework for global review (AgriLab)"},{"location":"assignments/week12/#files","text":"Original design File 3D Model SOLIDWORKS 3D model Roland Modela 4 project file project for toolpath Requirement File 3D Model STL stl model Milling path Rough Made with Roland Modela 4 Milling path finishing Made with Roland Modela 4","title":"Files"},{"location":"assignments/week12/#software-install","text":"For this rework I\u2019ve chose to use Solidworks for modeling, and Roland MODELA v4 to generate the toolpaths for the machining. I\u2019m using a version of the buttons I\u2019ve designed for my final project. To install Roland Modela I\u2019ve used the links on the documentation of Yuichi Tamiya my global instructor. Software to install: Modela player 4. Virtual Modela. Download Links on Google Drive","title":"Software Install"},{"location":"assignments/week12/#configuration","text":"Once Roland Modela 4 its installed we can start using it, since this is a windows program I\u2019ve to switch to Windows OS to use it. Add Roland SRM-20 as the main machine. - Add a new tool: I\u2019ll add the 1mm flat-head milling bit we use for cutting PCBs. - Import the STL model. - Add process: - ) - ) - ) - ) - ) Rought cut: - - - Finishing: - - - Simulation with virtual Modela software: - - -","title":"Configuration"},{"location":"assignments/week12/#rework-at-digiscope_1","text":"On July 16th I\u2019ve received help from the FabLab Digiscope in the Universit\u00e9 Paris-Eclay Campus the instructor Jonah Marrs guided me thorught the week12 Molding and casting process with the Shopbot Desktop for milling, the milling bits usage, VCarve pro software for Gcode generation and the Smooth-on Mold max 29NV Silicone for making a mold. The original plan was make a Chocolate mold but as the Silicone used is not Food safe contact I\u2019ve determined to use it as a wax candle mold.","title":"Rework at Digiscope"},{"location":"assignments/week12/#equipment-and-materials_1","text":"Shopbot Desktop - 1/8 in Flat-end mill - 1/16 Ball-end mill - Silicon Mold Max 29NV - Scale Recipient for mixing - Globes Googles Tool for mill change -","title":"Equipment and materials"},{"location":"assignments/week12/#processing-files_1","text":"I\u2019ve designed my model using Solidworks and exported the file as STL file format . Then I\u2019ve imported the STL file to Rhino to delete some surfaces, because Vcarve tried to mill all the wax brick and that could take a significant ammount of time, around 4 hours. Although I\u2019ve committed a mistake by leaving the top surface. The configuration of VCarve pro is as follows: Input the dimensions of the material in this case the wax brick dimensions are: - x: 3 inches - y: 7 inches - z: 1.5 inches Import the STL model we have created for 3D milling. Create the end milling tools we are going to use. Create a Rough milling process Create a surface finishing process Export the files as Shopbot opensbp format.","title":"Processing files"},{"location":"assignments/week12/#calculating-spindle-speed_1","text":"For this process I\u2019ve used as suggested by instructor Jonah the MIT spindle feed and speed calculator. Input data: Diameter Surface speed of WAX. etc.","title":"Calculating Spindle speed"},{"location":"assignments/week12/#configuring-the-shopbot-desktop_1","text":"The shopbot desktop machine has a frequency control for the rotor spin that needs to be changes every time the spin speed is changed. And as any other CNC machine the axis origins need to be calibrated manually using the jogging control. The tools need to be changed manually. Frequency for the milling process were 177HZ and 55 Hz.","title":"Configuring the Shopbot desktop"},{"location":"assignments/week12/#milling-wax-mold_1","text":"The GCODE files were exported in two parts: First part: Rough cut with 1/4 inch flat-end mill Second Part: Surface finishing along X axis with 1/16 ball-end mill Surface finishing along Y axis with 1/16 ball-end mill Fixing wax brick with hot glue Loading Files on shopbots UI. Inserting flat-end milling bit. Staring rough cut. Changing to ball-end milling bit. Chip sizes. Rough cut result. Finishing cut result.","title":"Milling Wax mold"},{"location":"assignments/week12/#mixing-the-silicon_1","text":"Datasheet for Mold Max 29NV Link I\u2019ve used the Smooth-on Mold max 29NV Silicone . The mixing proportion is 10:1 in mass, the volume needed is around 72000 mm\u00b3 minus 19000 mm\u00b3 = 53000 mm\u00b3 the density of the material is 1.17 gram per cubic centimeter, the grams needed for the mold are: 62.01 of component A and 6 grams of component B. I\u2019ve set the container as Zero reference in the balance and poor the silicon until reach 63.42 grams. Then I\u2019ve poured 6 grams of part B. Finally, I\u2019ve mixed with a stick both parts using this technique to avoid introducing too many air bubbles into the mix.","title":"Mixing the silicon"},{"location":"assignments/week12/#pouring-silicon_1","text":"I\u2019ve cleaned the wax mold just by using the vacuum machine and then I\u2019ve placed the mold in a flat leveled surface. Then I\u2019ve started pouring the silicon into the milled cavity using This technique to avoid introducing air bubbles . I\u2019ve stop until the cavity was filled. The curing process takes about 6 hours at ambient temperature and I\u2019ve translated the mold in a ziplock bag since I need to travel the next day. Ziplock bag Waiting for the bus","title":"Pouring Silicon"},{"location":"assignments/week12/#demolding_2","text":"I\u2019ve demolded the silicon mold after 12 hours. I didn\u2019t use any releasing agents. )","title":"Demolding"},{"location":"assignments/week12/#casting-candles_1","text":"After demolding the mold I\u2019ve travelled and finished casting candles using the mold. I\u2019ve melted the candle wax using boiling water bath method using one big pot filled of water and a small pot containing a small piece of wax candle. Piece of wax candle. Additionally I\u2019ve added a few drops of this wax to add color to the mix. Molded candle still hot. Demolding the casted candle.","title":"Casting candles"},{"location":"assignments/week12/#conclusions_1","text":"This work has been made with the help of the Fablab Digiscope , instructor Jonah Marrs , Romain Di Vozzo , Selena Pere and Lea Paymal . Thanks for your support and kindness. Casting candles with Smooth-on Mold max 29NV Silicone its quick and simple, the shopbot and VCARVE combination is super quick and easy to learn. I\u2019ve made all this rework in only a few hours on a Friday, before traveling, and that\u2019s why there are a lot o details missing on documentation and steps in the processes.","title":"Conclusions"},{"location":"assignments/week12/#files_1","text":"","title":"Files"},{"location":"assignments/week12/#final-files","text":"Solidworks candle file STL candle file V Carve pro file","title":"Final files"},{"location":"assignments/week12/#past-files","text":"NC Rotor Rough Pocket process file. NC Rotor Smoother Parallel process file. Inkscape laser mold base file for 6x6 inches Wax brick Fusion 360 Rotor design and manufacturing file","title":"Past files"},{"location":"assignments/week13/","text":"13. Output Devices \u00b6 Introduction \u00b6 This week I\u2019ve started to use output devices that are part of my device for the final project. For this week I\u2019ve used my board from week11, input devices based on the ATSAMD11 micro-controller. A Speaker to make a sound after a RFID successful read. A LCD display to show information relative to the milk production. Then to make this possible I\u2019ve listed here different components and concepts that were useful for me during this week work. Possible thing to use for this week work: Relay Speaker LCD i2c display TFT display OLED i2c display Also I\u2019ve contributed to this weeks Group assignment by checking the power consumption of a display and a speaker. Concepts I\u2019ve explored during this week \u00b6 Tone library for arduino \u00b6 /* Arduino Mario Bros Tunes With Piezo Buzzer and PWM Connect the positive side of the Buzzer to pin 3, then the negative side to a 1k ohm resistor. Connect the other side of the 1 k ohm resistor to ground(GND) pin on the Arduino. by: Dipto Pratyaksa last updated: 31/3/13 */ /************************************************* * Public Constants *************************************************/ #define NOTE_B0 31 #define NOTE_C1 33 #define NOTE_CS1 35 #define NOTE_D1 37 #define NOTE_DS1 39 #define NOTE_E1 41 #define NOTE_F1 44 #define NOTE_FS1 46 #define NOTE_G1 49 #define NOTE_GS1 52 #define NOTE_A1 55 #define NOTE_AS1 58 #define NOTE_B1 62 #define NOTE_C2 65 #define NOTE_CS2 69 #define NOTE_D2 73 #define NOTE_DS2 78 #define NOTE_E2 82 #define NOTE_F2 87 #define NOTE_FS2 93 #define NOTE_G2 98 #define NOTE_GS2 104 #define NOTE_A2 110 #define NOTE_AS2 117 #define NOTE_B2 123 #define NOTE_C3 131 #define NOTE_CS3 139 #define NOTE_D3 147 #define NOTE_DS3 156 #define NOTE_E3 165 #define NOTE_F3 175 #define NOTE_FS3 185 #define NOTE_G3 196 #define NOTE_GS3 208 #define NOTE_A3 220 #define NOTE_AS3 233 #define NOTE_B3 247 #define NOTE_C4 262 #define NOTE_CS4 277 #define NOTE_D4 294 #define NOTE_DS4 311 #define NOTE_E4 330 #define NOTE_F4 349 #define NOTE_FS4 370 #define NOTE_G4 392 #define NOTE_GS4 415 #define NOTE_A4 440 #define NOTE_AS4 466 #define NOTE_B4 494 #define NOTE_C5 523 #define NOTE_CS5 554 #define NOTE_D5 587 #define NOTE_DS5 622 #define NOTE_E5 659 #define NOTE_F5 698 #define NOTE_FS5 740 #define NOTE_G5 784 #define NOTE_GS5 831 #define NOTE_A5 880 #define NOTE_AS5 932 #define NOTE_B5 988 #define NOTE_C6 1047 #define NOTE_CS6 1109 #define NOTE_D6 1175 #define NOTE_DS6 1245 #define NOTE_E6 1319 #define NOTE_F6 1397 #define NOTE_FS6 1480 #define NOTE_G6 1568 #define NOTE_GS6 1661 #define NOTE_A6 1760 #define NOTE_AS6 1865 #define NOTE_B6 1976 #define NOTE_C7 2093 #define NOTE_CS7 2217 #define NOTE_D7 2349 #define NOTE_DS7 2489 #define NOTE_E7 2637 #define NOTE_F7 2794 #define NOTE_FS7 2960 #define NOTE_G7 3136 #define NOTE_GS7 3322 #define NOTE_A7 3520 #define NOTE_AS7 3729 #define NOTE_B7 3951 #define NOTE_C8 4186 #define NOTE_CS8 4435 #define NOTE_D8 4699 #define NOTE_DS8 4978 #define melodyPin 3 //Mario main theme melody int melody[] = { NOTE_E7, NOTE_E7, 0, NOTE_E7, 0, NOTE_C7, NOTE_E7, 0, NOTE_G7, 0, 0, 0, NOTE_G6, 0, 0, 0, NOTE_C7, 0, 0, NOTE_G6, 0, 0, NOTE_E6, 0, 0, NOTE_A6, 0, NOTE_B6, 0, NOTE_AS6, NOTE_A6, 0, NOTE_G6, NOTE_E7, NOTE_G7, NOTE_A7, 0, NOTE_F7, NOTE_G7, 0, NOTE_E7, 0, NOTE_C7, NOTE_D7, NOTE_B6, 0, 0, NOTE_C7, 0, 0, NOTE_G6, 0, 0, NOTE_E6, 0, 0, NOTE_A6, 0, NOTE_B6, 0, NOTE_AS6, NOTE_A6, 0, NOTE_G6, NOTE_E7, NOTE_G7, NOTE_A7, 0, NOTE_F7, NOTE_G7, 0, NOTE_E7, 0, NOTE_C7, NOTE_D7, NOTE_B6, 0, 0 }; //Mario main them tempo int tempo[] = { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 9, 9, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 9, 9, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, }; //Underworld melody int underworld_melody[] = { NOTE_C4, NOTE_C5, NOTE_A3, NOTE_A4, NOTE_AS3, NOTE_AS4, 0, 0, NOTE_C4, NOTE_C5, NOTE_A3, NOTE_A4, NOTE_AS3, NOTE_AS4, 0, 0, NOTE_F3, NOTE_F4, NOTE_D3, NOTE_D4, NOTE_DS3, NOTE_DS4, 0, 0, NOTE_F3, NOTE_F4, NOTE_D3, NOTE_D4, NOTE_DS3, NOTE_DS4, 0, 0, NOTE_DS4, NOTE_CS4, NOTE_D4, NOTE_CS4, NOTE_DS4, NOTE_DS4, NOTE_GS3, NOTE_G3, NOTE_CS4, NOTE_C4, NOTE_FS4, NOTE_F4, NOTE_E3, NOTE_AS4, NOTE_A4, NOTE_GS4, NOTE_DS4, NOTE_B3, NOTE_AS3, NOTE_A3, NOTE_GS3, 0, 0, 0 }; //Underwolrd tempo int underworld_tempo[] = { 12, 12, 12, 12, 12, 12, 6, 3, 12, 12, 12, 12, 12, 12, 6, 3, 12, 12, 12, 12, 12, 12, 6, 3, 12, 12, 12, 12, 12, 12, 6, 6, 18, 18, 18, 6, 6, 6, 6, 6, 6, 18, 18, 18, 18, 18, 18, 10, 10, 10, 10, 10, 10, 3, 3, 3 }; void setup(void) { pinMode(3, OUTPUT);//buzzer pinMode(13, OUTPUT);//led indicator when singing a note } void loop() { //sing the tunes sing(1); sing(1); sing(2); } int song = 0; void sing(int s) { // iterate over the notes of the melody: song = s; if (song == 2) { Serial.println(\" 'Underworld Theme'\"); int size = sizeof(underworld_melody) / sizeof(int); for (int thisNote = 0; thisNote < size; thisNote++) { // to calculate the note duration, take one second // divided by the note type. //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc. int noteDuration = 1000 / underworld_tempo[thisNote]; buzz(melodyPin, underworld_melody[thisNote], noteDuration); // to distinguish the notes, set a minimum time between them. // the note's duration + 30% seems to work well: int pauseBetweenNotes = noteDuration * 1.30; delay(pauseBetweenNotes); // stop the tone playing: buzz(melodyPin, 0, noteDuration); } } else { Serial.println(\" 'Mario Theme'\"); int size = sizeof(melody) / sizeof(int); for (int thisNote = 0; thisNote < size; thisNote++) { // to calculate the note duration, take one second // divided by the note type. //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc. int noteDuration = 1000 / tempo[thisNote]; buzz(melodyPin, melody[thisNote], noteDuration); // to distinguish the notes, set a minimum time between them. // the note's duration + 30% seems to work well: int pauseBetweenNotes = noteDuration * 1.30; delay(pauseBetweenNotes); // stop the tone playing: buzz(melodyPin, 0, noteDuration); } } } void buzz(int targetPin, long frequency, long length) { digitalWrite(13, HIGH); long delayValue = 1000000 / frequency / 2; // calculate the delay value between transitions //// 1 second's worth of microseconds, divided by the frequency, then split in half since //// there are two phases to each cycle long numCycles = frequency * length / 1000; // calculate the number of cycles for proper timing //// multiply frequency, which is really cycles per second, by the number of seconds to //// get the total number of cycles to produce for (long i = 0; i < numCycles; i++) { // for the calculated length of time... digitalWrite(targetPin, HIGH); // write the buzzer pin high to push out the diaphram delayMicroseconds(delayValue); // wait for the calculated delay value digitalWrite(targetPin, LOW); // write the buzzer pin low to pull back the diaphram delayMicroseconds(delayValue); // wait again or the calculated delay value } digitalWrite(13, LOW); } Source: Arduino.cc 2N2222 Transistor \u00b6 I\u2019ve used the 2N2222 which is a multipurpose NPN transistor for low power amplification. For testing I\u2019ve used the T0-92 form In my SMD circuit the SOT-23 form. Datasheets: P2N2222A MMBT2N2222A I\u2019ve used this on my speaker circuit for amplification. Voltage divider \u00b6 from Sparkfun\u2019s tutorial\u2019s page https://learn.sparkfun.com/tutorials/voltage-dividers/all \u201cA voltage divider is a simple circuit which turns a large voltage into a smaller one. Using just two series resistors and an input voltage, we can create an output voltage that is a fraction of the input. Voltage dividers are one of the most fundamental circuits in electronics. If learning Ohm\u2019s law was like being introduced to the ABC\u2019s, learning about voltage dividers would be like learning how to spell cat.\u201d Why do I need this? The RFID board that I\u2019m using for my project uses 5 to 9 Volts for power source, while my projects micro-controller with the SAMD11E17 needs only 3.3 Volts. It means that to use this board with the UART Serial Communication Protocol, I need to connect the PIN_31 (RX) of my micro-controller to the TX pin of the RFID board. So I need to convert from 5 to 3.3 Volts using a Voltage divider . My current voltage divider configuration works using a 2k Ohms and 1 k Ohms resistors in a configuration like this. Formula: PWM \u00b6 Reference from https://learn.sparkfun.com/tutorials/pulse-width-modulation/all PWM stands for Pulse-Width-Modulation and it\u2019s a way to process output signals to use it for digital control. It is used for processes like dimming for RGB LED control, and current/ voltage for speed motor control. One important thing to know and remember its the \u201cDuty Cycle\u201d, it depends in the percentage of time that a signal is High or LOW in a period of time. For a 5 Volts circuit, if I use 0.1 seconds (10 Hz) for \u201cPeriod of time\u201d and the output is 5 Volts for every 0.05 seconds my duty cycle will be equal to 50%. If the output is High for 0.025 seconds the Duty Cycle will be 25%. And if its High for 0.06 seconds the Duty Cycle will be 60%. Sound and tones \u00b6 The tone() function in the arduino library generates a square wave of the specified frequency (and 50% duty cycle) on a pin. A duration can be specified, otherwise the wave continues until a call to noTone(). The pin can be connected to a piezo buzzer or other speaker to play tones. Only one tone can be generated at a time. If a tone is already playing on a different pin, the call to tone() will have no effect. If the tone is playing on the same pin, the call will set its frequency. I\u2019ve used this to produce a note C8 with the speaker. See the value 4186 in the tone() function. Pull-up resistors \u00b6 A pull-up resistor is an circuit arrangement to solve floating input signals. The Pin is connected to the Voltage source in this case 3.3 Volts. And it\u2019s used for the i2c SDA and SCL inputs. Without this pull resistors the i2c communication doesn\u2019t work. Source Sparkfun tutorials i2c protocol \u00b6 i2c is a protocol that improves features from UART and SPI, its useful is you want to connect multiple devices using only 2 wires. An important remark is that every device that uses i2c has an hexadecimal \u201caddress\u201d in this case I\u2019m using 0x27 and I\u2019ve find this in the LCD i2c documentation. SAMD11C14 MUX table \u00b6 Under the Arduino IDE we can select the number and types of com protocols to be used in our program and bootloader. To understand this more in detail I had to check the MUX table in the ATSAMD11 documentation . Programming process \u00b6 I\u2019ve used Arduino and the generic bootloader for SAMD11C14 microcontrollers provided by Mattairtech. To flash the bootloader I\u2019ve used the same procees covered on my week09 embeded programming assignment . To flash my board I\u2019ve selected this options: Speaker \u00b6 For this I\u2019ve used as inspiration the access door of Agrilab the access door works by RFID when the ID is scanned it gives feedback by blinking a Green light and producing the following sound shown in the Test section. I\u2019ll like to use the tone library to make a beep sound after scanning an RFID tag. Test \u00b6 Circuit \u00b6 This is the circuit I\u2019ve designed to drive a 2 Watts speaker using my SAMD11C14 board from week11, since the voltage output and current of the SAMD11C14 its limited to 1.63 to 3.63 Volts depending on power operation input on my case is 3.3 Volts to amplify the sound out of the speaker I\u2019ve used a 2N2222 general purpose transistor . I\u2019m amplifying current and voltage since the Positive Pin to the speaker its connected to 5V and the micro-controller runs at 3.3 V. The pin PA_05 of my SAMD11C14 board is connected to the BASE Pin of the 2N2222 transistor. The Collector pin is connected to the GROUND of the power source and the Emitter to the GROUND pad of the speaker . BOM: Component ID form factor General purpose transistor 2N2222 Q1 SOT23 Generic 2W speaker LS1 * Code \u00b6 This code works by repeating every second the function beep() . The function beep() works by producing a tone with value 4186 equivalent to the musical note C8 on the pin PA_05 of my SAMD11C14 board with a duration of 85.5 milliseconds. //This code produces a \"beep\" every one second. // Pin 5 is the output // It uses the tone function that produces a square signal with a duty cycle depending in the frequency of the tone. // Autor: Antonio de Jesus Anaya Hernandez // FabAcademy 2021 // Lab: Agrilab // Country: France void setup() { } void loop() { delay(1000); beep(); } //This function produces a \"beep\" using Tone function in pin 5. void beep(){ tone(5, 4186, 85.5); delay(85.5); tone(5, 4186, 85.5); delay(85.5); noTone(5); } Demo \u00b6 This is the final result. LCD Display \u00b6 To show information processed by my SAMD11C14 microcontroller I\u2019ve used a generic 24 x 4 display that I\u2019ve found in Agrilab\u2019s Electrolad inventory . Specifications: 20 x 4 Display area symbols. Interfaced by i2c with the PCF8574T microcontroller. Symbol size 2.96 * 4.75 mm. Blue backlight. White text color. In the future I\u2019ll use the display to show the information of the Scanned RFID animals tags scanned by my device. Circuit \u00b6 The i2c communication protocol of the display, uses SDA and SCL pins. This circuit integrates pull-up resistors on pins SDA (PA_14) and SCL PA_15 to avoid floating point noise . This noise interferes with the digital information and makes the screen unusable. I\u2019ve realized the need for pull-up resistors after connecting the display directly to the SDA and SCL pins of my board and findout the display not working. After debugging I\u2019ve googled possible cause of the issue and found the answer at Sparkfuns i2c tutorial . I\u2019ve covered the information about pull-up resistors here . Code \u00b6 I\u2019ve found a code example for i2c displays here . Every i2c device has a particular address I\u2019ve found the address in the package of the LCD display 0x27 . This code works by first including the Wire library . This is the library at arduino library manager: Pick the second option for PCF8574 microcontrollers Then calling the LiquidCrystal_I2C library, that\u2019s included in the download, using 20x4 as size and the address 0x27. In the Setup the Wire protocol its initilized, the lcd its initialized, the cursor in the screen its set to the coordinates (1,1) it means the first square of the top left cell, and finalizes by printing Hello on one cell per letter starting from (1,1) . In the Loop the lcd turns on the backlight, sets the cursor at the cell (1,2) , prints \u201cWorld\u201d for one second, turns off the backlight for one second and repeats the process. I\u2019ve used this as a blinking example. //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code makes the i2c display blink its backlight for 1 second and writes \"hello\" during setup and \"world\" during loop. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(); //setup lcd and write hello lcd.init(); lcd.setCursor(1,1); lcd.print(\"Hello\"); } void loop() { lcd.backlight(); lcd.setCursor(1,2); lcd.print(\"world\"); delay(1000); lcd.noBacklight(); delay(1000); } Demo \u00b6 Input + output \u00b6 Parts list Resistor 1 1K Resistor 1 2K 2N2222 1 SOT-32 1x04 connector 2 1x03 connector 1 RFID WL-134KHz Datasheet Circuit \u00b6 Code \u00b6 //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // Pin 31 for Serial communication at 9600 bauds // Pin 5 for tone speaker output // 5 Volts for RFID Tag reader board // 3.3 Volts for Speaker and LCD display. // Communcation protocols: i2c for display and Serial at \"Serial1 interface\" for RFID tag reader. // This code makes the i2c display blink its backlight for 1 second and writes \"hello\" during setup and \"world\" during loop. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); char rfid_tag [30]; void setup() { Wire.begin(); Serial1.begin(9600); lcd.init(); lcd.backlight(); } void loop() { int id = Serial1.read(); if (id == 2){ beep(); rfid_tag[0] = id; for (int c = 1; c < 30; c++){ int bit_ = Serial1.read(); rfid_tag[c] = bit_; } } lcd.setCursor(0,0); lcd.print(rfid_tag); } void beep(){ tone(5, 4186, 85.5); delay(85.5); noTone(5); } Demo \u00b6 This is the messy setup of my input+output first attempt. I integrates this elements: Speaker RFID 134KHz LCD Display Board \u00b6 I\u2019ve made this board to replace the wiring of my circuit, although during the weekend I\u2019ve broke one of the 1x04 connectors. learning outcomes \u00b6 During this week I\u2019ve learned about the importance of output devices for interaction between humans and electronic devices. The sound produced by Issues \u00b6 I\u2019ll change the design of my board on the: Connectors Transistor type Files \u00b6 Code: Speaker code Display code RFID, Speaker and Display code Circuits: Kicad files Use this ZIP version Milling Roland SRM-20: Traces Outline","title":"13. Output Devices"},{"location":"assignments/week13/#13-output-devices","text":"","title":"13. Output Devices"},{"location":"assignments/week13/#introduction","text":"This week I\u2019ve started to use output devices that are part of my device for the final project. For this week I\u2019ve used my board from week11, input devices based on the ATSAMD11 micro-controller. A Speaker to make a sound after a RFID successful read. A LCD display to show information relative to the milk production. Then to make this possible I\u2019ve listed here different components and concepts that were useful for me during this week work. Possible thing to use for this week work: Relay Speaker LCD i2c display TFT display OLED i2c display Also I\u2019ve contributed to this weeks Group assignment by checking the power consumption of a display and a speaker.","title":"Introduction"},{"location":"assignments/week13/#concepts-ive-explored-during-this-week","text":"","title":"Concepts I've explored during this week"},{"location":"assignments/week13/#tone-library-for-arduino","text":"/* Arduino Mario Bros Tunes With Piezo Buzzer and PWM Connect the positive side of the Buzzer to pin 3, then the negative side to a 1k ohm resistor. Connect the other side of the 1 k ohm resistor to ground(GND) pin on the Arduino. by: Dipto Pratyaksa last updated: 31/3/13 */ /************************************************* * Public Constants *************************************************/ #define NOTE_B0 31 #define NOTE_C1 33 #define NOTE_CS1 35 #define NOTE_D1 37 #define NOTE_DS1 39 #define NOTE_E1 41 #define NOTE_F1 44 #define NOTE_FS1 46 #define NOTE_G1 49 #define NOTE_GS1 52 #define NOTE_A1 55 #define NOTE_AS1 58 #define NOTE_B1 62 #define NOTE_C2 65 #define NOTE_CS2 69 #define NOTE_D2 73 #define NOTE_DS2 78 #define NOTE_E2 82 #define NOTE_F2 87 #define NOTE_FS2 93 #define NOTE_G2 98 #define NOTE_GS2 104 #define NOTE_A2 110 #define NOTE_AS2 117 #define NOTE_B2 123 #define NOTE_C3 131 #define NOTE_CS3 139 #define NOTE_D3 147 #define NOTE_DS3 156 #define NOTE_E3 165 #define NOTE_F3 175 #define NOTE_FS3 185 #define NOTE_G3 196 #define NOTE_GS3 208 #define NOTE_A3 220 #define NOTE_AS3 233 #define NOTE_B3 247 #define NOTE_C4 262 #define NOTE_CS4 277 #define NOTE_D4 294 #define NOTE_DS4 311 #define NOTE_E4 330 #define NOTE_F4 349 #define NOTE_FS4 370 #define NOTE_G4 392 #define NOTE_GS4 415 #define NOTE_A4 440 #define NOTE_AS4 466 #define NOTE_B4 494 #define NOTE_C5 523 #define NOTE_CS5 554 #define NOTE_D5 587 #define NOTE_DS5 622 #define NOTE_E5 659 #define NOTE_F5 698 #define NOTE_FS5 740 #define NOTE_G5 784 #define NOTE_GS5 831 #define NOTE_A5 880 #define NOTE_AS5 932 #define NOTE_B5 988 #define NOTE_C6 1047 #define NOTE_CS6 1109 #define NOTE_D6 1175 #define NOTE_DS6 1245 #define NOTE_E6 1319 #define NOTE_F6 1397 #define NOTE_FS6 1480 #define NOTE_G6 1568 #define NOTE_GS6 1661 #define NOTE_A6 1760 #define NOTE_AS6 1865 #define NOTE_B6 1976 #define NOTE_C7 2093 #define NOTE_CS7 2217 #define NOTE_D7 2349 #define NOTE_DS7 2489 #define NOTE_E7 2637 #define NOTE_F7 2794 #define NOTE_FS7 2960 #define NOTE_G7 3136 #define NOTE_GS7 3322 #define NOTE_A7 3520 #define NOTE_AS7 3729 #define NOTE_B7 3951 #define NOTE_C8 4186 #define NOTE_CS8 4435 #define NOTE_D8 4699 #define NOTE_DS8 4978 #define melodyPin 3 //Mario main theme melody int melody[] = { NOTE_E7, NOTE_E7, 0, NOTE_E7, 0, NOTE_C7, NOTE_E7, 0, NOTE_G7, 0, 0, 0, NOTE_G6, 0, 0, 0, NOTE_C7, 0, 0, NOTE_G6, 0, 0, NOTE_E6, 0, 0, NOTE_A6, 0, NOTE_B6, 0, NOTE_AS6, NOTE_A6, 0, NOTE_G6, NOTE_E7, NOTE_G7, NOTE_A7, 0, NOTE_F7, NOTE_G7, 0, NOTE_E7, 0, NOTE_C7, NOTE_D7, NOTE_B6, 0, 0, NOTE_C7, 0, 0, NOTE_G6, 0, 0, NOTE_E6, 0, 0, NOTE_A6, 0, NOTE_B6, 0, NOTE_AS6, NOTE_A6, 0, NOTE_G6, NOTE_E7, NOTE_G7, NOTE_A7, 0, NOTE_F7, NOTE_G7, 0, NOTE_E7, 0, NOTE_C7, NOTE_D7, NOTE_B6, 0, 0 }; //Mario main them tempo int tempo[] = { 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 9, 9, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 9, 9, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, }; //Underworld melody int underworld_melody[] = { NOTE_C4, NOTE_C5, NOTE_A3, NOTE_A4, NOTE_AS3, NOTE_AS4, 0, 0, NOTE_C4, NOTE_C5, NOTE_A3, NOTE_A4, NOTE_AS3, NOTE_AS4, 0, 0, NOTE_F3, NOTE_F4, NOTE_D3, NOTE_D4, NOTE_DS3, NOTE_DS4, 0, 0, NOTE_F3, NOTE_F4, NOTE_D3, NOTE_D4, NOTE_DS3, NOTE_DS4, 0, 0, NOTE_DS4, NOTE_CS4, NOTE_D4, NOTE_CS4, NOTE_DS4, NOTE_DS4, NOTE_GS3, NOTE_G3, NOTE_CS4, NOTE_C4, NOTE_FS4, NOTE_F4, NOTE_E3, NOTE_AS4, NOTE_A4, NOTE_GS4, NOTE_DS4, NOTE_B3, NOTE_AS3, NOTE_A3, NOTE_GS3, 0, 0, 0 }; //Underwolrd tempo int underworld_tempo[] = { 12, 12, 12, 12, 12, 12, 6, 3, 12, 12, 12, 12, 12, 12, 6, 3, 12, 12, 12, 12, 12, 12, 6, 3, 12, 12, 12, 12, 12, 12, 6, 6, 18, 18, 18, 6, 6, 6, 6, 6, 6, 18, 18, 18, 18, 18, 18, 10, 10, 10, 10, 10, 10, 3, 3, 3 }; void setup(void) { pinMode(3, OUTPUT);//buzzer pinMode(13, OUTPUT);//led indicator when singing a note } void loop() { //sing the tunes sing(1); sing(1); sing(2); } int song = 0; void sing(int s) { // iterate over the notes of the melody: song = s; if (song == 2) { Serial.println(\" 'Underworld Theme'\"); int size = sizeof(underworld_melody) / sizeof(int); for (int thisNote = 0; thisNote < size; thisNote++) { // to calculate the note duration, take one second // divided by the note type. //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc. int noteDuration = 1000 / underworld_tempo[thisNote]; buzz(melodyPin, underworld_melody[thisNote], noteDuration); // to distinguish the notes, set a minimum time between them. // the note's duration + 30% seems to work well: int pauseBetweenNotes = noteDuration * 1.30; delay(pauseBetweenNotes); // stop the tone playing: buzz(melodyPin, 0, noteDuration); } } else { Serial.println(\" 'Mario Theme'\"); int size = sizeof(melody) / sizeof(int); for (int thisNote = 0; thisNote < size; thisNote++) { // to calculate the note duration, take one second // divided by the note type. //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc. int noteDuration = 1000 / tempo[thisNote]; buzz(melodyPin, melody[thisNote], noteDuration); // to distinguish the notes, set a minimum time between them. // the note's duration + 30% seems to work well: int pauseBetweenNotes = noteDuration * 1.30; delay(pauseBetweenNotes); // stop the tone playing: buzz(melodyPin, 0, noteDuration); } } } void buzz(int targetPin, long frequency, long length) { digitalWrite(13, HIGH); long delayValue = 1000000 / frequency / 2; // calculate the delay value between transitions //// 1 second's worth of microseconds, divided by the frequency, then split in half since //// there are two phases to each cycle long numCycles = frequency * length / 1000; // calculate the number of cycles for proper timing //// multiply frequency, which is really cycles per second, by the number of seconds to //// get the total number of cycles to produce for (long i = 0; i < numCycles; i++) { // for the calculated length of time... digitalWrite(targetPin, HIGH); // write the buzzer pin high to push out the diaphram delayMicroseconds(delayValue); // wait for the calculated delay value digitalWrite(targetPin, LOW); // write the buzzer pin low to pull back the diaphram delayMicroseconds(delayValue); // wait again or the calculated delay value } digitalWrite(13, LOW); } Source: Arduino.cc","title":"Tone library for arduino"},{"location":"assignments/week13/#2n2222-transistor","text":"I\u2019ve used the 2N2222 which is a multipurpose NPN transistor for low power amplification. For testing I\u2019ve used the T0-92 form In my SMD circuit the SOT-23 form. Datasheets: P2N2222A MMBT2N2222A I\u2019ve used this on my speaker circuit for amplification.","title":"2N2222 Transistor"},{"location":"assignments/week13/#voltage-divider","text":"from Sparkfun\u2019s tutorial\u2019s page https://learn.sparkfun.com/tutorials/voltage-dividers/all \u201cA voltage divider is a simple circuit which turns a large voltage into a smaller one. Using just two series resistors and an input voltage, we can create an output voltage that is a fraction of the input. Voltage dividers are one of the most fundamental circuits in electronics. If learning Ohm\u2019s law was like being introduced to the ABC\u2019s, learning about voltage dividers would be like learning how to spell cat.\u201d Why do I need this? The RFID board that I\u2019m using for my project uses 5 to 9 Volts for power source, while my projects micro-controller with the SAMD11E17 needs only 3.3 Volts. It means that to use this board with the UART Serial Communication Protocol, I need to connect the PIN_31 (RX) of my micro-controller to the TX pin of the RFID board. So I need to convert from 5 to 3.3 Volts using a Voltage divider . My current voltage divider configuration works using a 2k Ohms and 1 k Ohms resistors in a configuration like this. Formula:","title":"Voltage divider"},{"location":"assignments/week13/#pwm","text":"Reference from https://learn.sparkfun.com/tutorials/pulse-width-modulation/all PWM stands for Pulse-Width-Modulation and it\u2019s a way to process output signals to use it for digital control. It is used for processes like dimming for RGB LED control, and current/ voltage for speed motor control. One important thing to know and remember its the \u201cDuty Cycle\u201d, it depends in the percentage of time that a signal is High or LOW in a period of time. For a 5 Volts circuit, if I use 0.1 seconds (10 Hz) for \u201cPeriod of time\u201d and the output is 5 Volts for every 0.05 seconds my duty cycle will be equal to 50%. If the output is High for 0.025 seconds the Duty Cycle will be 25%. And if its High for 0.06 seconds the Duty Cycle will be 60%.","title":"PWM"},{"location":"assignments/week13/#sound-and-tones","text":"The tone() function in the arduino library generates a square wave of the specified frequency (and 50% duty cycle) on a pin. A duration can be specified, otherwise the wave continues until a call to noTone(). The pin can be connected to a piezo buzzer or other speaker to play tones. Only one tone can be generated at a time. If a tone is already playing on a different pin, the call to tone() will have no effect. If the tone is playing on the same pin, the call will set its frequency. I\u2019ve used this to produce a note C8 with the speaker. See the value 4186 in the tone() function.","title":"Sound and tones"},{"location":"assignments/week13/#pull-up-resistors","text":"A pull-up resistor is an circuit arrangement to solve floating input signals. The Pin is connected to the Voltage source in this case 3.3 Volts. And it\u2019s used for the i2c SDA and SCL inputs. Without this pull resistors the i2c communication doesn\u2019t work. Source Sparkfun tutorials","title":"Pull-up resistors"},{"location":"assignments/week13/#i2c-protocol","text":"i2c is a protocol that improves features from UART and SPI, its useful is you want to connect multiple devices using only 2 wires. An important remark is that every device that uses i2c has an hexadecimal \u201caddress\u201d in this case I\u2019m using 0x27 and I\u2019ve find this in the LCD i2c documentation.","title":"i2c protocol"},{"location":"assignments/week13/#samd11c14-mux-table","text":"Under the Arduino IDE we can select the number and types of com protocols to be used in our program and bootloader. To understand this more in detail I had to check the MUX table in the ATSAMD11 documentation .","title":"SAMD11C14 MUX table"},{"location":"assignments/week13/#programming-process","text":"I\u2019ve used Arduino and the generic bootloader for SAMD11C14 microcontrollers provided by Mattairtech. To flash the bootloader I\u2019ve used the same procees covered on my week09 embeded programming assignment . To flash my board I\u2019ve selected this options:","title":"Programming process"},{"location":"assignments/week13/#speaker","text":"For this I\u2019ve used as inspiration the access door of Agrilab the access door works by RFID when the ID is scanned it gives feedback by blinking a Green light and producing the following sound shown in the Test section. I\u2019ll like to use the tone library to make a beep sound after scanning an RFID tag.","title":"Speaker"},{"location":"assignments/week13/#test","text":"","title":"Test"},{"location":"assignments/week13/#circuit","text":"This is the circuit I\u2019ve designed to drive a 2 Watts speaker using my SAMD11C14 board from week11, since the voltage output and current of the SAMD11C14 its limited to 1.63 to 3.63 Volts depending on power operation input on my case is 3.3 Volts to amplify the sound out of the speaker I\u2019ve used a 2N2222 general purpose transistor . I\u2019m amplifying current and voltage since the Positive Pin to the speaker its connected to 5V and the micro-controller runs at 3.3 V. The pin PA_05 of my SAMD11C14 board is connected to the BASE Pin of the 2N2222 transistor. The Collector pin is connected to the GROUND of the power source and the Emitter to the GROUND pad of the speaker . BOM: Component ID form factor General purpose transistor 2N2222 Q1 SOT23 Generic 2W speaker LS1 *","title":"Circuit"},{"location":"assignments/week13/#code","text":"This code works by repeating every second the function beep() . The function beep() works by producing a tone with value 4186 equivalent to the musical note C8 on the pin PA_05 of my SAMD11C14 board with a duration of 85.5 milliseconds. //This code produces a \"beep\" every one second. // Pin 5 is the output // It uses the tone function that produces a square signal with a duty cycle depending in the frequency of the tone. // Autor: Antonio de Jesus Anaya Hernandez // FabAcademy 2021 // Lab: Agrilab // Country: France void setup() { } void loop() { delay(1000); beep(); } //This function produces a \"beep\" using Tone function in pin 5. void beep(){ tone(5, 4186, 85.5); delay(85.5); tone(5, 4186, 85.5); delay(85.5); noTone(5); }","title":"Code"},{"location":"assignments/week13/#demo","text":"This is the final result.","title":"Demo"},{"location":"assignments/week13/#lcd-display","text":"To show information processed by my SAMD11C14 microcontroller I\u2019ve used a generic 24 x 4 display that I\u2019ve found in Agrilab\u2019s Electrolad inventory . Specifications: 20 x 4 Display area symbols. Interfaced by i2c with the PCF8574T microcontroller. Symbol size 2.96 * 4.75 mm. Blue backlight. White text color. In the future I\u2019ll use the display to show the information of the Scanned RFID animals tags scanned by my device.","title":"LCD Display"},{"location":"assignments/week13/#circuit_1","text":"The i2c communication protocol of the display, uses SDA and SCL pins. This circuit integrates pull-up resistors on pins SDA (PA_14) and SCL PA_15 to avoid floating point noise . This noise interferes with the digital information and makes the screen unusable. I\u2019ve realized the need for pull-up resistors after connecting the display directly to the SDA and SCL pins of my board and findout the display not working. After debugging I\u2019ve googled possible cause of the issue and found the answer at Sparkfuns i2c tutorial . I\u2019ve covered the information about pull-up resistors here .","title":"Circuit"},{"location":"assignments/week13/#code_1","text":"I\u2019ve found a code example for i2c displays here . Every i2c device has a particular address I\u2019ve found the address in the package of the LCD display 0x27 . This code works by first including the Wire library . This is the library at arduino library manager: Pick the second option for PCF8574 microcontrollers Then calling the LiquidCrystal_I2C library, that\u2019s included in the download, using 20x4 as size and the address 0x27. In the Setup the Wire protocol its initilized, the lcd its initialized, the cursor in the screen its set to the coordinates (1,1) it means the first square of the top left cell, and finalizes by printing Hello on one cell per letter starting from (1,1) . In the Loop the lcd turns on the backlight, sets the cursor at the cell (1,2) , prints \u201cWorld\u201d for one second, turns off the backlight for one second and repeats the process. I\u2019ve used this as a blinking example. //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code makes the i2c display blink its backlight for 1 second and writes \"hello\" during setup and \"world\" during loop. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(); //setup lcd and write hello lcd.init(); lcd.setCursor(1,1); lcd.print(\"Hello\"); } void loop() { lcd.backlight(); lcd.setCursor(1,2); lcd.print(\"world\"); delay(1000); lcd.noBacklight(); delay(1000); }","title":"Code"},{"location":"assignments/week13/#demo_1","text":"","title":"Demo"},{"location":"assignments/week13/#input-output","text":"Parts list Resistor 1 1K Resistor 1 2K 2N2222 1 SOT-32 1x04 connector 2 1x03 connector 1 RFID WL-134KHz Datasheet","title":"Input + output"},{"location":"assignments/week13/#circuit_2","text":"","title":"Circuit"},{"location":"assignments/week13/#code_2","text":"//This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // Pin 31 for Serial communication at 9600 bauds // Pin 5 for tone speaker output // 5 Volts for RFID Tag reader board // 3.3 Volts for Speaker and LCD display. // Communcation protocols: i2c for display and Serial at \"Serial1 interface\" for RFID tag reader. // This code makes the i2c display blink its backlight for 1 second and writes \"hello\" during setup and \"world\" during loop. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); char rfid_tag [30]; void setup() { Wire.begin(); Serial1.begin(9600); lcd.init(); lcd.backlight(); } void loop() { int id = Serial1.read(); if (id == 2){ beep(); rfid_tag[0] = id; for (int c = 1; c < 30; c++){ int bit_ = Serial1.read(); rfid_tag[c] = bit_; } } lcd.setCursor(0,0); lcd.print(rfid_tag); } void beep(){ tone(5, 4186, 85.5); delay(85.5); noTone(5); }","title":"Code"},{"location":"assignments/week13/#demo_2","text":"This is the messy setup of my input+output first attempt. I integrates this elements: Speaker RFID 134KHz LCD Display","title":"Demo"},{"location":"assignments/week13/#board","text":"I\u2019ve made this board to replace the wiring of my circuit, although during the weekend I\u2019ve broke one of the 1x04 connectors.","title":"Board"},{"location":"assignments/week13/#learning-outcomes","text":"During this week I\u2019ve learned about the importance of output devices for interaction between humans and electronic devices. The sound produced by","title":"learning outcomes"},{"location":"assignments/week13/#issues","text":"I\u2019ll change the design of my board on the: Connectors Transistor type","title":"Issues"},{"location":"assignments/week13/#files","text":"Code: Speaker code Display code RFID, Speaker and Display code Circuits: Kicad files Use this ZIP version Milling Roland SRM-20: Traces Outline","title":"Files"},{"location":"assignments/week14/","text":"14. Networking and communications \u00b6 Introduction \u00b6 For this week I\u2019ve started to learn about: LORA and LORAWAN: Microchip, LORA ExpLoRer board. Arduino SODAQ firmware libraries. thethingsnetwork.org AM stands for Amplitude modulation. FM stands for Frequency modulation. More immune to noise than AM. LORA modulation: Payload. Encoding. Counter element Decoding, on thethingsnetwork app. 868 MHz Band for Europe. 902-927 Band for US and Mexico. Spread Factor. SF7 it\u2019s it\u2019s for energy efficient, SF12 it\u2019s for decoding easiness. Chirp. Byte broadcast. Duty cycle for thethingsnetwork. max 30 seconds every 24 hrs. band shifting. Power consumption: 1 dBm = 1mW. dB it\u2019s and scale not an unit. My instructor Luc Hanneuse explained LORA, LORAWAN and thethingsnetwork.org to me on Thursday morning. For the group assignment I have asked Theo to use i2c protocol to communicate our boards. Issues with LORA, thethingsnetwork. \u00b6 So far I\u2019ve made and account on thethingsnetwork.org, and sadly on the last week a bug made it impossible to access to the network in agrilab\u2019s node. Also I\u2019ve tried to use the arduino resources following Luc\u2019s tutorial but the references don\u2019t work so far. I\u2019ll try this again on Tuesday. Using SODAQ Explorer LORA development board. \u00b6 Following this tutorial Important info from SODAQ/orange documentation: Link SerialUSB for debugSerial Serial1 for Bluetooth Serial for pins D0/RX and D1/TX Serial2 for loraSerial TTN_FP_EU868 for freqPlan appEui: Provided by thethingsnetwork appKey: Provided by thethingsnetwork I\u2019ve created an account on thethingsnetwork Then added a new application This form gives applications a After finishing the app creation I\u2019ve added a new device For this I\u2019ve used the the things network library on Arduino Here there\u2019s the process to add the library from the Arduino Library manager. Here there\u2019s the boards manager to add SODAQ SAMD boards. Here this sketch shows the device EUI. This sketch in the examples apart, its a simple test to send \u201c00\u201d to the thethingsnetwork app. We need to add appEUI and appKey, I\u2019ve find this data in the thethingsnetwork console. Selecting the SODAQ ExpLoRer board. New device added. Device information. Data sent. Results \u00b6 Location Data Response on serialdebug Testing The SODAQ ExpLoRer board, it\u2019s an easy to setup and start hardware, once I\u2019ve understand the process It went extremely quick with the Arduino IDE. I\u2019ll like to use LORA and the thethingsnetwork for my communications of my final project. Circuit design for week14 \u00b6 For this weeks assignment I\u2019ve worked on a circuit integrating an improved hall effect sensor circuit alongside a DAC output that I\u2019ll use for my final project Dielectric Spectroscopy sensor. The original plan was to make two of this boards and communicate with i2c protocol. I\u2019ve also the next objectives: Use different connectors for USB and JTAG. Use a 3.3 and 5 Volts i2c connectors. Keep using the SAMD11C14 micro controller. Make an SAMD21 based board for central processing of data. This are the Characteristics for my SAMD11C14 board. Connectors: 1x05 connector for JTAG programming. 1x04 connector for 12c 3.3 Volts communication. 1x04 connector for 12c 5 Volts communication. 1x04 connector for USB communication. 1x05 connector for PIN_05, PIN_08 and PIN_09. Power: 3.3 Volts linear regulator. 5 Volts from USB. Outputs: LED output at PA_05. DAC output with AD8605 Operational amplifier at PA_02. Micro-controller: SAMD11C14 microcontroller with power input noise filter. SDA and SCL pull ups at PA_14 and PA_15. Reset button. Sensors: HALL effect sensor with power input filter arrangement. Differential amplification with AD8605 for HALL effect output. List of components used: I\u2019ve made this table by: Exporting a BOM from Kicad Generate Bill of materials in the tools menu Importing the txt BOM file in this csv to markdown converter page Reference Value Datasheet U5 ATSAMD11C14A-SS J4 Conn_01x04_Female ~ J3 Conn_01x04_Female ~ SW1 BUTTON_B3SN https://omronfs.omron.com/en_US/ecb/products/pdf/en-b3sn.pdf R2 10K ~ C7 1uF R8 10K ~ C3 1uF J1 Conn_01x05_Female ~ U3 Sensor_Hall-Effect_Analog_A1324LLHLT-T https://www.allegromicro.com/~/media/Files/Datasheets/A1324-5-6-Datasheet.ashx C5 0.1 uF J5 Conn_01x04_Female ~ C2 0.1uF C1 10uF D1 LED https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf R7 100 ~ C6 0.1uF C10 0.1uF J2 Conn_01x02 ~ C8 0.1uF C9 0.1uF U4 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R3 10K ~ R5 1K ~ R6 10K ~ R4 1K ~ U2 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R1 10K ~ C4 10pF J6 Conn_01x05_Female ~ R11 0 ~ U1 Regulator_Linear_LM3480-3.3V-100mA https://www.ti.com/lit/ds/symlink/lm3480.pdf R10 10k ~ R9 10k ~ Differential amplifier \u00b6 Differential amplifier is a type of electronic amplifier that amplifies the difference between two input voltages but suppresses any voltage common to the two inputs. I need a this electronic component for the Hall effect sensor, to amplify the signal output because the signal it\u2019s just 100 mV and can by difficult to filter, instead of measuring the 100 mV I\u2019ll use the differential amplifier to measure 5 - 0.001 = 4.999 Volts pulses which are notably easy to detect. From week11 input devices work Using Arduino\u2019s serial plotter I\u2019ve found the sensor sends a lot of noise, and I\u2019ve learn that\u2019s normal because of the materials of the board. This is the signal response when an magnet passes 3 times over the sensor at 3mm distance. For this I\u2019ve consulted the references shown: Overview of differential amplifiers on science direct by multiple autors DAC amplifier \u00b6 DAC stands for Digital to analog converter and it\u2019s part of my Dielectric Spectroscopy Sensor for my final project. I\u2019m going to use this to identify fat and protein proportions in milk samples. I\u2019m using DAC from the SAMD11C14, in the datasheet DAC it\u2019s on the pin PA_02. And its capable to perform at 350000 samples per second. I want to use this capability of the SAMD11C14 to produce a signal and then measure the difference by passing the signal trough a milk sample. This is in order to detect the molecular structure of the milk sample. For this I\u2019ve used the next reference: AD8605 Datasheet Noise filters \u00b6 For this I\u2019ve used the next references: ST electronics designing for noisy environments handbook Using capacitors to filter electrical noise I\u2019ve used noise filtering for: ATSAMD11C14A micro-controller. A1324 Hall effect sensor. The plan its too reduce the noise observed during in week 11. Week 11 oscilloscope After the local review my instructor Luc Hanneuse ) has helped me to understand that I\u2019m not implementing noise filters in my circuit but only parallel connected capacitors, this helps only to prevent voltage drops while operating the device. So certainly I\u2019ll have to work more on the circuits design og my project for the next steps. Conclusions \u00b6 I\u2019ve been working on this but unfortunately I didn\u2019t have the time to manufacture the board. Communications: \u00b6 In the last weeks I\u2019ve use multiple communication protocols. I\u2019ll shown this work and then the final one. SAMD11 MUX table \u00b6 Under the Arduino IDE we can select the number and types of com protocols to be used in our program and bootloader. To understand this more in detail I had to check the MUX table in the ATSAMD11 documentation . USB \u00b6 I\u2019ve made this program originally on week09 Embedded programming. Check more details here. One button scroll-down/up controller. /* This program uses Arduino and Mouse library. This program reads the board button to scroll-down and after the release of the button waits for 4 seconds to scroll up. After 4 seconds the program waits for a new button push event. IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <Mouse.h> const int BTN = 2; const int LED = 5; int timer = 0; int btn_state = 0; int idle1 = 0; int idle2 = 0; void blink() { for(int pw = 0; pw < 255; pw++){ delay(1); analogWrite(LED,pw); } analogWrite(LED,0); } void setup() { pinMode(LED, OUTPUT); pinMode(BTN, INPUT); Mouse.begin(); //Serial.begin(9600); } void loop() { analogWrite(LED,5); btn_state = digitalRead(BTN); if(btn_state == LOW){ while(btn_state == LOW){ delay(200); analogWrite(LED, 100); Mouse.move(0,0,-1); btn_state = digitalRead(BTN); } for(int clicks = 0; clicks < 10; clicks++){ delay(200); //Serial.println(\"Clicked\"); //Serial.print(clicks); if(clicks < 6){ //digitalWrite(LED, HIGH); blink(); } btn_state = digitalRead(BTN); while(btn_state == LOW && clicks < 6){ delay(200); analogWrite(LED,30); Mouse.move(0,0,1); btn_state = digitalRead(BTN); } } } delay(200); //Serial.println(\"waitting\"); } RFID and serial communication. \u00b6 /* This program reads the TX output of the RFID ISO11784 for animal Tag FDX reading board, using the Serial1 interface of the SAMD11 micro-controller. TX to RX on pin 31 Serial1 Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ void setup() { Serial.begin(9600); Serial1.begin(9600); } void loop() { char id = Serial1.read(); Serial.println(id); delay(100); } Flashing Serial output Video Serial communication: \u00b6 Sparkfun spectral sensor \u00b6 I\u2019ve been stuck on this due to the library size. I\u2019ve above 7000 bytes of the flash memory. So I\u2019ve been looking to the AS7262 datasheet So I\u2019ve learn that its possible to use i2c protocol by writing bytes to the sensor or UART by sending commands. To read the device temperature: - i2c: 0x06 bit 7:0 - UART: ATTEMP Things I\u2019ve to do to enable UART communication: Remove the solder from the Jp1 jumper Add a older to the jp2 jumper. code /* This program reads the TX output of the Sparkfun As7262 board, writes a command to blink the LED light of the sensor, the baudrate and command ATLED0=100 were found in the sensor datasheet using the Serial1 interface of the SAMD11 micro-controller. TX to RX on pins 10, 31 Serial1 Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ void setup() { // initialize serial:------------------------------- Serial.begin(115200); Serial1.begin(115200); delay(200); Serial1.write(\"ATLED0=100\"); delay(500); Serial.println(Serial.read()); } void loop() { Serial1.write(Serial.read()); Serial.println(Serial1.read()); delay(100); } i2c \u00b6 LCD Display \u00b6 Circuit I\u2019m using here pull-up resistors to solve floating point inputs in SDA and SCL pins. Code //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code makes the i2c display blink its backlight for 1 second and writes \"hello\" during setup and \"world\" during loop. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(); //setup lcd and write hello lcd.init(); lcd.setCursor(1,1); lcd.print(\"Hello\"); } void loop() { lcd.backlight(); lcd.setCursor(1,2); lcd.print(\"world\"); delay(1000); lcd.noBacklight(); delay(1000); } Demo \u00b6 Networking \u00b6 i2c bus \u00b6 Explain about communication on deep. SDA SCL Show data from the network analyzer Bytes For this I\u2019ve used: my board from week11 2 Arduinos UNO. An i2c LCD display. Description: Teacher sets the LCD display, Teacher sends x and y values to students 4 and 17, i2c addresses are 4, 17 and master address its optional, and LCD address it\u2019s 0x27. Student 4 prints x value using the LCD screen and serial communication, Student 17 prints y value using the LCD screen and serial communication. Code \u00b6 Teacher: I\u2019ve use my own board as Teacher. //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code is the teacher in the \"teacher/student\" i2c configuration. It sends messages to device 4 and 17. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France // Taken parts from Wire M/S receiver // by Nicholas Zambetti <http://www.zambetti.com> #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Serial.begin(9600); Wire.begin(); // join i2c bus (address optional for master) lcd.init(); lcd.setCursor(1,1); lcd.clear(); lcd.print(\"Students board:\"); lcd.backlight(); } byte x = 0; byte y = 255; void loop() { Wire.begin(); Wire.beginTransmission(4); // transmit to device #4 Wire.write(\"x is \"); // sends five bytes Wire.write(x); // sends one byte x++; Wire.beginTransmission(17); // transmit to device #17 Wire.write(\"y is \"); // sends five bytes Wire.write(y); // sends one byte Wire.endTransmission(); // stop transmitting y--; delay(500); } Student 4 Arduino UNO board: //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code is the teacher in the \"teacher/student\" i2c configuration. It sends messages to device 4 and 17. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France // Taken parts from Wire M/S receiver // by Nicholas Zambetti <http://www.zambetti.com> #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(4); // join i2c bus with address #4 Wire.onReceive(receiveEvent); // register event Serial.begin(9600); // start serial for output } void loop() { delay(100); } // function that executes whenever data is received from master // this function is registered as an event, see setup() void receiveEvent(int howMany) { while(1 < Wire.available()) // loop through all but the last { char c = Wire.read(); // receive byte as a character Serial.print(c); // print the character } int x = Wire.read(); // receive byte as an integer Serial.println(x); // print the integer lcd.setCursor(1,2); lcd.clear(); lcd.print(x); Student 17 Arduino UNO board: //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code is the teacher in the \"teacher/student\" i2c configuration. It sends messages to device 4 and 17. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France // Taken parts from Wire M/S receiver // by Nicholas Zambetti <http://www.zambetti.com> #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(17); // join i2c bus with address #4 Wire.onReceive(receiveEvent); // register event Serial.begin(9600); // start serial for output } void loop() { delay(100); } // function that executes whenever data is received from master // this function is registered as an event, see setup() void receiveEvent(int howMany) { while(1 < Wire.available()) // loop through all but the last { char c = Wire.read(); // receive byte as a character Serial.print(c); // print the character } int y = Wire.read(); // receive byte as an integer Serial.println(y); // print the integer lcd.setCursor(1,3); lcd.clear(); lcd.print(y); Demo \u00b6 Circuit \u00b6 Files \u00b6 Spectral_test.ino student.ino teacher.ino Arduino Mouse Scroller","title":"14. Networking and communications"},{"location":"assignments/week14/#14-networking-and-communications","text":"","title":"14. Networking and communications"},{"location":"assignments/week14/#introduction","text":"For this week I\u2019ve started to learn about: LORA and LORAWAN: Microchip, LORA ExpLoRer board. Arduino SODAQ firmware libraries. thethingsnetwork.org AM stands for Amplitude modulation. FM stands for Frequency modulation. More immune to noise than AM. LORA modulation: Payload. Encoding. Counter element Decoding, on thethingsnetwork app. 868 MHz Band for Europe. 902-927 Band for US and Mexico. Spread Factor. SF7 it\u2019s it\u2019s for energy efficient, SF12 it\u2019s for decoding easiness. Chirp. Byte broadcast. Duty cycle for thethingsnetwork. max 30 seconds every 24 hrs. band shifting. Power consumption: 1 dBm = 1mW. dB it\u2019s and scale not an unit. My instructor Luc Hanneuse explained LORA, LORAWAN and thethingsnetwork.org to me on Thursday morning. For the group assignment I have asked Theo to use i2c protocol to communicate our boards.","title":"Introduction"},{"location":"assignments/week14/#issues-with-lora-thethingsnetwork","text":"So far I\u2019ve made and account on thethingsnetwork.org, and sadly on the last week a bug made it impossible to access to the network in agrilab\u2019s node. Also I\u2019ve tried to use the arduino resources following Luc\u2019s tutorial but the references don\u2019t work so far. I\u2019ll try this again on Tuesday.","title":"Issues with LORA, thethingsnetwork."},{"location":"assignments/week14/#using-sodaq-explorer-lora-development-board","text":"Following this tutorial Important info from SODAQ/orange documentation: Link SerialUSB for debugSerial Serial1 for Bluetooth Serial for pins D0/RX and D1/TX Serial2 for loraSerial TTN_FP_EU868 for freqPlan appEui: Provided by thethingsnetwork appKey: Provided by thethingsnetwork I\u2019ve created an account on thethingsnetwork Then added a new application This form gives applications a After finishing the app creation I\u2019ve added a new device For this I\u2019ve used the the things network library on Arduino Here there\u2019s the process to add the library from the Arduino Library manager. Here there\u2019s the boards manager to add SODAQ SAMD boards. Here this sketch shows the device EUI. This sketch in the examples apart, its a simple test to send \u201c00\u201d to the thethingsnetwork app. We need to add appEUI and appKey, I\u2019ve find this data in the thethingsnetwork console. Selecting the SODAQ ExpLoRer board. New device added. Device information. Data sent.","title":"Using SODAQ Explorer LORA development board."},{"location":"assignments/week14/#results","text":"Location Data Response on serialdebug Testing The SODAQ ExpLoRer board, it\u2019s an easy to setup and start hardware, once I\u2019ve understand the process It went extremely quick with the Arduino IDE. I\u2019ll like to use LORA and the thethingsnetwork for my communications of my final project.","title":"Results"},{"location":"assignments/week14/#circuit-design-for-week14","text":"For this weeks assignment I\u2019ve worked on a circuit integrating an improved hall effect sensor circuit alongside a DAC output that I\u2019ll use for my final project Dielectric Spectroscopy sensor. The original plan was to make two of this boards and communicate with i2c protocol. I\u2019ve also the next objectives: Use different connectors for USB and JTAG. Use a 3.3 and 5 Volts i2c connectors. Keep using the SAMD11C14 micro controller. Make an SAMD21 based board for central processing of data. This are the Characteristics for my SAMD11C14 board. Connectors: 1x05 connector for JTAG programming. 1x04 connector for 12c 3.3 Volts communication. 1x04 connector for 12c 5 Volts communication. 1x04 connector for USB communication. 1x05 connector for PIN_05, PIN_08 and PIN_09. Power: 3.3 Volts linear regulator. 5 Volts from USB. Outputs: LED output at PA_05. DAC output with AD8605 Operational amplifier at PA_02. Micro-controller: SAMD11C14 microcontroller with power input noise filter. SDA and SCL pull ups at PA_14 and PA_15. Reset button. Sensors: HALL effect sensor with power input filter arrangement. Differential amplification with AD8605 for HALL effect output. List of components used: I\u2019ve made this table by: Exporting a BOM from Kicad Generate Bill of materials in the tools menu Importing the txt BOM file in this csv to markdown converter page Reference Value Datasheet U5 ATSAMD11C14A-SS J4 Conn_01x04_Female ~ J3 Conn_01x04_Female ~ SW1 BUTTON_B3SN https://omronfs.omron.com/en_US/ecb/products/pdf/en-b3sn.pdf R2 10K ~ C7 1uF R8 10K ~ C3 1uF J1 Conn_01x05_Female ~ U3 Sensor_Hall-Effect_Analog_A1324LLHLT-T https://www.allegromicro.com/~/media/Files/Datasheets/A1324-5-6-Datasheet.ashx C5 0.1 uF J5 Conn_01x04_Female ~ C2 0.1uF C1 10uF D1 LED https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf R7 100 ~ C6 0.1uF C10 0.1uF J2 Conn_01x02 ~ C8 0.1uF C9 0.1uF U4 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R3 10K ~ R5 1K ~ R6 10K ~ R4 1K ~ U2 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R1 10K ~ C4 10pF J6 Conn_01x05_Female ~ R11 0 ~ U1 Regulator_Linear_LM3480-3.3V-100mA https://www.ti.com/lit/ds/symlink/lm3480.pdf R10 10k ~ R9 10k ~","title":"Circuit design for week14"},{"location":"assignments/week14/#differential-amplifier","text":"Differential amplifier is a type of electronic amplifier that amplifies the difference between two input voltages but suppresses any voltage common to the two inputs. I need a this electronic component for the Hall effect sensor, to amplify the signal output because the signal it\u2019s just 100 mV and can by difficult to filter, instead of measuring the 100 mV I\u2019ll use the differential amplifier to measure 5 - 0.001 = 4.999 Volts pulses which are notably easy to detect. From week11 input devices work Using Arduino\u2019s serial plotter I\u2019ve found the sensor sends a lot of noise, and I\u2019ve learn that\u2019s normal because of the materials of the board. This is the signal response when an magnet passes 3 times over the sensor at 3mm distance. For this I\u2019ve consulted the references shown: Overview of differential amplifiers on science direct by multiple autors","title":"Differential amplifier"},{"location":"assignments/week14/#dac-amplifier","text":"DAC stands for Digital to analog converter and it\u2019s part of my Dielectric Spectroscopy Sensor for my final project. I\u2019m going to use this to identify fat and protein proportions in milk samples. I\u2019m using DAC from the SAMD11C14, in the datasheet DAC it\u2019s on the pin PA_02. And its capable to perform at 350000 samples per second. I want to use this capability of the SAMD11C14 to produce a signal and then measure the difference by passing the signal trough a milk sample. This is in order to detect the molecular structure of the milk sample. For this I\u2019ve used the next reference: AD8605 Datasheet","title":"DAC amplifier"},{"location":"assignments/week14/#noise-filters","text":"For this I\u2019ve used the next references: ST electronics designing for noisy environments handbook Using capacitors to filter electrical noise I\u2019ve used noise filtering for: ATSAMD11C14A micro-controller. A1324 Hall effect sensor. The plan its too reduce the noise observed during in week 11. Week 11 oscilloscope After the local review my instructor Luc Hanneuse ) has helped me to understand that I\u2019m not implementing noise filters in my circuit but only parallel connected capacitors, this helps only to prevent voltage drops while operating the device. So certainly I\u2019ll have to work more on the circuits design og my project for the next steps.","title":"Noise filters"},{"location":"assignments/week14/#conclusions","text":"I\u2019ve been working on this but unfortunately I didn\u2019t have the time to manufacture the board.","title":"Conclusions"},{"location":"assignments/week14/#communications","text":"In the last weeks I\u2019ve use multiple communication protocols. I\u2019ll shown this work and then the final one.","title":"Communications:"},{"location":"assignments/week14/#samd11-mux-table","text":"Under the Arduino IDE we can select the number and types of com protocols to be used in our program and bootloader. To understand this more in detail I had to check the MUX table in the ATSAMD11 documentation .","title":"SAMD11 MUX table"},{"location":"assignments/week14/#usb","text":"I\u2019ve made this program originally on week09 Embedded programming. Check more details here. One button scroll-down/up controller. /* This program uses Arduino and Mouse library. This program reads the board button to scroll-down and after the release of the button waits for 4 seconds to scroll up. After 4 seconds the program waits for a new button push event. IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <Mouse.h> const int BTN = 2; const int LED = 5; int timer = 0; int btn_state = 0; int idle1 = 0; int idle2 = 0; void blink() { for(int pw = 0; pw < 255; pw++){ delay(1); analogWrite(LED,pw); } analogWrite(LED,0); } void setup() { pinMode(LED, OUTPUT); pinMode(BTN, INPUT); Mouse.begin(); //Serial.begin(9600); } void loop() { analogWrite(LED,5); btn_state = digitalRead(BTN); if(btn_state == LOW){ while(btn_state == LOW){ delay(200); analogWrite(LED, 100); Mouse.move(0,0,-1); btn_state = digitalRead(BTN); } for(int clicks = 0; clicks < 10; clicks++){ delay(200); //Serial.println(\"Clicked\"); //Serial.print(clicks); if(clicks < 6){ //digitalWrite(LED, HIGH); blink(); } btn_state = digitalRead(BTN); while(btn_state == LOW && clicks < 6){ delay(200); analogWrite(LED,30); Mouse.move(0,0,1); btn_state = digitalRead(BTN); } } } delay(200); //Serial.println(\"waitting\"); }","title":"USB"},{"location":"assignments/week14/#rfid-and-serial-communication","text":"/* This program reads the TX output of the RFID ISO11784 for animal Tag FDX reading board, using the Serial1 interface of the SAMD11 micro-controller. TX to RX on pin 31 Serial1 Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ void setup() { Serial.begin(9600); Serial1.begin(9600); } void loop() { char id = Serial1.read(); Serial.println(id); delay(100); } Flashing Serial output Video","title":"RFID and serial communication."},{"location":"assignments/week14/#serial-communication","text":"","title":"Serial communication:"},{"location":"assignments/week14/#sparkfun-spectral-sensor","text":"I\u2019ve been stuck on this due to the library size. I\u2019ve above 7000 bytes of the flash memory. So I\u2019ve been looking to the AS7262 datasheet So I\u2019ve learn that its possible to use i2c protocol by writing bytes to the sensor or UART by sending commands. To read the device temperature: - i2c: 0x06 bit 7:0 - UART: ATTEMP Things I\u2019ve to do to enable UART communication: Remove the solder from the Jp1 jumper Add a older to the jp2 jumper. code /* This program reads the TX output of the Sparkfun As7262 board, writes a command to blink the LED light of the sensor, the baudrate and command ATLED0=100 were found in the sensor datasheet using the Serial1 interface of the SAMD11 micro-controller. TX to RX on pins 10, 31 Serial1 Autor: Antonio de Jesus Anaya Hernandez Agrilab, France. Fabacademy week 11. */ void setup() { // initialize serial:------------------------------- Serial.begin(115200); Serial1.begin(115200); delay(200); Serial1.write(\"ATLED0=100\"); delay(500); Serial.println(Serial.read()); } void loop() { Serial1.write(Serial.read()); Serial.println(Serial1.read()); delay(100); }","title":"Sparkfun spectral sensor"},{"location":"assignments/week14/#i2c","text":"","title":"i2c"},{"location":"assignments/week14/#lcd-display","text":"Circuit I\u2019m using here pull-up resistors to solve floating point inputs in SDA and SCL pins. Code //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code makes the i2c display blink its backlight for 1 second and writes \"hello\" during setup and \"world\" during loop. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(); //setup lcd and write hello lcd.init(); lcd.setCursor(1,1); lcd.print(\"Hello\"); } void loop() { lcd.backlight(); lcd.setCursor(1,2); lcd.print(\"world\"); delay(1000); lcd.noBacklight(); delay(1000); }","title":"LCD Display"},{"location":"assignments/week14/#demo","text":"","title":"Demo"},{"location":"assignments/week14/#networking","text":"","title":"Networking"},{"location":"assignments/week14/#i2c-bus","text":"Explain about communication on deep. SDA SCL Show data from the network analyzer Bytes For this I\u2019ve used: my board from week11 2 Arduinos UNO. An i2c LCD display. Description: Teacher sets the LCD display, Teacher sends x and y values to students 4 and 17, i2c addresses are 4, 17 and master address its optional, and LCD address it\u2019s 0x27. Student 4 prints x value using the LCD screen and serial communication, Student 17 prints y value using the LCD screen and serial communication.","title":"i2c bus"},{"location":"assignments/week14/#code","text":"Teacher: I\u2019ve use my own board as Teacher. //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code is the teacher in the \"teacher/student\" i2c configuration. It sends messages to device 4 and 17. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France // Taken parts from Wire M/S receiver // by Nicholas Zambetti <http://www.zambetti.com> #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Serial.begin(9600); Wire.begin(); // join i2c bus (address optional for master) lcd.init(); lcd.setCursor(1,1); lcd.clear(); lcd.print(\"Students board:\"); lcd.backlight(); } byte x = 0; byte y = 255; void loop() { Wire.begin(); Wire.beginTransmission(4); // transmit to device #4 Wire.write(\"x is \"); // sends five bytes Wire.write(x); // sends one byte x++; Wire.beginTransmission(17); // transmit to device #17 Wire.write(\"y is \"); // sends five bytes Wire.write(y); // sends one byte Wire.endTransmission(); // stop transmitting y--; delay(500); } Student 4 Arduino UNO board: //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code is the teacher in the \"teacher/student\" i2c configuration. It sends messages to device 4 and 17. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France // Taken parts from Wire M/S receiver // by Nicholas Zambetti <http://www.zambetti.com> #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(4); // join i2c bus with address #4 Wire.onReceive(receiveEvent); // register event Serial.begin(9600); // start serial for output } void loop() { delay(100); } // function that executes whenever data is received from master // this function is registered as an event, see setup() void receiveEvent(int howMany) { while(1 < Wire.available()) // loop through all but the last { char c = Wire.read(); // receive byte as a character Serial.print(c); // print the character } int x = Wire.read(); // receive byte as an integer Serial.println(x); // print the integer lcd.setCursor(1,2); lcd.clear(); lcd.print(x); Student 17 Arduino UNO board: //This code uses: // LiquidCrystal_I2C and Wire library. // Pins 14 and 15 as SDA and SCL. // This code is the teacher in the \"teacher/student\" i2c configuration. It sends messages to device 4 and 17. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France // Taken parts from Wire M/S receiver // by Nicholas Zambetti <http://www.zambetti.com> #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); void setup() { Wire.begin(17); // join i2c bus with address #4 Wire.onReceive(receiveEvent); // register event Serial.begin(9600); // start serial for output } void loop() { delay(100); } // function that executes whenever data is received from master // this function is registered as an event, see setup() void receiveEvent(int howMany) { while(1 < Wire.available()) // loop through all but the last { char c = Wire.read(); // receive byte as a character Serial.print(c); // print the character } int y = Wire.read(); // receive byte as an integer Serial.println(y); // print the integer lcd.setCursor(1,3); lcd.clear(); lcd.print(y);","title":"Code"},{"location":"assignments/week14/#demo_1","text":"","title":"Demo"},{"location":"assignments/week14/#circuit","text":"","title":"Circuit"},{"location":"assignments/week14/#files","text":"Spectral_test.ino student.ino teacher.ino Arduino Mouse Scroller","title":"Files"},{"location":"assignments/week15/","text":"15. Interface and application programming \u00b6 Introduction \u00b6 Goals: For this week I\u2019ve decided to complete the minimum requirements. My tasks will be: Use the 134KHz RFID sensor. Optionally use an FDX and HDX sensor to read cow RFID tags used in France and Mexico. Give a format to the data received in the mircro-controller code, form the sensor. Establish serial communication between micro-controller and computer. Read and parse the data received from micro-controller using Python. Make a short basic UI. Using QT. Make a distributable version of the software using a packaging library. Group assignment UI comparison This is part of my final project RFID reader module. Micrcontroller reads RFID TAG and sends strings through SERIAL COM. Python RFID parses the data and detects error and manages it with exceptions. QT UI shows the data parsed. Python parser runs in a parallel Thread. Micro-controller \u00b6 I\u2019ve used again my board from week 11 . // This code uses: // Pin 31 for Serial communication at 9600 bauds // 5 Volts for RFID Tag reader board // Communication protocols: USB Serial abd \"Serial1 interface\" for RFID tag reader. // This code reads the RFID tag and prints the result in SERIAL. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France /*#include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); */ char rfid_tag [30]; void setup() { Serial1.begin(9600); Serial.begin(9600); /* Wire.begin(); lcd.init(); lcd.backlight(); */ } void loop() { int id = Serial1.read(); if (id == 2){ //beep(); //rfid_tag[0] = id; for (int c = 0; c < 26; c++){ int bit_ = Serial1.read(); rfid_tag[c] = bit_; } Serial.println(rfid_tag); } /* lcd.setCursor(0,0); lcd.print(rfid_tag); */ delay(200); } Decoding issues: Exception error with Python: Python \u00b6 The Python programming language it\u2019s my favorite programming language. So I\u2019ve decided to skip a trial of multiple programming languages and just use the one I like the most. About Python \u00b6 Python is an interpreted, interactive, object-oriented programming language. It incorporates modules, exceptions, dynamic typing, very high level dynamic data types, and classes. It supports multiple programming paradigms beyond object-oriented programming, such as procedural and functional programming. Python combines remarkable power with very clear syntax. It has interfaces to many system calls and libraries, as well as to various window systems, and is extensible in C or C++. It is also usable as an extension language for applications that need a programmable interface. Finally, Python is portable: it runs on many Unix variants including Linux and macOS, and on Windows. Fragment from Python\u2019s documentation. Configurations \u00b6 I\u2019m a Linux user and so my configuration follows this information. Linux Fedora 32 Conda as Python environment version manager. Qt as User interface library. For this the Configuration process may change a bit for Windows and Mac users. Conda environment \u00b6 Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies. Conda easily creates, saves, loads and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language. Conda as a package manager helps you find and install packages. If you need a package that requires a different version of Python, you do not need to switch to a different environment manager, because conda is also an environment manager. With just a few commands, you can set up a totally separate environment to run that different version of Python, while continuing to run your usual version of Python in your normal environment Taken from Anaconda\u2019s documentation Process overview: We need to: Install Python Anaconda compiler, Create a new environment just for this weeks assignment, Install PyQt5 and requirements packages, Install PySerial library Code a program with Python using PyQT5 and PySerial Libraries. Make a distributable version of the program. Creating a new environment: conda create -n week15 Activate environment: conda activate week15 Install pyserial: pip install pyserial First trial code: \u00b6 import serial baud_rate = 9600 port = '/dev/ttyUSB0' # device = serial.Serial(port) with serial.Serial(port, baud_rate, timeout=1) as serial_device: print(serial_device.name) data = serial_device.readline() while(True): print(data) Second trial code: \u00b6 import serial import time print(\"This program reads the Serial port /dev/ttyACM0 at 9600 bauds and prints the output using the readline serial function on pyserial library. /dev/ttyACM0 its my board based on the ATSAMD11 microcontroller and it has connected in Serial2 the 134KHz RFID FDX tag reader board.\") baud_rate = 9600 port = '/dev/ttyACM0' milking = True def parse_rfid(rfid_code): head = rfid_code[:1] code = rfid_code[1:11] country = rfid_code[11:14] tail = rfid_code[14:] return (head, code, country, tail) # device = serial.Serial(port) with serial.Serial(port, baud_rate, timeout=10) as serial_device: dev_name = serial_device.name print(dev_name) while(milking): time.sleep(0.5) data = serial_device.readline() if len(data) > 3: try: data_decoded = data.decode('utf-8') print(\"The RFID scanned tag code is: \", parse_rfid(data_decoded)) data = None except UnicodeDecodeError: print(\"Scan again\") else: print(\"No tags detected\") About Qt Graphic User Interfaces \u00b6 In the past Computers used to have simple text based interfaces. Over the years this changed to have visual more interactive interfaces. PyQt5 \u00b6 *PyQt is one of the most popular Python bindings for the Qt cross-platform C++ framework. PyQt was developed by Riverbank Computing Limited. Qt itself is developed as part of the Qt Project. PyQt provides bindings for Qt 4 and Qt 5. PyQt is distributed under a choice of licences: GPL version 3 or a commercial license. * From Riverbank Computing Limited website Configuration \u00b6 Install PyQt5 library: pip install PyQt5 Test code: Reference: https://pythonbasics.org/pyqt-hello-world/ import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel def window(): app = QApplication(sys.argv) widget = QWidget() textLabel = QLabel(widget) textLabel.setText(\"Hello World!\") textLabel.move(110,85) widget.setGeometry(50,50,320,200) widget.setWindowTitle(\"PyQt5 Example\") widget.show() sys.exit(app.exec_()) if __name__ == '__main__': window() Using it long side PySerial: import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel class MainWindow(): def __init__(self): self.app = QApplication(sys.argv) self.widget = QWidget() self.text1 = \"Fab Academy 2021, week15\" self.text2 = \"0\" def setLabel(self): self.label = QLabel(self.widget) self.label.setText(self.text2) self.label.move(110, 85) def setTitle(self): self.widget.setGeometry(50,50,320,200) self.widget.setWindowTitle(self.text1) def display(self): self.widget.show() sys.exit(self.app.exec_()) def __run(): app = MainWindow() app.setLabel() app.setTitle() app.display() def read_rfid(): __run() Using Threading: import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel from python_serial_01 import read_rfid, output import threading import time class MainWindow(): def __init__(self): self.app = QApplication(sys.argv) self.widget = QWidget() self.text1 = \"Fab Academy 2021, week15\" self.text2 = \"0\" self.setLabel() self.setTitle() def setLabel(self): self.label = QLabel(self.widget) self.label.setText(self.text2) self.label.move(110, 85) def setTitle(self): self.widget.setGeometry(50,50,320,200) self.widget.setWindowTitle(self.text1) def display(self): self.widget.show() sys.exit(self.app.exec_()) a = MainWindow() def update_label(text): while True: print(\"loop1\") time.sleep(0.5) a.label.setText(text) serial = threading.Thread(target=read_rfid) updater = threading.Thread(target=update_label, args=(output,)) serial.start() updater.start() a.display() \u00b6 UI \u00b6 Views \u00b6 Console output \u00b6 Final code \u00b6 View: import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel from PyQt5.QtGui import QPixmap from python_serial_01 import read_rfid, try_serial import threading import time class MainWindow(): height = 400 width = height * 1.618 def __init__(self): self.app = QApplication(sys.argv) self.widget = QWidget() self.text1 = \"Fab Academy 2021, week15\" self.text2 = \"0\"*45 self.setLabel() self.setTitle() self.setLogo() self.setConnection_icon() # self.setRFID_img() self.setMilk_img() def setLabel(self): self.label = QLabel(self.widget) self.label.setText(self.text2) self.label.resize(500, 50) self.label.move(200, 50) def setTitle(self): self.widget.setGeometry(50,50,self.width,self.height) self.widget.setWindowTitle(self.text1) def setConnection_icon(self): self.con_icon_holder = QLabel(self.widget) if try_serial(): self.con_icon = QPixmap('ok.png') else: self.con_icon = QPixmap('not.png') self.con_icon_holder.setPixmap(self.con_icon) self.con_icon_holder.resize(self.con_icon.width(), self.con_icon.height()) self.con_icon_holder.move(self.width -50, self.height-50 ) def setRFID_img(self): self.rfid_icon_holder = QLabel(self.widget) self.rfid_icon = QPixmap('tag.png') self.rfid_icon_holder.setPixmap(self.rfid_icon) self.rfid_icon_holder.resize(self.rfid_icon.width(), self.rfid_icon.height()) self.rfid_icon_holder.move(50, self.height -100) def setMilk_img(self): self.milk_icon_holder = QLabel(self.widget) self.milk_icon = QPixmap('milk.png') self.milk_icon_holder.setPixmap(self.milk_icon) self.milk_icon_holder.resize(self.milk_icon.width(), self.milk_icon.height()) self.milk_icon_holder.move(50, (self.height-self.milk_icon.height())*0.5) def setLogo(self): self.logo = QPixmap('cow.png') self.logo_holder = QLabel(self.widget) self.logo_holder.setPixmap(self.logo) self.logo_holder.resize(self.logo.width(), self.logo.height()) self.logo_holder.move(50, 50) def display(self): self.widget.show() sys.exit(self.app.exec_()) a = MainWindow() def update_label(): while True: print(\"loop1\") time.sleep(0.5) data = read_rfid() a.label.setText(data) updater = threading.Thread(target=update_label) updater.start() a.display() Rfid library: # print(\"This program reads the Serial port /dev/ttyACM0 at 9600 bauds and prints the output using the readline serial function on pyserial library. /dev/ttyACM0 its my board based on the ATSAMD11 microcontroller and it has connected in Serial2 the 134KHz RFID FDX tag reader board.\" import serial import time import logging baud_rate = 9600 port = '/dev/ttyACM0' output = \"Default\" def hex_to_dec(data): reversed = data[::-1] decimal = int(reversed, 16) return str(decimal) def parse_rfid(rfid_code): head = rfid_code[:1] code = rfid_code[1:11] country = rfid_code[11:14] tail = rfid_code[14:] return \"{code}, {country}\".format(code=hex_to_dec(code), country=hex_to_dec(country)) def try_serial(): try: with serial.Serial(port, baud_rate, timeout=10) as serial_device: dev_name = serial_device.name print(dev_name) serial_device.close() return True except: print(\"No conection\") return False def read_rfid(): try: with serial.Serial(port, baud_rate, timeout=10) as serial_device: dev_name = serial_device.name print(dev_name) data = serial_device.readline() if len(data) > 3: try: data_decoded = data.decode('utf-8') output = \"The RFID scanned tag code is: %s\" % parse_rfid(data_decoded) except UnicodeDecodeError: output = \"Scan again\" else: output = \"No tags detected\" print(output) serial_device.close() return output except: return \"Not connected\" MCurses \u00b6 NCurses it\u2019s a text based interface design standard, and Mcurses its a version for Micro-controllers. Ncurses for microcontrollers \u00b6 git clone https://github.com/ChrisMicro/mcurses /*--------------------------------------------------------------------------------------------------------------------------------------------------- mcurses box demo Copyright (c) 2011-2015 Frank Meyer - frank(at)fli4l.de Revision History: V1.0 2015 xx xx Frank Meyer, original version V1.1 2017 01 14 ChrisMicro, converted to Arduino example This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. Modification for Fab Academy week09: IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France --------------------------------------------------------------------------------------------------------------------------------------------------- */ #include \"mcurses.h\" #define myitoa(x,buf) itoa ((x), buf, 10) int buttonState = 0; char PROGMEM logoFab[] = \"\\r\\ ######## ########\\n\\ \\r\\ ######## #######\\n\\ \\r\\ ################### ######\\n\\ \\r\\ ## ############## ###\\n\\ \\r\\ (( ############# %%%\\n\\ \\r\\ ((( /##### %%%\\n\\ \\r\\ (((( %%%%\\n\\ \\r\\ (((( ((((((( %%%%%%%%%%%%%%\\n\\ \\r\\ (((( ((((((((( &%%%%%%%%%%%%%%%\\n\\ \\r\\ ((( (((((((((( &%%%%%%%%% %%%*\\n\\ \\r\\ (( ((((((((( %%%%%%%%% %%%\\n\\ \\r\\ ((( ((((((( (%%%%% %%%\\n\\ \\r\\ (((((((((( %%%%%%\\n\\ \\r\\ (((((((( %%%%%%%\\n\\ \\r\\ (((((((( %%%%%%%%\\n\\ \"; void Arduino_putchar(uint8_t c) { Serial.write(c); } void setup() { Serial.begin(115200); setFunction_putchar(Arduino_putchar); // tell the library which output channel shall be used initscr(); // initialize mcurses pinMode(5, OUTPUT); pinMode(2, INPUT); } void loop() { buttonState = digitalRead(2); // check if the pushbutton is pressed. If it is, the buttonState is HIGH: if (buttonState == LOW) { // turn LED on: digitalWrite(5, HIGH); mvaddstr_P (18, 0, PSTR(\"fabacademy.org\")); mvaddstr_P (20, 0, PSTR(\"This is an example of MCURSES a NCURSES library for microcontrollers\")); } else { // turn LED off: digitalWrite(5, LOW); } char buf[10]; uint8_t idx; mvaddstr_P (0, 0, PSTR(logoFab)); delay(500); clear (); } Files \u00b6 Python Serial communication reader Python Pyqt User interface Arduino code for SAMD11C14 board microcontroller Icons from flaticon : cow ok not rfid","title":"15. Interface and application programming"},{"location":"assignments/week15/#15-interface-and-application-programming","text":"","title":"15. Interface and application programming"},{"location":"assignments/week15/#introduction","text":"Goals: For this week I\u2019ve decided to complete the minimum requirements. My tasks will be: Use the 134KHz RFID sensor. Optionally use an FDX and HDX sensor to read cow RFID tags used in France and Mexico. Give a format to the data received in the mircro-controller code, form the sensor. Establish serial communication between micro-controller and computer. Read and parse the data received from micro-controller using Python. Make a short basic UI. Using QT. Make a distributable version of the software using a packaging library. Group assignment UI comparison This is part of my final project RFID reader module. Micrcontroller reads RFID TAG and sends strings through SERIAL COM. Python RFID parses the data and detects error and manages it with exceptions. QT UI shows the data parsed. Python parser runs in a parallel Thread.","title":"Introduction"},{"location":"assignments/week15/#micro-controller","text":"I\u2019ve used again my board from week 11 . // This code uses: // Pin 31 for Serial communication at 9600 bauds // 5 Volts for RFID Tag reader board // Communication protocols: USB Serial abd \"Serial1 interface\" for RFID tag reader. // This code reads the RFID tag and prints the result in SERIAL. // Autor: Antonio de Jesus Anaya Hernandez // Fab-Academy: 2021 Agrilab // Country: France /*#include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); */ char rfid_tag [30]; void setup() { Serial1.begin(9600); Serial.begin(9600); /* Wire.begin(); lcd.init(); lcd.backlight(); */ } void loop() { int id = Serial1.read(); if (id == 2){ //beep(); //rfid_tag[0] = id; for (int c = 0; c < 26; c++){ int bit_ = Serial1.read(); rfid_tag[c] = bit_; } Serial.println(rfid_tag); } /* lcd.setCursor(0,0); lcd.print(rfid_tag); */ delay(200); } Decoding issues: Exception error with Python:","title":"Micro-controller"},{"location":"assignments/week15/#python","text":"The Python programming language it\u2019s my favorite programming language. So I\u2019ve decided to skip a trial of multiple programming languages and just use the one I like the most.","title":"Python"},{"location":"assignments/week15/#about-python","text":"Python is an interpreted, interactive, object-oriented programming language. It incorporates modules, exceptions, dynamic typing, very high level dynamic data types, and classes. It supports multiple programming paradigms beyond object-oriented programming, such as procedural and functional programming. Python combines remarkable power with very clear syntax. It has interfaces to many system calls and libraries, as well as to various window systems, and is extensible in C or C++. It is also usable as an extension language for applications that need a programmable interface. Finally, Python is portable: it runs on many Unix variants including Linux and macOS, and on Windows. Fragment from Python\u2019s documentation.","title":"About Python"},{"location":"assignments/week15/#configurations","text":"I\u2019m a Linux user and so my configuration follows this information. Linux Fedora 32 Conda as Python environment version manager. Qt as User interface library. For this the Configuration process may change a bit for Windows and Mac users.","title":"Configurations"},{"location":"assignments/week15/#conda-environment","text":"Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies. Conda easily creates, saves, loads and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language. Conda as a package manager helps you find and install packages. If you need a package that requires a different version of Python, you do not need to switch to a different environment manager, because conda is also an environment manager. With just a few commands, you can set up a totally separate environment to run that different version of Python, while continuing to run your usual version of Python in your normal environment Taken from Anaconda\u2019s documentation Process overview: We need to: Install Python Anaconda compiler, Create a new environment just for this weeks assignment, Install PyQt5 and requirements packages, Install PySerial library Code a program with Python using PyQT5 and PySerial Libraries. Make a distributable version of the program. Creating a new environment: conda create -n week15 Activate environment: conda activate week15 Install pyserial: pip install pyserial","title":"Conda environment"},{"location":"assignments/week15/#first-trial-code","text":"import serial baud_rate = 9600 port = '/dev/ttyUSB0' # device = serial.Serial(port) with serial.Serial(port, baud_rate, timeout=1) as serial_device: print(serial_device.name) data = serial_device.readline() while(True): print(data)","title":"First trial code:"},{"location":"assignments/week15/#second-trial-code","text":"import serial import time print(\"This program reads the Serial port /dev/ttyACM0 at 9600 bauds and prints the output using the readline serial function on pyserial library. /dev/ttyACM0 its my board based on the ATSAMD11 microcontroller and it has connected in Serial2 the 134KHz RFID FDX tag reader board.\") baud_rate = 9600 port = '/dev/ttyACM0' milking = True def parse_rfid(rfid_code): head = rfid_code[:1] code = rfid_code[1:11] country = rfid_code[11:14] tail = rfid_code[14:] return (head, code, country, tail) # device = serial.Serial(port) with serial.Serial(port, baud_rate, timeout=10) as serial_device: dev_name = serial_device.name print(dev_name) while(milking): time.sleep(0.5) data = serial_device.readline() if len(data) > 3: try: data_decoded = data.decode('utf-8') print(\"The RFID scanned tag code is: \", parse_rfid(data_decoded)) data = None except UnicodeDecodeError: print(\"Scan again\") else: print(\"No tags detected\")","title":"Second trial code:"},{"location":"assignments/week15/#about-qt-graphic-user-interfaces","text":"In the past Computers used to have simple text based interfaces. Over the years this changed to have visual more interactive interfaces.","title":"About Qt Graphic User Interfaces"},{"location":"assignments/week15/#pyqt5","text":"*PyQt is one of the most popular Python bindings for the Qt cross-platform C++ framework. PyQt was developed by Riverbank Computing Limited. Qt itself is developed as part of the Qt Project. PyQt provides bindings for Qt 4 and Qt 5. PyQt is distributed under a choice of licences: GPL version 3 or a commercial license. * From Riverbank Computing Limited website","title":"PyQt5"},{"location":"assignments/week15/#configuration","text":"Install PyQt5 library: pip install PyQt5 Test code: Reference: https://pythonbasics.org/pyqt-hello-world/ import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel def window(): app = QApplication(sys.argv) widget = QWidget() textLabel = QLabel(widget) textLabel.setText(\"Hello World!\") textLabel.move(110,85) widget.setGeometry(50,50,320,200) widget.setWindowTitle(\"PyQt5 Example\") widget.show() sys.exit(app.exec_()) if __name__ == '__main__': window() Using it long side PySerial: import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel class MainWindow(): def __init__(self): self.app = QApplication(sys.argv) self.widget = QWidget() self.text1 = \"Fab Academy 2021, week15\" self.text2 = \"0\" def setLabel(self): self.label = QLabel(self.widget) self.label.setText(self.text2) self.label.move(110, 85) def setTitle(self): self.widget.setGeometry(50,50,320,200) self.widget.setWindowTitle(self.text1) def display(self): self.widget.show() sys.exit(self.app.exec_()) def __run(): app = MainWindow() app.setLabel() app.setTitle() app.display() def read_rfid(): __run() Using Threading: import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel from python_serial_01 import read_rfid, output import threading import time class MainWindow(): def __init__(self): self.app = QApplication(sys.argv) self.widget = QWidget() self.text1 = \"Fab Academy 2021, week15\" self.text2 = \"0\" self.setLabel() self.setTitle() def setLabel(self): self.label = QLabel(self.widget) self.label.setText(self.text2) self.label.move(110, 85) def setTitle(self): self.widget.setGeometry(50,50,320,200) self.widget.setWindowTitle(self.text1) def display(self): self.widget.show() sys.exit(self.app.exec_()) a = MainWindow() def update_label(text): while True: print(\"loop1\") time.sleep(0.5) a.label.setText(text) serial = threading.Thread(target=read_rfid) updater = threading.Thread(target=update_label, args=(output,)) serial.start() updater.start() a.display()","title":"Configuration"},{"location":"assignments/week15/#_1","text":"","title":""},{"location":"assignments/week15/#ui","text":"","title":"UI"},{"location":"assignments/week15/#views","text":"","title":"Views"},{"location":"assignments/week15/#console-output","text":"","title":"Console output"},{"location":"assignments/week15/#final-code","text":"View: import sys from PyQt5.QtWidgets import QApplication, QWidget, QLabel from PyQt5.QtGui import QPixmap from python_serial_01 import read_rfid, try_serial import threading import time class MainWindow(): height = 400 width = height * 1.618 def __init__(self): self.app = QApplication(sys.argv) self.widget = QWidget() self.text1 = \"Fab Academy 2021, week15\" self.text2 = \"0\"*45 self.setLabel() self.setTitle() self.setLogo() self.setConnection_icon() # self.setRFID_img() self.setMilk_img() def setLabel(self): self.label = QLabel(self.widget) self.label.setText(self.text2) self.label.resize(500, 50) self.label.move(200, 50) def setTitle(self): self.widget.setGeometry(50,50,self.width,self.height) self.widget.setWindowTitle(self.text1) def setConnection_icon(self): self.con_icon_holder = QLabel(self.widget) if try_serial(): self.con_icon = QPixmap('ok.png') else: self.con_icon = QPixmap('not.png') self.con_icon_holder.setPixmap(self.con_icon) self.con_icon_holder.resize(self.con_icon.width(), self.con_icon.height()) self.con_icon_holder.move(self.width -50, self.height-50 ) def setRFID_img(self): self.rfid_icon_holder = QLabel(self.widget) self.rfid_icon = QPixmap('tag.png') self.rfid_icon_holder.setPixmap(self.rfid_icon) self.rfid_icon_holder.resize(self.rfid_icon.width(), self.rfid_icon.height()) self.rfid_icon_holder.move(50, self.height -100) def setMilk_img(self): self.milk_icon_holder = QLabel(self.widget) self.milk_icon = QPixmap('milk.png') self.milk_icon_holder.setPixmap(self.milk_icon) self.milk_icon_holder.resize(self.milk_icon.width(), self.milk_icon.height()) self.milk_icon_holder.move(50, (self.height-self.milk_icon.height())*0.5) def setLogo(self): self.logo = QPixmap('cow.png') self.logo_holder = QLabel(self.widget) self.logo_holder.setPixmap(self.logo) self.logo_holder.resize(self.logo.width(), self.logo.height()) self.logo_holder.move(50, 50) def display(self): self.widget.show() sys.exit(self.app.exec_()) a = MainWindow() def update_label(): while True: print(\"loop1\") time.sleep(0.5) data = read_rfid() a.label.setText(data) updater = threading.Thread(target=update_label) updater.start() a.display() Rfid library: # print(\"This program reads the Serial port /dev/ttyACM0 at 9600 bauds and prints the output using the readline serial function on pyserial library. /dev/ttyACM0 its my board based on the ATSAMD11 microcontroller and it has connected in Serial2 the 134KHz RFID FDX tag reader board.\" import serial import time import logging baud_rate = 9600 port = '/dev/ttyACM0' output = \"Default\" def hex_to_dec(data): reversed = data[::-1] decimal = int(reversed, 16) return str(decimal) def parse_rfid(rfid_code): head = rfid_code[:1] code = rfid_code[1:11] country = rfid_code[11:14] tail = rfid_code[14:] return \"{code}, {country}\".format(code=hex_to_dec(code), country=hex_to_dec(country)) def try_serial(): try: with serial.Serial(port, baud_rate, timeout=10) as serial_device: dev_name = serial_device.name print(dev_name) serial_device.close() return True except: print(\"No conection\") return False def read_rfid(): try: with serial.Serial(port, baud_rate, timeout=10) as serial_device: dev_name = serial_device.name print(dev_name) data = serial_device.readline() if len(data) > 3: try: data_decoded = data.decode('utf-8') output = \"The RFID scanned tag code is: %s\" % parse_rfid(data_decoded) except UnicodeDecodeError: output = \"Scan again\" else: output = \"No tags detected\" print(output) serial_device.close() return output except: return \"Not connected\"","title":"Final code"},{"location":"assignments/week15/#mcurses","text":"NCurses it\u2019s a text based interface design standard, and Mcurses its a version for Micro-controllers.","title":"MCurses"},{"location":"assignments/week15/#ncurses-for-microcontrollers","text":"git clone https://github.com/ChrisMicro/mcurses /*--------------------------------------------------------------------------------------------------------------------------------------------------- mcurses box demo Copyright (c) 2011-2015 Frank Meyer - frank(at)fli4l.de Revision History: V1.0 2015 xx xx Frank Meyer, original version V1.1 2017 01 14 ChrisMicro, converted to Arduino example This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. Modification for Fab Academy week09: IO pins: PA02 <- Digital pull-up BUTTON input PA05 -> Digital LED output Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France --------------------------------------------------------------------------------------------------------------------------------------------------- */ #include \"mcurses.h\" #define myitoa(x,buf) itoa ((x), buf, 10) int buttonState = 0; char PROGMEM logoFab[] = \"\\r\\ ######## ########\\n\\ \\r\\ ######## #######\\n\\ \\r\\ ################### ######\\n\\ \\r\\ ## ############## ###\\n\\ \\r\\ (( ############# %%%\\n\\ \\r\\ ((( /##### %%%\\n\\ \\r\\ (((( %%%%\\n\\ \\r\\ (((( ((((((( %%%%%%%%%%%%%%\\n\\ \\r\\ (((( ((((((((( &%%%%%%%%%%%%%%%\\n\\ \\r\\ ((( (((((((((( &%%%%%%%%% %%%*\\n\\ \\r\\ (( ((((((((( %%%%%%%%% %%%\\n\\ \\r\\ ((( ((((((( (%%%%% %%%\\n\\ \\r\\ (((((((((( %%%%%%\\n\\ \\r\\ (((((((( %%%%%%%\\n\\ \\r\\ (((((((( %%%%%%%%\\n\\ \"; void Arduino_putchar(uint8_t c) { Serial.write(c); } void setup() { Serial.begin(115200); setFunction_putchar(Arduino_putchar); // tell the library which output channel shall be used initscr(); // initialize mcurses pinMode(5, OUTPUT); pinMode(2, INPUT); } void loop() { buttonState = digitalRead(2); // check if the pushbutton is pressed. If it is, the buttonState is HIGH: if (buttonState == LOW) { // turn LED on: digitalWrite(5, HIGH); mvaddstr_P (18, 0, PSTR(\"fabacademy.org\")); mvaddstr_P (20, 0, PSTR(\"This is an example of MCURSES a NCURSES library for microcontrollers\")); } else { // turn LED off: digitalWrite(5, LOW); } char buf[10]; uint8_t idx; mvaddstr_P (0, 0, PSTR(logoFab)); delay(500); clear (); }","title":"Ncurses for microcontrollers"},{"location":"assignments/week15/#files","text":"Python Serial communication reader Python Pyqt User interface Arduino code for SAMD11C14 board microcontroller Icons from flaticon : cow ok not rfid","title":"Files"},{"location":"assignments/week16/","text":"16. Wildcard week \u00b6 Robotics \u00b6 For this I\u2019ve been using the Niryo One 6 axis Robotic Arm. Characteristics: 6 axis 3 Motors 3 Servo motors I\u2019ve used Niryo One to make a pick and place robot. The working area has a grid of 5x5 spaces and I\u2019ve used a coordinate system to name the poses in the learning system of Niryo, starting from (0,0) Right bottom corner to (4,4) top left corner of the grid. The idea its use this to move cubetes using in spectroscopy. Assembling process \u00b6 Insert feet Attach clamp Connect clamp terminals with DuPont wires Parts description \u00b6 The parts of the Niryo One are 3D printed and some of the pieces don\u2019t fit exactly in place. Enable clamps \u00b6 The clamps need to be enabled under Niryo Studio. Select Standar Clamps. Click Enable. Test the clamps. Firsts Steps \u00b6 Following the Guide from Niryo: For Linux Download the Niryo One Studio Program Extract the files. Make the program File executable using: chmod +x NiryoOneStudio Execute the program by doing: ./NiryoOneStudio Power on by pulsing the button. Wait until the Power LED indicator turns Blue. This means the arm its on Hotspot mode. Using Niryo One Studio search for the Niryo One hotspot in the connection section. Once the connection has been established, start the automatic calibration process. Working area \u00b6 I\u2019ve designed this grid to train a pick and place program easily. The grid is 5x5 each hole is 25 mm diameter and spaced 15 mm. Cubetes: Suction cups for fixing the laser cut grid: Coordinate system \u00b6 Niryo uses radians and every value in their axis means positive and negative rolling angle positions. x, y, z and i, j, k. X = base roll Y = Pitch arm Z = Yaw arm I = Yaw elbow J = pitch elbow K = roll hand Automatic Calibration \u00b6 The calibration process its the most important step. If you don\u2019t calibrate the robot properly you can cause unwanted collisions. The sequence makes the robot reach the limits of the XYZ motors. The servos don\u2019t move since they have their own encoders for position tracking. Here is the tracking position showed in the 3D model on Niryo One Studio: This is video showing the calibration sequence. Position Tracking \u00b6 Niryo Studio plots in 3D the sensed position of each axis on real time. Learning mode \u00b6 The Learning mode ublocks the motors so you can move the arm in their 6 axis and it keeps tracking the positions. Once you reach the desired pose you can: Save it Use it in a block for programming with niryo blocks. Pose saving \u00b6 This is the process of saving the poses to use it later to program a sequence. Using pose as steps sequences \u00b6 Once you have saved the positions you can uses it as sequences in a program. This video shows the process. Niryo blocks programming \u00b6 This is easy to use interface to Python and ROS to program the robot using a Scratch like interface using programming blocks. I\u2019ve used the functions under Movement: Pick from Place from Move to pose Calibrate atm Loop for \u201c10\u201d times. Running a sequence: Pick and place program \u00b6 This is the result: Another angle: Issues \u00b6 Error code 32 in motors can mean one of the axis has been stuck, to solve this: Unstuck the axis. Reboot Niryo. Sometimes Niryo will stop in the middle of a task. Just move to a initial pose and restart the routine. Issues with ELF files caused by dual booting Windows and Linux. I\u2019ve tried to recover my files but I\u2019ve a data corruption issue that damaged half of my work. This started on week 14 while using Python under Windows. Solution was to make a new repository clone and copy paste the recovered files. Files \u00b6 Grid Pick and place program for niryo","title":"16. Wildcard week"},{"location":"assignments/week16/#16-wildcard-week","text":"","title":"16. Wildcard week"},{"location":"assignments/week16/#robotics","text":"For this I\u2019ve been using the Niryo One 6 axis Robotic Arm. Characteristics: 6 axis 3 Motors 3 Servo motors I\u2019ve used Niryo One to make a pick and place robot. The working area has a grid of 5x5 spaces and I\u2019ve used a coordinate system to name the poses in the learning system of Niryo, starting from (0,0) Right bottom corner to (4,4) top left corner of the grid. The idea its use this to move cubetes using in spectroscopy.","title":"Robotics"},{"location":"assignments/week16/#assembling-process","text":"Insert feet Attach clamp Connect clamp terminals with DuPont wires","title":"Assembling process"},{"location":"assignments/week16/#parts-description","text":"The parts of the Niryo One are 3D printed and some of the pieces don\u2019t fit exactly in place.","title":"Parts description"},{"location":"assignments/week16/#enable-clamps","text":"The clamps need to be enabled under Niryo Studio. Select Standar Clamps. Click Enable. Test the clamps.","title":"Enable clamps"},{"location":"assignments/week16/#firsts-steps","text":"Following the Guide from Niryo: For Linux Download the Niryo One Studio Program Extract the files. Make the program File executable using: chmod +x NiryoOneStudio Execute the program by doing: ./NiryoOneStudio Power on by pulsing the button. Wait until the Power LED indicator turns Blue. This means the arm its on Hotspot mode. Using Niryo One Studio search for the Niryo One hotspot in the connection section. Once the connection has been established, start the automatic calibration process.","title":"Firsts Steps"},{"location":"assignments/week16/#working-area","text":"I\u2019ve designed this grid to train a pick and place program easily. The grid is 5x5 each hole is 25 mm diameter and spaced 15 mm. Cubetes: Suction cups for fixing the laser cut grid:","title":"Working area"},{"location":"assignments/week16/#coordinate-system","text":"Niryo uses radians and every value in their axis means positive and negative rolling angle positions. x, y, z and i, j, k. X = base roll Y = Pitch arm Z = Yaw arm I = Yaw elbow J = pitch elbow K = roll hand","title":"Coordinate system"},{"location":"assignments/week16/#automatic-calibration","text":"The calibration process its the most important step. If you don\u2019t calibrate the robot properly you can cause unwanted collisions. The sequence makes the robot reach the limits of the XYZ motors. The servos don\u2019t move since they have their own encoders for position tracking. Here is the tracking position showed in the 3D model on Niryo One Studio: This is video showing the calibration sequence.","title":"Automatic Calibration"},{"location":"assignments/week16/#position-tracking","text":"Niryo Studio plots in 3D the sensed position of each axis on real time.","title":"Position Tracking"},{"location":"assignments/week16/#learning-mode","text":"The Learning mode ublocks the motors so you can move the arm in their 6 axis and it keeps tracking the positions. Once you reach the desired pose you can: Save it Use it in a block for programming with niryo blocks.","title":"Learning mode"},{"location":"assignments/week16/#pose-saving","text":"This is the process of saving the poses to use it later to program a sequence.","title":"Pose saving"},{"location":"assignments/week16/#using-pose-as-steps-sequences","text":"Once you have saved the positions you can uses it as sequences in a program. This video shows the process.","title":"Using pose as steps sequences"},{"location":"assignments/week16/#niryo-blocks-programming","text":"This is easy to use interface to Python and ROS to program the robot using a Scratch like interface using programming blocks. I\u2019ve used the functions under Movement: Pick from Place from Move to pose Calibrate atm Loop for \u201c10\u201d times. Running a sequence:","title":"Niryo blocks programming"},{"location":"assignments/week16/#pick-and-place-program","text":"This is the result: Another angle:","title":"Pick and place program"},{"location":"assignments/week16/#issues","text":"Error code 32 in motors can mean one of the axis has been stuck, to solve this: Unstuck the axis. Reboot Niryo. Sometimes Niryo will stop in the middle of a task. Just move to a initial pose and restart the routine. Issues with ELF files caused by dual booting Windows and Linux. I\u2019ve tried to recover my files but I\u2019ve a data corruption issue that damaged half of my work. This started on week 14 while using Python under Windows. Solution was to make a new repository clone and copy paste the recovered files.","title":"Issues"},{"location":"assignments/week16/#files","text":"Grid Pick and place program for niryo","title":"Files"},{"location":"assignments/week17/","text":"17. Applications and Implications. \u00b6 What will it do? \u00b6 Identify cow in production. Using RFID reader. Module RFID reader FDX, or, HDX - FDX. Measure the quantity of milk produced by the identified cow. Using Hall effect food-safe sensor. Module food-safe flow sensor. Estimate the Quality of milk based in its content of Fat/Protein. Using Dielectric Spectroscopy. Module signal emitter (DAC output). AND Module signal reader (ADC input). Save the data generated per cow. Using SD memory card module. Module SD card writer. Display information of the current process. Using a LCD display. Module display. Send data over USB, serial communication. Using Module display, Who has done what beforehand? \u00b6 DairyMilk M6800 - Milk Sensors \u00b6 DairyMilk M6800 - Milk Sensors Milk Checker \u00b6 Milk Checker Datasheet This device its commonly use to verify the freshness of milk and to detect sub-clinical mastitis in the cattle. The functioning its simple: Collecting a sample of milk. Perform the test by pulsing the test button. Check a paper printed reference table of values and possible correlations. Determine a diagnostic based in the lecture. Sensirion liquid flow meters \u00b6 Sensirion liquid flow meters Spectra \u00b6 Spectra Biomedical Imaging Device What will you design? \u00b6 Prototypes: Electronic circuit DAC, ADC, and hall effect board. Food-safe hall effect flow sensor. Waterproof encase. RFID reader module. 1KHz sine wave generated by SAMD11C14 DAC capability. Summary table: I2C Communication protocol. Module Id Address Type Module RFID reader FDX 2 0x02 Student Module food-safe flow sensor 3 0x03 Student Module signal emitter (DAC output) 4 0x04 Student Module signal reader (ADC input) 5 0x05 Student Module SD card writer 6 0x06 Student Module display 1 0x01 What materials and components will be used? \u00b6 Materials \u00b6 Plexiglass Food-grade silicone PCB Bolts 4mm Nuts 4mm Seal ring Wires and connectors Components \u00b6 Module RFID reader FDX. ATSAMD11C14 Microcontroller. \u2026 Module food-safe flow sensor. ATSAMD11C14 Microcontroller. \u2026 Module signal emitter (DAC output). ATSAMD11C14 Microcontroller. \u2026 Module signal reader (ADC input). ATSAMD11C14 Microcontroller. \u2026 Reference Value Datasheet U5 ATSAMD11C14A-SS J4 Conn_01x04_Female ~ J3 Conn_01x04_Female ~ SW1 BUTTON_B3SN https://omronfs.omron.com/en_US/ecb/products/pdf/en-b3sn.pdf R2 10K ~ C7 1uF R8 10K ~ C3 1uF J1 Conn_01x05_Female ~ U3 Sensor_Hall-Effect_Analog_A1324LLHLT-T https://www.allegromicro.com/~/media/Files/Datasheets/A1324-5-6-Datasheet.ashx C5 0.1 uF J5 Conn_01x04_Female ~ elina-nguyen-cadoret C2 0.1uF C1 10uF D1 LED https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf R7 100 ~ C6 0.1uF C10 0.1uF J2 Conn_01x02 ~ C8 0.1uF C9 0.1uF U4 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R3 10K ~ R5 1K ~ R6 10K ~ R4 1K ~ U2 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R1 10K ~ C4 10pF J6 Conn_01x05_Female ~ R11 0 ~ U1 Regulator_Linear_LM3480-3.3V-100mA https://www.ti.com/lit/ds/symlink/lm3480.pdf R10 10k ~ R9 10k ~ Module SD card writer. ATSAMD11C14 Microcontroller. \u2026 Module display. ATSAMD11C14 Microcontroller. \u2026 Where will they come from? \u00b6 This materials are available in the FabLab inventory. For now all of them will come from AgriLab. How much will they cost? \u00b6 The goal is less than 200 Euros. Actual price: To be determined in the next days. What parts and systems will be made? \u00b6 Module RFID reader FDX. Module food-safe flow sensor. Module signal emitter (DAC output). Module signal reader (ADC input). Module SD card writer. Module display. What processes will be used? \u00b6 PCB milling with ROLAND SRM-20 Mold and casting with CNC machine. Embedded programming with Atmel MPLAB Harmony. What questions need to be answered? \u00b6 How Fat and Protein are related to the step response at certain Frequencies. Find the range of frequencies for fat and protein in fresh Milk. Find the step response of How will it be evaluated? \u00b6 Finding a correlation between Step response and Fat Protein that could be measure with the DAC and DCA modules. - By being used in an actual farm. Note: As week22 I\u2019ve decided to change this to the next testing plan also written in week19 documentation For the testing I\u2019ve changed my idea since the time available is less for me. My testing will be to measure different samples: 100ml From a bottle milk 100ml of creme. 100ml of coca-cola 100ml of tap water. I\u2019ll take note of the values of the samples and compare the results in a table like this: Substance Samples per second Min Max Average","title":"17. Applications and Implications."},{"location":"assignments/week17/#17-applications-and-implications","text":"","title":"17. Applications and Implications."},{"location":"assignments/week17/#what-will-it-do","text":"Identify cow in production. Using RFID reader. Module RFID reader FDX, or, HDX - FDX. Measure the quantity of milk produced by the identified cow. Using Hall effect food-safe sensor. Module food-safe flow sensor. Estimate the Quality of milk based in its content of Fat/Protein. Using Dielectric Spectroscopy. Module signal emitter (DAC output). AND Module signal reader (ADC input). Save the data generated per cow. Using SD memory card module. Module SD card writer. Display information of the current process. Using a LCD display. Module display. Send data over USB, serial communication. Using Module display,","title":"What will it do?"},{"location":"assignments/week17/#who-has-done-what-beforehand","text":"","title":"Who has done what beforehand?"},{"location":"assignments/week17/#dairymilk-m6800-milk-sensors","text":"DairyMilk M6800 - Milk Sensors","title":"DairyMilk M6800 - Milk Sensors"},{"location":"assignments/week17/#milk-checker","text":"Milk Checker Datasheet This device its commonly use to verify the freshness of milk and to detect sub-clinical mastitis in the cattle. The functioning its simple: Collecting a sample of milk. Perform the test by pulsing the test button. Check a paper printed reference table of values and possible correlations. Determine a diagnostic based in the lecture.","title":"Milk Checker"},{"location":"assignments/week17/#sensirion-liquid-flow-meters","text":"Sensirion liquid flow meters","title":"Sensirion liquid flow meters"},{"location":"assignments/week17/#spectra","text":"Spectra Biomedical Imaging Device","title":"Spectra"},{"location":"assignments/week17/#what-will-you-design","text":"Prototypes: Electronic circuit DAC, ADC, and hall effect board. Food-safe hall effect flow sensor. Waterproof encase. RFID reader module. 1KHz sine wave generated by SAMD11C14 DAC capability. Summary table: I2C Communication protocol. Module Id Address Type Module RFID reader FDX 2 0x02 Student Module food-safe flow sensor 3 0x03 Student Module signal emitter (DAC output) 4 0x04 Student Module signal reader (ADC input) 5 0x05 Student Module SD card writer 6 0x06 Student Module display 1 0x01","title":"What will you design?"},{"location":"assignments/week17/#what-materials-and-components-will-be-used","text":"","title":"What materials and components will be used?"},{"location":"assignments/week17/#materials","text":"Plexiglass Food-grade silicone PCB Bolts 4mm Nuts 4mm Seal ring Wires and connectors","title":"Materials"},{"location":"assignments/week17/#components","text":"Module RFID reader FDX. ATSAMD11C14 Microcontroller. \u2026 Module food-safe flow sensor. ATSAMD11C14 Microcontroller. \u2026 Module signal emitter (DAC output). ATSAMD11C14 Microcontroller. \u2026 Module signal reader (ADC input). ATSAMD11C14 Microcontroller. \u2026 Reference Value Datasheet U5 ATSAMD11C14A-SS J4 Conn_01x04_Female ~ J3 Conn_01x04_Female ~ SW1 BUTTON_B3SN https://omronfs.omron.com/en_US/ecb/products/pdf/en-b3sn.pdf R2 10K ~ C7 1uF R8 10K ~ C3 1uF J1 Conn_01x05_Female ~ U3 Sensor_Hall-Effect_Analog_A1324LLHLT-T https://www.allegromicro.com/~/media/Files/Datasheets/A1324-5-6-Datasheet.ashx C5 0.1 uF J5 Conn_01x04_Female ~ elina-nguyen-cadoret C2 0.1uF C1 10uF D1 LED https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf R7 100 ~ C6 0.1uF C10 0.1uF J2 Conn_01x02 ~ C8 0.1uF C9 0.1uF U4 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R3 10K ~ R5 1K ~ R6 10K ~ R4 1K ~ U2 OPAMP_AD8605 https://www.analog.com/media/en/technical-documentation/data-sheets/AD8605_8606_8608.pdf R1 10K ~ C4 10pF J6 Conn_01x05_Female ~ R11 0 ~ U1 Regulator_Linear_LM3480-3.3V-100mA https://www.ti.com/lit/ds/symlink/lm3480.pdf R10 10k ~ R9 10k ~ Module SD card writer. ATSAMD11C14 Microcontroller. \u2026 Module display. ATSAMD11C14 Microcontroller. \u2026","title":"Components"},{"location":"assignments/week17/#where-will-they-come-from","text":"This materials are available in the FabLab inventory. For now all of them will come from AgriLab.","title":"Where will they come from?"},{"location":"assignments/week17/#how-much-will-they-cost","text":"The goal is less than 200 Euros. Actual price: To be determined in the next days.","title":"How much will they cost?"},{"location":"assignments/week17/#what-parts-and-systems-will-be-made","text":"Module RFID reader FDX. Module food-safe flow sensor. Module signal emitter (DAC output). Module signal reader (ADC input). Module SD card writer. Module display.","title":"What parts and systems will be made?"},{"location":"assignments/week17/#what-processes-will-be-used","text":"PCB milling with ROLAND SRM-20 Mold and casting with CNC machine. Embedded programming with Atmel MPLAB Harmony.","title":"What processes will be used?"},{"location":"assignments/week17/#what-questions-need-to-be-answered","text":"How Fat and Protein are related to the step response at certain Frequencies. Find the range of frequencies for fat and protein in fresh Milk. Find the step response of","title":"What questions need to be answered?"},{"location":"assignments/week17/#how-will-it-be-evaluated","text":"Finding a correlation between Step response and Fat Protein that could be measure with the DAC and DCA modules. - By being used in an actual farm. Note: As week22 I\u2019ve decided to change this to the next testing plan also written in week19 documentation For the testing I\u2019ve changed my idea since the time available is less for me. My testing will be to measure different samples: 100ml From a bottle milk 100ml of creme. 100ml of coca-cola 100ml of tap water. I\u2019ll take note of the values of the samples and compare the results in a table like this: Substance Samples per second Min Max Average","title":"How will it be evaluated?"},{"location":"assignments/week18/","text":"18. Invention, Intellectual Property and Business Models. \u00b6 Context \u00b6 I\u2019ve been working closely with agricultural technicians for the last 8 years in Mexico. During this time I\u2019ve realized the many challenges associated to the supply chain of reliable tools, the accessibility of data management platforms and the complexity of the existent solutions. For this reason I\u2019ve developed my final project focused on bringing an easy to access tool to help increase the reliability of milk produced by small farmers in under developed countries such as Mexico. Photo after a field trip to the Comalapa Region in the south of Mexico, close to the border to Guatemala. Photo of Holstein, Brahman cattle in the region of Ocozocuautla, Chiapas in Mexico, using RFID earrings for electronic identification. Photo of a young boy serving water to a cow during the national dairy producers expo in Jalisco, Mexico. Dissemination plan \u00b6 This project its currently supported by: AgriLab in France. The office for science and technology of the government of Chiapas state in Mexico. The MIT Global Startup Labs program. . The project its expected to have a trial and usage in 2022 in Chiapas State in Mexico in the Ocozocuautla region, with the help of the local dairy producers association. During the next months I\u2019ll apply to different seed funding initiatives to help me out continue the development of the device. In the last year I\u2019ve also know Field Ready and designed a system for tracking devices manufactured mostly in fablabs around the world with the purpose to help people in difficult environments under disaster by climate, or war. I\u2019ve also collaborated with Hackaday during the Hackaday Prize 2020 and Public Lab and got the understanding of the requirements for open-source scientific kits. My plan summarizes in this points: Trial in 2022 in Chiapas, Mexico. Develop further towards an scientific kit. Open source resources. Look out for team mates. Distributing the resources through Hackaday, Field Ready and PublicLab. Search for seed funding towards a commercial product development. Details \u00b6 About the use of seed funding resources the main points to cover for seed funding are: The associated costs to Product development prior to final product launching. Equipment or renting a space in a Fablab. Fulfill with localized legal permissions and regulations. About who will build the device: For the first three trials the device will be build by me, Antonio Anaya , but for the future steps the device is ment to be build by anyone that has access to the minimum equipment required but specially to people with access to fablabs. You will find the instructions to replicate my final project in the next link . Equipment \u00b6 For the next phase the project will require the hosting by a FabLab with the following list of equipment: Electronics lab with a sufficient inventory for microcontroller board developments and prototypes. Roland Roland SRM 20 milling machine or certified chemical etching working area. Prusa Mk3 3D printer. 120 m wide Laser cutter machine. Materials and connectors inventory. Another possibility its to acquire the equipment but that will increase the cost of the production by more than 20\u2018000 USD. Trials \u00b6 The trial will be performed by veterinary technicians from public and private institutions dedicated to monitor the quality of dairy productions in the central Region of Chiapas in Mexico. Schedule: First trial starting in January 2022. First cut in March 2022. Prototype 2 in April 2022. Second trial in May 2022. Second cut in Jun 2022. Prototype 3 in July 2022. First \u00b6 This will be the feasibility of the device. Its mean to be conducted with the help of technicians and researchers of the UNACH due to their knowledge of the location and understanding of the working conditions of the local farms in the Ocozocuautla region. The sample size will be one farm and 50 milk samples per week from different animals, for 2 months. The method will be developed by the researchers based on a Scientific Comparative experiments but it will consider the comparison current commercial solutions and the data from the MILQ device. Second \u00b6 This will be focus in the interaction and will compare two form factors of the device. Currently there\u2019s only one form factor but the second one will be developed on the following months. The methodology will be based on the \u201cDesign thinking, User Centered Product design methodology\u201d of IDEO, and Stanford and later use the data obtained will be process using AB comparison methodology Third \u00b6 This will be focus to complain with Mexican norms and standards and will consider the replacement of materials prior to a pre-commercial release. The methodology will be based on the COFEPRIS regulations in Spanish The MExican office for regulations for products for veterinarian usage. Intellectual Property \u00b6 The device will currently run under the [CERN Open Hardware License](https://ohwr.org/cernohl) [strongly reciprocal variant](https://ohwr.org/cern_ohl_s_v2.txt). This license was chosen for being a scientific hardware license, compared to the [Open Soruce Hardware Association](https://www.oshwa.org/faq/) it has stronger scientifical support. CERN Open Hardware Licence Version 2 - Strongly Reciprocal Preamble CERN has developed this licence to promote collaboration among hardware designers and to provide a legal tool which supports the freedom to use, study, modify, share and distribute hardware designs and products based on those designs. Version 2 of the CERN Open Hardware Licence comes in three variants: CERN-OHL-P (permissive); and two reciprocal licences: CERN-OHL-W (weakly reciprocal) and this licence, CERN-OHL-S (strongly reciprocal). The CERN-OHL-S is copyright CERN 2020. Anyone is welcome to use it, in unmodified form only. Use of this Licence does not imply any endorsement by CERN of any Licensor or their designs nor does it imply any involvement by CERN in their development. 1 Definitions 1.1 'Licence' means this CERN-OHL-S. 1.2 'Compatible Licence' means a) any earlier version of the CERN Open Hardware licence, or b) any version of the CERN-OHL-S, or c) any licence which permits You to treat the Source to which it applies as licensed under CERN-OHL-S provided that on Conveyance of any such Source, or any associated Product You treat the Source in question as being licensed under CERN-OHL-S. 1.3 'Source' means information such as design materials or digital code which can be applied to Make or test a Product or to prepare a Product for use, Conveyance or sale, regardless of its medium or how it is expressed. It may include Notices. 1.4 'Covered Source' means Source that is explicitly made available under this Licence. 1.5 'Product' means any device, component, work or physical object, whether in finished or intermediate form, arising from the use, application or processing of Covered Source. 1.6 'Make' means to create or configure something, whether by manufacture, assembly, compiling, loading or applying Covered Source or another Product or otherwise. 1.7 'Available Component' means any part, sub-assembly, library or code which: a) is licensed to You as Complete Source under a Compatible Licence; or b) is available, at the time a Product or the Source containing it is first Conveyed, to You and any other prospective licensees i) as a physical part with sufficient rights and information (including any configuration and programming files and information about its characteristics and interfaces) to enable it either to be Made itself, or to be sourced and used to Make the Product; or ii) as part of the normal distribution of a tool used to design or Make the Product. 1.8 'Complete Source' means the set of all Source necessary to Make a Product, in the preferred form for making modifications, including necessary installation and interfacing information both for the Product, and for any included Available Components. If the format is proprietary, it must also be made available in a format (if the proprietary tool can create it) which is viewable with a tool available to potential licensees and licensed under a licence approved by the Free Software Foundation or the Open Source Initiative. Complete Source need not include the Source of any Available Component, provided that You include in the Complete Source sufficient information to enable a recipient to Make or source and use the Available Component to Make the Product. 1.9 'Source Location' means a location where a Licensor has placed Covered Source, and which that Licensor reasonably believes will remain easily accessible for at least three years for anyone to obtain a digital copy. 1.10 'Notice' means copyright, acknowledgement and trademark notices, Source Location references, modification notices (subsection 3.3(b)) and all notices that refer to this Licence and to the disclaimer of warranties that are included in the Covered Source. 1.11 'Licensee' or 'You' means any person exercising rights under this Licence. 1.12 'Licensor' means a natural or legal person who creates or modifies Covered Source. A person may be a Licensee and a Licensor at the same time. 1.13 'Convey' means to communicate to the public or distribute. 2 Applicability 2.1 This Licence governs the use, copying, modification, Conveying of Covered Source and Products, and the Making of Products. By exercising any right granted under this Licence, You irrevocably accept these terms and conditions. 2.2 This Licence is granted by the Licensor directly to You, and shall apply worldwide and without limitation in time. 2.3 You shall not attempt to restrict by contract or otherwise the rights granted under this Licence to other Licensees. 2.4 This Licence is not intended to restrict fair use, fair dealing, or any other similar right. 3 Copying, Modifying and Conveying Covered Source 3.1 You may copy and Convey verbatim copies of Covered Source, in any medium, provided You retain all Notices. 3.2 You may modify Covered Source, other than Notices, provided that You irrevocably undertake to make that modified Covered Source available from a Source Location should You Convey a Product in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source. In each case subsection 3.3 shall apply. You may only delete Notices if they are no longer applicable to the corresponding Covered Source as modified by You and You may add additional Notices applicable to Your modifications. Including Covered Source in a larger work is modifying the Covered Source, and the larger work becomes modified Covered Source. 3.3 You may Convey modified Covered Source (with the effect that You shall also become a Licensor) provided that You: a) retain Notices as required in subsection 3.2; b) add a Notice to the modified Covered Source stating that You have modified it, with the date and brief description of how You have modified it; c) add a Source Location Notice for the modified Covered Source if You Convey in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source; and d) license the modified Covered Source under the terms and conditions of this Licence (or, as set out in subsection 8.3, a later version, if permitted by the licence of the original Covered Source). Such modified Covered Source must be licensed as a whole, but excluding Available Components contained in it, which remain licensed under their own applicable licences. 4 Making and Conveying Products You may Make Products, and/or Convey them, provided that You either provide each recipient with a copy of the Complete Source or ensure that each recipient is notified of the Source Location of the Complete Source. That Complete Source is Covered Source, and You must accordingly satisfy Your obligations set out in subsection 3.3. If specified in a Notice, the Product must visibly and securely display the Source Location on it or its packaging or documentation in the manner specified in that Notice. 5 Research and Development You may Convey Covered Source, modified Covered Source or Products to a legal entity carrying out development, testing or quality assurance work on Your behalf provided that the work is performed on terms which prevent the entity from both using the Source or Products for its own internal purposes and Conveying the Source or Products or any modifications to them to any person other than You. Any modifications made by the entity shall be deemed to be made by You pursuant to subsection 3.2. 6 DISCLAIMER AND LIABILITY 6.1 DISCLAIMER OF WARRANTY -- The Covered Source and any Products are provided 'as is' and any express or implied warranties, including, but not limited to, implied warranties of merchantability, of satisfactory quality, non-infringement of third party rights, and fitness for a particular purpose or use are disclaimed in respect of any Source or Product to the maximum extent permitted by law. The Licensor makes no representation that any Source or Product does not or will not infringe any patent, copyright, trade secret or other proprietary right. The entire risk as to the use, quality, and performance of any Source or Product shall be with You and not the Licensor. This disclaimer of warranty is an essential part of this Licence and a condition for the grant of any rights granted under this Licence. 6.2 EXCLUSION AND LIMITATION OF LIABILITY -- The Licensor shall, to the maximum extent permitted by law, have no liability for direct, indirect, special, incidental, consequential, exemplary, punitive or other damages of any character including, without limitation, procurement of substitute goods or services, loss of use, data or profits, or business interruption, however caused and on any theory of contract, warranty, tort (including negligence), product liability or otherwise, arising in any way in relation to the Covered Source, modified Covered Source and/or the Making or Conveyance of a Product, even if advised of the possibility of such damages, and You shall hold the Licensor(s) free and harmless from any liability, costs, damages, fees and expenses, including claims by third parties, in relation to such use. 7 Patents 7.1 Subject to the terms and conditions of this Licence, each Licensor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in subsections 7.2 and 8.4) patent licence to Make, have Made, use, offer to sell, sell, import, and otherwise transfer the Covered Source and Products, where such licence applies only to those patent claims licensable by such Licensor that are necessarily infringed by exercising rights under the Covered Source as Conveyed by that Licensor. 7.2 If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Covered Source or a Product constitutes direct or contributory patent infringement, or You seek any declaration that a patent licensed to You under this Licence is invalid or unenforceable then any rights granted to You under this Licence shall terminate as of the date such process is initiated. 8 General 8.1 If any provisions of this Licence are or subsequently become invalid or unenforceable for any reason, the remaining provisions shall remain effective. 8.2 You shall not use any of the name (including acronyms and abbreviations), image, or logo by which the Licensor or CERN is known, except where needed to comply with section 3, or where the use is otherwise allowed by law. Any such permitted use shall be factual and shall not be made so as to suggest any kind of endorsement or implication of involvement by the Licensor or its personnel. 8.3 CERN may publish updated versions and variants of this Licence which it considers to be in the spirit of this version, but may differ in detail to address new problems or concerns. New versions will be published with a unique version number and a variant identifier specifying the variant. If the Licensor has specified that a given variant applies to the Covered Source without specifying a version, You may treat that Covered Source as being released under any version of the CERN-OHL with that variant. If no variant is specified, the Covered Source shall be treated as being released under CERN-OHL-S. The Licensor may also specify that the Covered Source is subject to a specific version of the CERN-OHL or any later version in which case You may apply this or any later version of CERN-OHL with the same variant identifier published by CERN. 8.4 This Licence shall terminate with immediate effect if You fail to comply with any of its terms and conditions. 8.5 However, if You cease all breaches of this Licence, then Your Licence from any Licensor is reinstated unless such Licensor has terminated this Licence by giving You, while You remain in breach, a notice specifying the breach and requiring You to cure it within 30 days, and You have failed to come into compliance in all material respects by the end of the 30 day period. Should You repeat the breach after receipt of a cure notice and subsequent reinstatement, this Licence will terminate immediately and permanently. Section 6 shall continue to apply after any termination. 8.6 This Licence shall not be enforceable except by a Licensor acting as such, and third party beneficiary rights are specifically excluded. Business model based in Lean Business Canvas \u00b6 Key partners: \u00b6 Current: AgriLab in France. The office for science and technology of the government of Chiapas state in Mexico. The MIT Global Startup Labs program. . Potential: Field Ready Hackaday Public Lab Key activities: \u00b6 Decentralized manufacturing. Electronics manufacturing. Digital fabrication. Key resources: \u00b6 The minimum equipment and inventory of a FabLab its needed. The FabAcademy Network. The Field Ready network. Value propositions: \u00b6 Milk Quality control inspection device to determine quality of the milk produced \u201cin situ\u201d An supply chain simplified device accessible to difficult to access locations. A user friendly product to being used with a short learning curve. Customer relationships: \u00b6 Remote customer assistance. \u201cIn situ\u201d assistance by current technicians in field. Community workshops by region. Channels: \u00b6 Awareness: \u00b6 Currently physically reaching out local dairy production associations in the south region of Chiapas and proposing an early access to the device in exchange of the permission to participate in the trials. Evaluation: \u00b6 The device its meant to give access to small farmers to a laboratory analysis to improve their income based on the acquisition price of their dairy production. Purchase/Delivery: \u00b6 Its planned to sell and deliver the device by using the local dairy association shops under commission. There\u2019s also the option to rent the device for a limited ammount of time. After sales support will be given by Asociaci\u00f3n de veterinarios y zootecnicos de Chiapas (Vet association of Chiapas State in Mexico). Revenue streams: \u00b6 The revenue streams are still unknown but the goal price for monthly subscription to acquire the device will be 1000 MXN Month per device per farm with after sales support. The device its planned to have a annual price of 6\u2018000 MXN. Pesos. And the after sales support of 600 MXN month. They\u2019re three streams of income: Monthly subscription 1\u2018000 MXN that includes the device rent and support. One time payment for the device of $6\u2018000 MXN and one year support included. Extra after sales support 600 MXN per month. Details \u00b6 The annual production of milk in the Tropical south zone of Mexico has been 1500 million liters per year from the year 2000 to the year 2010. The average revenue of a small dairy producer in the south region in Mexico, which is the poorest region the country is a minimum of 4.2 MXN per liter, and the minimum production per day its an average of 13 liters per day per cow. The minimum amount of cattle to be part of the local dairy association is 10 cows. So the minimum brute income will be around 16\u2018000 MXN per month with an approximate production cost of 75% the final income per month will be 3\u2018000 MXN per month. This income its for the smallest of the associates but they represent only 10% of the total of producers and the average cattle per producers its around 70 cows. The real cost per device as a product its yet to be determined, the plan its to make a revenue of it, still the numbers are difficult to say given the current state of the project, in the next stages I\u2019ll update the amounts in this section. Customer segments: \u00b6 Niche market is the dairy producers who need to sustain the quality of its production and can\u2019t afford a laboratory test or facility. Currently the customers are: Asociaci\u00f3n Ganadera de Coita, Chiapas, Mexico. Asociaci\u00f3n de veterinarios y zootecnicos de Chiapas. Slide and Video for final presentation \u00b6 The final presentation of the project to Professor Neil Gershenfeld was scheduled for June 16th 2021 11:00 hrs Boston time. Slide \u00b6 video \u00b6","title":"18. Invention, Intellectual Property and Business Models."},{"location":"assignments/week18/#18-invention-intellectual-property-and-business-models","text":"","title":"18. Invention, Intellectual Property and Business Models."},{"location":"assignments/week18/#context","text":"I\u2019ve been working closely with agricultural technicians for the last 8 years in Mexico. During this time I\u2019ve realized the many challenges associated to the supply chain of reliable tools, the accessibility of data management platforms and the complexity of the existent solutions. For this reason I\u2019ve developed my final project focused on bringing an easy to access tool to help increase the reliability of milk produced by small farmers in under developed countries such as Mexico. Photo after a field trip to the Comalapa Region in the south of Mexico, close to the border to Guatemala. Photo of Holstein, Brahman cattle in the region of Ocozocuautla, Chiapas in Mexico, using RFID earrings for electronic identification. Photo of a young boy serving water to a cow during the national dairy producers expo in Jalisco, Mexico.","title":"Context"},{"location":"assignments/week18/#dissemination-plan","text":"This project its currently supported by: AgriLab in France. The office for science and technology of the government of Chiapas state in Mexico. The MIT Global Startup Labs program. . The project its expected to have a trial and usage in 2022 in Chiapas State in Mexico in the Ocozocuautla region, with the help of the local dairy producers association. During the next months I\u2019ll apply to different seed funding initiatives to help me out continue the development of the device. In the last year I\u2019ve also know Field Ready and designed a system for tracking devices manufactured mostly in fablabs around the world with the purpose to help people in difficult environments under disaster by climate, or war. I\u2019ve also collaborated with Hackaday during the Hackaday Prize 2020 and Public Lab and got the understanding of the requirements for open-source scientific kits. My plan summarizes in this points: Trial in 2022 in Chiapas, Mexico. Develop further towards an scientific kit. Open source resources. Look out for team mates. Distributing the resources through Hackaday, Field Ready and PublicLab. Search for seed funding towards a commercial product development.","title":"Dissemination plan"},{"location":"assignments/week18/#details","text":"About the use of seed funding resources the main points to cover for seed funding are: The associated costs to Product development prior to final product launching. Equipment or renting a space in a Fablab. Fulfill with localized legal permissions and regulations. About who will build the device: For the first three trials the device will be build by me, Antonio Anaya , but for the future steps the device is ment to be build by anyone that has access to the minimum equipment required but specially to people with access to fablabs. You will find the instructions to replicate my final project in the next link .","title":"Details"},{"location":"assignments/week18/#equipment","text":"For the next phase the project will require the hosting by a FabLab with the following list of equipment: Electronics lab with a sufficient inventory for microcontroller board developments and prototypes. Roland Roland SRM 20 milling machine or certified chemical etching working area. Prusa Mk3 3D printer. 120 m wide Laser cutter machine. Materials and connectors inventory. Another possibility its to acquire the equipment but that will increase the cost of the production by more than 20\u2018000 USD.","title":"Equipment"},{"location":"assignments/week18/#trials","text":"The trial will be performed by veterinary technicians from public and private institutions dedicated to monitor the quality of dairy productions in the central Region of Chiapas in Mexico. Schedule: First trial starting in January 2022. First cut in March 2022. Prototype 2 in April 2022. Second trial in May 2022. Second cut in Jun 2022. Prototype 3 in July 2022.","title":"Trials"},{"location":"assignments/week18/#first","text":"This will be the feasibility of the device. Its mean to be conducted with the help of technicians and researchers of the UNACH due to their knowledge of the location and understanding of the working conditions of the local farms in the Ocozocuautla region. The sample size will be one farm and 50 milk samples per week from different animals, for 2 months. The method will be developed by the researchers based on a Scientific Comparative experiments but it will consider the comparison current commercial solutions and the data from the MILQ device.","title":"First"},{"location":"assignments/week18/#second","text":"This will be focus in the interaction and will compare two form factors of the device. Currently there\u2019s only one form factor but the second one will be developed on the following months. The methodology will be based on the \u201cDesign thinking, User Centered Product design methodology\u201d of IDEO, and Stanford and later use the data obtained will be process using AB comparison methodology","title":"Second"},{"location":"assignments/week18/#third","text":"This will be focus to complain with Mexican norms and standards and will consider the replacement of materials prior to a pre-commercial release. The methodology will be based on the COFEPRIS regulations in Spanish The MExican office for regulations for products for veterinarian usage.","title":"Third"},{"location":"assignments/week18/#intellectual-property","text":"The device will currently run under the [CERN Open Hardware License](https://ohwr.org/cernohl) [strongly reciprocal variant](https://ohwr.org/cern_ohl_s_v2.txt). This license was chosen for being a scientific hardware license, compared to the [Open Soruce Hardware Association](https://www.oshwa.org/faq/) it has stronger scientifical support. CERN Open Hardware Licence Version 2 - Strongly Reciprocal Preamble CERN has developed this licence to promote collaboration among hardware designers and to provide a legal tool which supports the freedom to use, study, modify, share and distribute hardware designs and products based on those designs. Version 2 of the CERN Open Hardware Licence comes in three variants: CERN-OHL-P (permissive); and two reciprocal licences: CERN-OHL-W (weakly reciprocal) and this licence, CERN-OHL-S (strongly reciprocal). The CERN-OHL-S is copyright CERN 2020. Anyone is welcome to use it, in unmodified form only. Use of this Licence does not imply any endorsement by CERN of any Licensor or their designs nor does it imply any involvement by CERN in their development. 1 Definitions 1.1 'Licence' means this CERN-OHL-S. 1.2 'Compatible Licence' means a) any earlier version of the CERN Open Hardware licence, or b) any version of the CERN-OHL-S, or c) any licence which permits You to treat the Source to which it applies as licensed under CERN-OHL-S provided that on Conveyance of any such Source, or any associated Product You treat the Source in question as being licensed under CERN-OHL-S. 1.3 'Source' means information such as design materials or digital code which can be applied to Make or test a Product or to prepare a Product for use, Conveyance or sale, regardless of its medium or how it is expressed. It may include Notices. 1.4 'Covered Source' means Source that is explicitly made available under this Licence. 1.5 'Product' means any device, component, work or physical object, whether in finished or intermediate form, arising from the use, application or processing of Covered Source. 1.6 'Make' means to create or configure something, whether by manufacture, assembly, compiling, loading or applying Covered Source or another Product or otherwise. 1.7 'Available Component' means any part, sub-assembly, library or code which: a) is licensed to You as Complete Source under a Compatible Licence; or b) is available, at the time a Product or the Source containing it is first Conveyed, to You and any other prospective licensees i) as a physical part with sufficient rights and information (including any configuration and programming files and information about its characteristics and interfaces) to enable it either to be Made itself, or to be sourced and used to Make the Product; or ii) as part of the normal distribution of a tool used to design or Make the Product. 1.8 'Complete Source' means the set of all Source necessary to Make a Product, in the preferred form for making modifications, including necessary installation and interfacing information both for the Product, and for any included Available Components. If the format is proprietary, it must also be made available in a format (if the proprietary tool can create it) which is viewable with a tool available to potential licensees and licensed under a licence approved by the Free Software Foundation or the Open Source Initiative. Complete Source need not include the Source of any Available Component, provided that You include in the Complete Source sufficient information to enable a recipient to Make or source and use the Available Component to Make the Product. 1.9 'Source Location' means a location where a Licensor has placed Covered Source, and which that Licensor reasonably believes will remain easily accessible for at least three years for anyone to obtain a digital copy. 1.10 'Notice' means copyright, acknowledgement and trademark notices, Source Location references, modification notices (subsection 3.3(b)) and all notices that refer to this Licence and to the disclaimer of warranties that are included in the Covered Source. 1.11 'Licensee' or 'You' means any person exercising rights under this Licence. 1.12 'Licensor' means a natural or legal person who creates or modifies Covered Source. A person may be a Licensee and a Licensor at the same time. 1.13 'Convey' means to communicate to the public or distribute. 2 Applicability 2.1 This Licence governs the use, copying, modification, Conveying of Covered Source and Products, and the Making of Products. By exercising any right granted under this Licence, You irrevocably accept these terms and conditions. 2.2 This Licence is granted by the Licensor directly to You, and shall apply worldwide and without limitation in time. 2.3 You shall not attempt to restrict by contract or otherwise the rights granted under this Licence to other Licensees. 2.4 This Licence is not intended to restrict fair use, fair dealing, or any other similar right. 3 Copying, Modifying and Conveying Covered Source 3.1 You may copy and Convey verbatim copies of Covered Source, in any medium, provided You retain all Notices. 3.2 You may modify Covered Source, other than Notices, provided that You irrevocably undertake to make that modified Covered Source available from a Source Location should You Convey a Product in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source. In each case subsection 3.3 shall apply. You may only delete Notices if they are no longer applicable to the corresponding Covered Source as modified by You and You may add additional Notices applicable to Your modifications. Including Covered Source in a larger work is modifying the Covered Source, and the larger work becomes modified Covered Source. 3.3 You may Convey modified Covered Source (with the effect that You shall also become a Licensor) provided that You: a) retain Notices as required in subsection 3.2; b) add a Notice to the modified Covered Source stating that You have modified it, with the date and brief description of how You have modified it; c) add a Source Location Notice for the modified Covered Source if You Convey in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source; and d) license the modified Covered Source under the terms and conditions of this Licence (or, as set out in subsection 8.3, a later version, if permitted by the licence of the original Covered Source). Such modified Covered Source must be licensed as a whole, but excluding Available Components contained in it, which remain licensed under their own applicable licences. 4 Making and Conveying Products You may Make Products, and/or Convey them, provided that You either provide each recipient with a copy of the Complete Source or ensure that each recipient is notified of the Source Location of the Complete Source. That Complete Source is Covered Source, and You must accordingly satisfy Your obligations set out in subsection 3.3. If specified in a Notice, the Product must visibly and securely display the Source Location on it or its packaging or documentation in the manner specified in that Notice. 5 Research and Development You may Convey Covered Source, modified Covered Source or Products to a legal entity carrying out development, testing or quality assurance work on Your behalf provided that the work is performed on terms which prevent the entity from both using the Source or Products for its own internal purposes and Conveying the Source or Products or any modifications to them to any person other than You. Any modifications made by the entity shall be deemed to be made by You pursuant to subsection 3.2. 6 DISCLAIMER AND LIABILITY 6.1 DISCLAIMER OF WARRANTY -- The Covered Source and any Products are provided 'as is' and any express or implied warranties, including, but not limited to, implied warranties of merchantability, of satisfactory quality, non-infringement of third party rights, and fitness for a particular purpose or use are disclaimed in respect of any Source or Product to the maximum extent permitted by law. The Licensor makes no representation that any Source or Product does not or will not infringe any patent, copyright, trade secret or other proprietary right. The entire risk as to the use, quality, and performance of any Source or Product shall be with You and not the Licensor. This disclaimer of warranty is an essential part of this Licence and a condition for the grant of any rights granted under this Licence. 6.2 EXCLUSION AND LIMITATION OF LIABILITY -- The Licensor shall, to the maximum extent permitted by law, have no liability for direct, indirect, special, incidental, consequential, exemplary, punitive or other damages of any character including, without limitation, procurement of substitute goods or services, loss of use, data or profits, or business interruption, however caused and on any theory of contract, warranty, tort (including negligence), product liability or otherwise, arising in any way in relation to the Covered Source, modified Covered Source and/or the Making or Conveyance of a Product, even if advised of the possibility of such damages, and You shall hold the Licensor(s) free and harmless from any liability, costs, damages, fees and expenses, including claims by third parties, in relation to such use. 7 Patents 7.1 Subject to the terms and conditions of this Licence, each Licensor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in subsections 7.2 and 8.4) patent licence to Make, have Made, use, offer to sell, sell, import, and otherwise transfer the Covered Source and Products, where such licence applies only to those patent claims licensable by such Licensor that are necessarily infringed by exercising rights under the Covered Source as Conveyed by that Licensor. 7.2 If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Covered Source or a Product constitutes direct or contributory patent infringement, or You seek any declaration that a patent licensed to You under this Licence is invalid or unenforceable then any rights granted to You under this Licence shall terminate as of the date such process is initiated. 8 General 8.1 If any provisions of this Licence are or subsequently become invalid or unenforceable for any reason, the remaining provisions shall remain effective. 8.2 You shall not use any of the name (including acronyms and abbreviations), image, or logo by which the Licensor or CERN is known, except where needed to comply with section 3, or where the use is otherwise allowed by law. Any such permitted use shall be factual and shall not be made so as to suggest any kind of endorsement or implication of involvement by the Licensor or its personnel. 8.3 CERN may publish updated versions and variants of this Licence which it considers to be in the spirit of this version, but may differ in detail to address new problems or concerns. New versions will be published with a unique version number and a variant identifier specifying the variant. If the Licensor has specified that a given variant applies to the Covered Source without specifying a version, You may treat that Covered Source as being released under any version of the CERN-OHL with that variant. If no variant is specified, the Covered Source shall be treated as being released under CERN-OHL-S. The Licensor may also specify that the Covered Source is subject to a specific version of the CERN-OHL or any later version in which case You may apply this or any later version of CERN-OHL with the same variant identifier published by CERN. 8.4 This Licence shall terminate with immediate effect if You fail to comply with any of its terms and conditions. 8.5 However, if You cease all breaches of this Licence, then Your Licence from any Licensor is reinstated unless such Licensor has terminated this Licence by giving You, while You remain in breach, a notice specifying the breach and requiring You to cure it within 30 days, and You have failed to come into compliance in all material respects by the end of the 30 day period. Should You repeat the breach after receipt of a cure notice and subsequent reinstatement, this Licence will terminate immediately and permanently. Section 6 shall continue to apply after any termination. 8.6 This Licence shall not be enforceable except by a Licensor acting as such, and third party beneficiary rights are specifically excluded.","title":"Intellectual Property"},{"location":"assignments/week18/#business-model-based-in-lean-business-canvas","text":"","title":"Business model based in Lean Business Canvas"},{"location":"assignments/week18/#key-partners","text":"Current: AgriLab in France. The office for science and technology of the government of Chiapas state in Mexico. The MIT Global Startup Labs program. . Potential: Field Ready Hackaday Public Lab","title":"Key partners:"},{"location":"assignments/week18/#key-activities","text":"Decentralized manufacturing. Electronics manufacturing. Digital fabrication.","title":"Key activities:"},{"location":"assignments/week18/#key-resources","text":"The minimum equipment and inventory of a FabLab its needed. The FabAcademy Network. The Field Ready network.","title":"Key resources:"},{"location":"assignments/week18/#value-propositions","text":"Milk Quality control inspection device to determine quality of the milk produced \u201cin situ\u201d An supply chain simplified device accessible to difficult to access locations. A user friendly product to being used with a short learning curve.","title":"Value propositions:"},{"location":"assignments/week18/#customer-relationships","text":"Remote customer assistance. \u201cIn situ\u201d assistance by current technicians in field. Community workshops by region.","title":"Customer relationships:"},{"location":"assignments/week18/#channels","text":"","title":"Channels:"},{"location":"assignments/week18/#awareness","text":"Currently physically reaching out local dairy production associations in the south region of Chiapas and proposing an early access to the device in exchange of the permission to participate in the trials.","title":"Awareness:"},{"location":"assignments/week18/#evaluation","text":"The device its meant to give access to small farmers to a laboratory analysis to improve their income based on the acquisition price of their dairy production.","title":"Evaluation:"},{"location":"assignments/week18/#purchasedelivery","text":"Its planned to sell and deliver the device by using the local dairy association shops under commission. There\u2019s also the option to rent the device for a limited ammount of time. After sales support will be given by Asociaci\u00f3n de veterinarios y zootecnicos de Chiapas (Vet association of Chiapas State in Mexico).","title":"Purchase/Delivery:"},{"location":"assignments/week18/#revenue-streams","text":"The revenue streams are still unknown but the goal price for monthly subscription to acquire the device will be 1000 MXN Month per device per farm with after sales support. The device its planned to have a annual price of 6\u2018000 MXN. Pesos. And the after sales support of 600 MXN month. They\u2019re three streams of income: Monthly subscription 1\u2018000 MXN that includes the device rent and support. One time payment for the device of $6\u2018000 MXN and one year support included. Extra after sales support 600 MXN per month.","title":"Revenue streams:"},{"location":"assignments/week18/#details_1","text":"The annual production of milk in the Tropical south zone of Mexico has been 1500 million liters per year from the year 2000 to the year 2010. The average revenue of a small dairy producer in the south region in Mexico, which is the poorest region the country is a minimum of 4.2 MXN per liter, and the minimum production per day its an average of 13 liters per day per cow. The minimum amount of cattle to be part of the local dairy association is 10 cows. So the minimum brute income will be around 16\u2018000 MXN per month with an approximate production cost of 75% the final income per month will be 3\u2018000 MXN per month. This income its for the smallest of the associates but they represent only 10% of the total of producers and the average cattle per producers its around 70 cows. The real cost per device as a product its yet to be determined, the plan its to make a revenue of it, still the numbers are difficult to say given the current state of the project, in the next stages I\u2019ll update the amounts in this section.","title":"Details"},{"location":"assignments/week18/#customer-segments","text":"Niche market is the dairy producers who need to sustain the quality of its production and can\u2019t afford a laboratory test or facility. Currently the customers are: Asociaci\u00f3n Ganadera de Coita, Chiapas, Mexico. Asociaci\u00f3n de veterinarios y zootecnicos de Chiapas.","title":"Customer segments:"},{"location":"assignments/week18/#slide-and-video-for-final-presentation","text":"The final presentation of the project to Professor Neil Gershenfeld was scheduled for June 16th 2021 11:00 hrs Boston time.","title":"Slide and Video for final presentation"},{"location":"assignments/week18/#slide","text":"","title":"Slide"},{"location":"assignments/week18/#video","text":"","title":"video"},{"location":"assignments/week19/","text":"19. Project development. \u00b6 Introduction: \u00b6 My final project development will consist in the design and manufacture of a device inspired on this form factor: Milk Checker Datasheet Concepts of form factor and electronics: Time management \u00b6 You can check a table of my planned time management here . The method I\u2019ve used is the waterfall method of development: Requirements \u00b6 SAMD11C14 as the main micro-controller. Pros: Cheap, powerful, 32 bits, Modern, DAC: 350 ksps. Cons: limited memory: 14 Kb, Limited pinouts: 12. A display to show information. Use the i2c 20x4 ASCII display available at the fablab. Affordable battery replacement. Quick and easy to build. Interactive User Interface. Design \u00b6 The design process consisted on taking the form factor of the Milk checker (c) : Development \u00b6 From the concept to the idea and to the actual physical object I\u2019ve been thinking in ways to make it easy and quick to build. Thus for that I\u2019ve selected the next requirements The Development process its being started from 3D design. I\u2019ve used Solidworks because its a software I\u2019ve used for more than 10 years, unlike XDesign I need to use Windows OS but the stability and performance its much better on my current system a 7 year old LENOVO Y700 laptop. The materials I\u2019ve chose for the body of the device are: White Plexiglass Transparent Plexiglass Pink PLA filament I\u2019ve chose this materials because those are widely available on AgriLab inventory and the pink PLA was circumstantial since the 3D printer I\u2019ve used had this material loaded already. Circuit design had more iterations since I was trying to achieve Dielectrical spectroscopy . The configurations were: DAC Sinus Signal generator up to 80 KHz. Multivibrator 80 KHz. DAC Electrical conductivity. Design of probes or inserts for sensing. Push button board for analog output for control of the device. Software design was focus on showing the information and process the sample measurements, I had the idea to show the next information in the LCD screen. RFID number. AgriLab Logo. Graph bar. Sample size. Current sample value. Average value for all the samples. Menu for settings. Testing \u00b6 For the testing I\u2019ve changed my idea since the time available is less for me. My testing will be to measure different samples: 100ml From a bottle milk 100ml of creme. 100ml of coca-cola 100ml of tap water. I\u2019ll take note of the values of the samples and compare the results in a table like this: Substance Samples per second Min Max Average Deployment \u00b6 This process will follow the future plans of my project, that I\u2019ve explained here in the week18 material . Resume: I\u2019ll perform 3 trials starting in 2022 using the device, and will be performed by veterinary technicians from public and private institutions dedicated to monitor the quality of dairy productions in the central Region of Chiapas in Mexico. Schedule: First trial starting in January 2022. First cut in March 2022. Prototype 2 in April 2022. Second trial in May 2022. Second cut in Jun 2022. Prototype 3 in July 2022. What tasks have been completed, and what tasks remain? \u00b6 Due to a short of time caused by health issues I\u2019ve decided to cut tasks and focus in the simplest functions of the project: Completed tasks: Identify cow in production using RFID. Display information of current process. Remaining tasks: Measure the quantity of milk produced by identified cow. Estimate the Quality of milk based in its content of Fat/Protein. Save the data generated per cow. Send data over USB, serial communication. New tasks added: Identify fresh and 5 days not refrigerated milk. What has worked? what hasn\u2019t? \u00b6 The DAC output of my final project has worked but with a Frequency limited to 1 KHz, to increase the frequency of the signal generated I\u2019ve worked on a Multivibrator circuit. To generate an AC signal up to 1 MHz frequency. The Multivibrator Circuit has also worked producing a capped frequency of 40Khz. But due to multiple mistakes in the tracing process I\u2019ve had problems to finally make it to work. The operational amplifier hasn\u2019t work due to a misunderstanding of the pin out connections and components used, like the 10K Ohms resistor added to the output instead the input. Also at week22 I\u2019ve decided to change to electrical conductivity and designed a third electronic board, the output its from 1.6 to 3.3 Volts and the Input its 12 bits resolution using the analogReadResolution function of the arduino library. I\u2019ve also designed the user interface using a 20 x 4 LCD Display that uses a PCF8574 microcontroller for i2c interfacing. The LCD shows the next data: RFID value, Sample size, Current value, Average value, Graphbar, Y = samples, X = value. What questions need to be resolved? \u00b6 The correlation between dielectric spectroscopy and the quality of milk based in the proportion of Fat and Protein needs to be approached in detail and with access to a production facility. What will happen when? \u00b6 week01 to week16 week17 week18 week19 week20 week21 week22 week23 General and user research Proposals, Hardware, Software, Interaction Second prototype, Workbench test. First prototype, workbench test, feedback and rework Video demo Circuit board design and manufacturing Probes (Electrodes) design and manufacturing, software programming, testing and finishing what have you learned? \u00b6 During the last four weeks I\u2019ve experimented with different things for my final project especially for the electronics here I summarize the most important things I\u2019ve learned. Electronic circuits design in details \u00b6 During the weeks I\u2019ve learned how to produce electronics in different shapes by importing contour files in DXF format in Kicad. Button board with LEDs: Immersive electrode for the transmission of Alternate Current signals: SAMD11C14 based board for DAC 1 Khz and Analog to Digital capturing: Usage of connectors for clean wiring of electronics: I\u2019ve made a USB cable connector using a 4 pin connector instead of the USB milled connector used during the weeks on my designs. Packaging \u00b6 I\u2019ve made several iterations in the packaging development the common failures were caused by: Kerf. Brittleness of materials. Mechanical assembly of laser cut pieces. This first prototype was impossible to assembly without breaking the pieces due to its tighten assembly connections. Prototyping and iteration \u00b6 Prototyping takes time, its the most obvious thing but it can be hard to make it on time without considering every component. For that I\u2019ve reasoned in the next following steps for a successful project integration: Initial form factor design User interaction considerations Inputs and outputs Electronics design Power supply selection Location of components inside and outside the package Wiring Packaging design Joining mechanisms This reassembles the FabAcademy program and now I\u2019ve a better understanding about the order of the assignments we have been following during this weeks. DAC Signal generation with SAMD11C14 microcontroller. \u00b6 I\u2019ve learned to generated signals using the MPLAB IDE of Microchip with the Harmony library. This is the result observed in the oscilloscope.","title":"19. Project development."},{"location":"assignments/week19/#19-project-development","text":"","title":"19. Project development."},{"location":"assignments/week19/#introduction","text":"My final project development will consist in the design and manufacture of a device inspired on this form factor: Milk Checker Datasheet Concepts of form factor and electronics:","title":"Introduction:"},{"location":"assignments/week19/#time-management","text":"You can check a table of my planned time management here . The method I\u2019ve used is the waterfall method of development:","title":"Time management"},{"location":"assignments/week19/#requirements","text":"SAMD11C14 as the main micro-controller. Pros: Cheap, powerful, 32 bits, Modern, DAC: 350 ksps. Cons: limited memory: 14 Kb, Limited pinouts: 12. A display to show information. Use the i2c 20x4 ASCII display available at the fablab. Affordable battery replacement. Quick and easy to build. Interactive User Interface.","title":"Requirements"},{"location":"assignments/week19/#design","text":"The design process consisted on taking the form factor of the Milk checker (c) :","title":"Design"},{"location":"assignments/week19/#development","text":"From the concept to the idea and to the actual physical object I\u2019ve been thinking in ways to make it easy and quick to build. Thus for that I\u2019ve selected the next requirements The Development process its being started from 3D design. I\u2019ve used Solidworks because its a software I\u2019ve used for more than 10 years, unlike XDesign I need to use Windows OS but the stability and performance its much better on my current system a 7 year old LENOVO Y700 laptop. The materials I\u2019ve chose for the body of the device are: White Plexiglass Transparent Plexiglass Pink PLA filament I\u2019ve chose this materials because those are widely available on AgriLab inventory and the pink PLA was circumstantial since the 3D printer I\u2019ve used had this material loaded already. Circuit design had more iterations since I was trying to achieve Dielectrical spectroscopy . The configurations were: DAC Sinus Signal generator up to 80 KHz. Multivibrator 80 KHz. DAC Electrical conductivity. Design of probes or inserts for sensing. Push button board for analog output for control of the device. Software design was focus on showing the information and process the sample measurements, I had the idea to show the next information in the LCD screen. RFID number. AgriLab Logo. Graph bar. Sample size. Current sample value. Average value for all the samples. Menu for settings.","title":"Development"},{"location":"assignments/week19/#testing","text":"For the testing I\u2019ve changed my idea since the time available is less for me. My testing will be to measure different samples: 100ml From a bottle milk 100ml of creme. 100ml of coca-cola 100ml of tap water. I\u2019ll take note of the values of the samples and compare the results in a table like this: Substance Samples per second Min Max Average","title":"Testing"},{"location":"assignments/week19/#deployment","text":"This process will follow the future plans of my project, that I\u2019ve explained here in the week18 material . Resume: I\u2019ll perform 3 trials starting in 2022 using the device, and will be performed by veterinary technicians from public and private institutions dedicated to monitor the quality of dairy productions in the central Region of Chiapas in Mexico. Schedule: First trial starting in January 2022. First cut in March 2022. Prototype 2 in April 2022. Second trial in May 2022. Second cut in Jun 2022. Prototype 3 in July 2022.","title":"Deployment"},{"location":"assignments/week19/#what-tasks-have-been-completed-and-what-tasks-remain","text":"Due to a short of time caused by health issues I\u2019ve decided to cut tasks and focus in the simplest functions of the project: Completed tasks: Identify cow in production using RFID. Display information of current process. Remaining tasks: Measure the quantity of milk produced by identified cow. Estimate the Quality of milk based in its content of Fat/Protein. Save the data generated per cow. Send data over USB, serial communication. New tasks added: Identify fresh and 5 days not refrigerated milk.","title":"What tasks have been completed, and what tasks remain?"},{"location":"assignments/week19/#what-has-worked-what-hasnt","text":"The DAC output of my final project has worked but with a Frequency limited to 1 KHz, to increase the frequency of the signal generated I\u2019ve worked on a Multivibrator circuit. To generate an AC signal up to 1 MHz frequency. The Multivibrator Circuit has also worked producing a capped frequency of 40Khz. But due to multiple mistakes in the tracing process I\u2019ve had problems to finally make it to work. The operational amplifier hasn\u2019t work due to a misunderstanding of the pin out connections and components used, like the 10K Ohms resistor added to the output instead the input. Also at week22 I\u2019ve decided to change to electrical conductivity and designed a third electronic board, the output its from 1.6 to 3.3 Volts and the Input its 12 bits resolution using the analogReadResolution function of the arduino library. I\u2019ve also designed the user interface using a 20 x 4 LCD Display that uses a PCF8574 microcontroller for i2c interfacing. The LCD shows the next data: RFID value, Sample size, Current value, Average value, Graphbar, Y = samples, X = value.","title":"What has worked? what hasn't?"},{"location":"assignments/week19/#what-questions-need-to-be-resolved","text":"The correlation between dielectric spectroscopy and the quality of milk based in the proportion of Fat and Protein needs to be approached in detail and with access to a production facility.","title":"What questions need to be resolved?"},{"location":"assignments/week19/#what-will-happen-when","text":"week01 to week16 week17 week18 week19 week20 week21 week22 week23 General and user research Proposals, Hardware, Software, Interaction Second prototype, Workbench test. First prototype, workbench test, feedback and rework Video demo Circuit board design and manufacturing Probes (Electrodes) design and manufacturing, software programming, testing and finishing","title":"What will happen when?"},{"location":"assignments/week19/#what-have-you-learned","text":"During the last four weeks I\u2019ve experimented with different things for my final project especially for the electronics here I summarize the most important things I\u2019ve learned.","title":"what have you learned?"},{"location":"assignments/week19/#electronic-circuits-design-in-details","text":"During the weeks I\u2019ve learned how to produce electronics in different shapes by importing contour files in DXF format in Kicad. Button board with LEDs: Immersive electrode for the transmission of Alternate Current signals: SAMD11C14 based board for DAC 1 Khz and Analog to Digital capturing: Usage of connectors for clean wiring of electronics: I\u2019ve made a USB cable connector using a 4 pin connector instead of the USB milled connector used during the weeks on my designs.","title":"Electronic circuits design in details"},{"location":"assignments/week19/#packaging","text":"I\u2019ve made several iterations in the packaging development the common failures were caused by: Kerf. Brittleness of materials. Mechanical assembly of laser cut pieces. This first prototype was impossible to assembly without breaking the pieces due to its tighten assembly connections.","title":"Packaging"},{"location":"assignments/week19/#prototyping-and-iteration","text":"Prototyping takes time, its the most obvious thing but it can be hard to make it on time without considering every component. For that I\u2019ve reasoned in the next following steps for a successful project integration: Initial form factor design User interaction considerations Inputs and outputs Electronics design Power supply selection Location of components inside and outside the package Wiring Packaging design Joining mechanisms This reassembles the FabAcademy program and now I\u2019ve a better understanding about the order of the assignments we have been following during this weeks.","title":"Prototyping and iteration"},{"location":"assignments/week19/#dac-signal-generation-with-samd11c14-microcontroller","text":"I\u2019ve learned to generated signals using the MPLAB IDE of Microchip with the Harmony library. This is the result observed in the oscilloscope.","title":"DAC Signal generation with SAMD11C14 microcontroller."},{"location":"projects/final-project/","text":"Final Project \u00b6 On site Milk QC and animal identification system: \u00b6 What will it do? \u00b6 Identify cow in production. Using RFID reader. Display information of the current process. - Using a LCD display. Identify fresh milk - Using AC current Who has done what beforehand? \u00b6 The device I\u2019m using as reference its the Milk Checker. Datasheet This device its commonly use to verify the freshness of milk and to detect sub-clinical mastitis in the cattle. The functioning its simple: Collecting a sample of milk. Perform the test by pulsing the test button. Check a paper printed reference table of values and possible correlations. Determine a diagnostic based in the lecture. Introduction \u00b6 While working in Mexico, I discovered the need for an affordable data acquisition system. Project board: Project management table \u00b6 week01 week02 week03 week04 week05 General and user research Proposals, Hardware, Software, Interaction Video demo First prototype, workbench test, feedback and rework Second prototype, Workbench test, field test, feedback and rework Context \u00b6 Why? \u00b6 Currently RFID is the preferred technology for farm animals identification, in Mexico this is something that has been unsuccessfully deployed due to multiple factors, but the most important one is supply chain and distribution. RFID stands for Radio Frequency Identification , in animal identification it can be found as a earring, a collar or skin implant. In Mexico the standard RFID earring is imported and then distributed, making it not accessible to small producers in rural areas, and they are the bast majority of producers making almost 60% of the country total production. Worldwide we can find the same situation in underdeveloped countries. Idea \u00b6 My idea is to design a RFID system that can be made on FabLabs and also an Milk Quality control sensor to measure protein/fat content and also somatic cells. Somatic cells are present as part of animals immune system, and some diseases can be prevented by counting somatic cells in the dairy production. Objectives \u00b6 My approach for a sustainable farm is the one that makes decisions based on data captured in the working field, to make a better use of natural resources and also all sort of different supplies. The indiscriminate use of hormones and antibiotics in animals is a problem that affects current disease control systems, producers financial viability and the consumer. One of the objectives is to identify diseases while in the dairy production and apply the antibiotics on the affected animal. Currently most farmers apply vaccines periodically without any analysis and this makes vaccination an expensive activity that most producers avoid because of their current financial status. About Spectroscopy \u00b6 To indirectly measure fat/protein in milk I\u2019ve found spectroscopy as a viable solution. Currently they\u2019re cheaper CHIPS like the AS7265x that can be used to classify previously measured fat/protein samples of milk based in their measured spectrum. So one of the steps in this research will be to measure a variety of milk samples using the AS7265x and a laboratory standard spectrometer to correlate the results. About UxD \u00b6 The other important aspect I\u2019m considering for this project is the interaction design. User-centered design for agriculture is an important topic, since most tools need an specialized trained professional to be used. In some places this will not be a problem, but in Mexico, in my region the technicians/animals is 3000 animals for each technician. A comparison of current methods in Mexico and a Experimental farm in France: \u00b6 https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/en/ increase visitors in your website Project description: \u00b6 Challenge: To develop an affordable device for cow milk production measurement and quality checking. Characteristics: Supply-chain reduced components. Food-safe components for the parts in contact with the milk. Adaptable to different countries and their local regulations or tech level. Functions: Read RFID current existing earrings Meassure automatically ammount of milk produced for each animal on a production. Meassure a sample for milk quality control. Parts: 4 Milk flow meter on for each cow\u2019s udder. RFID earring reader. Spectral sensor for substance identification Dielectric spectroscopy sensor. User: Field veterinary technicians. Dairy production managers. Researchers. Quality control technicians. Sketches \u00b6 Hall effect circuit board sketch: Pipe milk conduct to fluid sensor connector: Flow sensor sketch 01: Flow sensor sketch 02: Microfluids sketch: Electrode design sketch: Tests \u00b6 Testing SLA 3D printing, I would like to cast this pieces in food-safe silicone. This is my first attempt to make a circuit board with a hall effect sensor that I\u2019ll use later for the flow sensor. This is a test of the ISO11784 RFID module that will be used to read Cow earrings. Week13 \u00b6 During this week I\u2019ve the need to have access to a chemistry or lab kit, to test samples of solutions of water, fat and casein protein.","title":"Final Project"},{"location":"projects/final-project/#final-project","text":"","title":"Final Project"},{"location":"projects/final-project/#on-site-milk-qc-and-animal-identification-system","text":"","title":"On site Milk QC and animal identification system:"},{"location":"projects/final-project/#what-will-it-do","text":"Identify cow in production. Using RFID reader. Display information of the current process. - Using a LCD display. Identify fresh milk - Using AC current","title":"What will it do?"},{"location":"projects/final-project/#who-has-done-what-beforehand","text":"The device I\u2019m using as reference its the Milk Checker. Datasheet This device its commonly use to verify the freshness of milk and to detect sub-clinical mastitis in the cattle. The functioning its simple: Collecting a sample of milk. Perform the test by pulsing the test button. Check a paper printed reference table of values and possible correlations. Determine a diagnostic based in the lecture.","title":"Who has done what beforehand?"},{"location":"projects/final-project/#introduction","text":"While working in Mexico, I discovered the need for an affordable data acquisition system. Project board:","title":"Introduction"},{"location":"projects/final-project/#project-management-table","text":"week01 week02 week03 week04 week05 General and user research Proposals, Hardware, Software, Interaction Video demo First prototype, workbench test, feedback and rework Second prototype, Workbench test, field test, feedback and rework","title":"Project management table"},{"location":"projects/final-project/#context","text":"","title":"Context"},{"location":"projects/final-project/#why","text":"Currently RFID is the preferred technology for farm animals identification, in Mexico this is something that has been unsuccessfully deployed due to multiple factors, but the most important one is supply chain and distribution. RFID stands for Radio Frequency Identification , in animal identification it can be found as a earring, a collar or skin implant. In Mexico the standard RFID earring is imported and then distributed, making it not accessible to small producers in rural areas, and they are the bast majority of producers making almost 60% of the country total production. Worldwide we can find the same situation in underdeveloped countries.","title":"Why?"},{"location":"projects/final-project/#idea","text":"My idea is to design a RFID system that can be made on FabLabs and also an Milk Quality control sensor to measure protein/fat content and also somatic cells. Somatic cells are present as part of animals immune system, and some diseases can be prevented by counting somatic cells in the dairy production.","title":"Idea"},{"location":"projects/final-project/#objectives","text":"My approach for a sustainable farm is the one that makes decisions based on data captured in the working field, to make a better use of natural resources and also all sort of different supplies. The indiscriminate use of hormones and antibiotics in animals is a problem that affects current disease control systems, producers financial viability and the consumer. One of the objectives is to identify diseases while in the dairy production and apply the antibiotics on the affected animal. Currently most farmers apply vaccines periodically without any analysis and this makes vaccination an expensive activity that most producers avoid because of their current financial status.","title":"Objectives"},{"location":"projects/final-project/#about-spectroscopy","text":"To indirectly measure fat/protein in milk I\u2019ve found spectroscopy as a viable solution. Currently they\u2019re cheaper CHIPS like the AS7265x that can be used to classify previously measured fat/protein samples of milk based in their measured spectrum. So one of the steps in this research will be to measure a variety of milk samples using the AS7265x and a laboratory standard spectrometer to correlate the results.","title":"About Spectroscopy"},{"location":"projects/final-project/#about-uxd","text":"The other important aspect I\u2019m considering for this project is the interaction design. User-centered design for agriculture is an important topic, since most tools need an specialized trained professional to be used. In some places this will not be a problem, but in Mexico, in my region the technicians/animals is 3000 animals for each technician.","title":"About UxD"},{"location":"projects/final-project/#a-comparison-of-current-methods-in-mexico-and-a-experimental-farm-in-france","text":"https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/es/ afforadablle targeted web traffic https://youtubeembedcode.com/en/ increase visitors in your website","title":"A comparison of current methods in Mexico and a Experimental farm in France:"},{"location":"projects/final-project/#project-description","text":"Challenge: To develop an affordable device for cow milk production measurement and quality checking. Characteristics: Supply-chain reduced components. Food-safe components for the parts in contact with the milk. Adaptable to different countries and their local regulations or tech level. Functions: Read RFID current existing earrings Meassure automatically ammount of milk produced for each animal on a production. Meassure a sample for milk quality control. Parts: 4 Milk flow meter on for each cow\u2019s udder. RFID earring reader. Spectral sensor for substance identification Dielectric spectroscopy sensor. User: Field veterinary technicians. Dairy production managers. Researchers. Quality control technicians.","title":"Project description:"},{"location":"projects/final-project/#sketches","text":"Hall effect circuit board sketch: Pipe milk conduct to fluid sensor connector: Flow sensor sketch 01: Flow sensor sketch 02: Microfluids sketch: Electrode design sketch:","title":"Sketches"},{"location":"projects/final-project/#tests","text":"Testing SLA 3D printing, I would like to cast this pieces in food-safe silicone. This is my first attempt to make a circuit board with a hall effect sensor that I\u2019ll use later for the flow sensor. This is a test of the ISO11784 RFID module that will be used to read Cow earrings.","title":"Tests"},{"location":"projects/final-project/#week13","text":"During this week I\u2019ve the need to have access to a chemistry or lab kit, to test samples of solutions of water, fat and casein protein.","title":"Week13"},{"location":"projects/for_replication/","text":"Final project: MILQ \u00b6 Description \u00b6 MILQ its a device for checking the freshness of a milk sample by measuring electrical conductivity, it uses a disposable espresso cup as sample collector and plots a graph on its LCD display, and reads FDX RFID 134KHZ animal earring tags. Characteristics: Based on ATSAMD11C14A ARM 32 bits Microcontroller. up to 800 Samples on 10 secs. 9V battery Reads FDX Animal tag rfid. Results obtained: The device measures electrical conductivity of samples, thus it could be programmed to measure pH of substances. You can check this tests License \u00b6 CERN Open Hardware Licence Version 2 - Strongly Reciprocal CERN Open Hardware Licence Version 2 - Strongly Reciprocal Preamble CERN has developed this licence to promote collaboration among hardware designers and to provide a legal tool which supports the freedom to use, study, modify, share and distribute hardware designs and products based on those designs. Version 2 of the CERN Open Hardware Licence comes in three variants: CERN-OHL-P (permissive); and two reciprocal licences: CERN-OHL-W (weakly reciprocal) and this licence, CERN-OHL-S (strongly reciprocal). The CERN-OHL-S is copyright CERN 2020. Anyone is welcome to use it, in unmodified form only. Use of this Licence does not imply any endorsement by CERN of any Licensor or their designs nor does it imply any involvement by CERN in their development. 1 Definitions 1.1 'Licence' means this CERN-OHL-S. 1.2 'Compatible Licence' means a) any earlier version of the CERN Open Hardware licence, or b) any version of the CERN-OHL-S, or c) any licence which permits You to treat the Source to which it applies as licensed under CERN-OHL-S provided that on Conveyance of any such Source, or any associated Product You treat the Source in question as being licensed under CERN-OHL-S. 1.3 'Source' means information such as design materials or digital code which can be applied to Make or test a Product or to prepare a Product for use, Conveyance or sale, regardless of its medium or how it is expressed. It may include Notices. 1.4 'Covered Source' means Source that is explicitly made available under this Licence. 1.5 'Product' means any device, component, work or physical object, whether in finished or intermediate form, arising from the use, application or processing of Covered Source. 1.6 'Make' means to create or configure something, whether by manufacture, assembly, compiling, loading or applying Covered Source or another Product or otherwise. 1.7 'Available Component' means any part, sub-assembly, library or code which: a) is licensed to You as Complete Source under a Compatible Licence; or b) is available, at the time a Product or the Source containing it is first Conveyed, to You and any other prospective licensees i) as a physical part with sufficient rights and information (including any configuration and programming files and information about its characteristics and interfaces) to enable it either to be Made itself, or to be sourced and used to Make the Product; or ii) as part of the normal distribution of a tool used to design or Make the Product. 1.8 'Complete Source' means the set of all Source necessary to Make a Product, in the preferred form for making modifications, including necessary installation and interfacing information both for the Product, and for any included Available Components. If the format is proprietary, it must also be made available in a format (if the proprietary tool can create it) which is viewable with a tool available to potential licensees and licensed under a licence approved by the Free Software Foundation or the Open Source Initiative. Complete Source need not include the Source of any Available Component, provided that You include in the Complete Source sufficient information to enable a recipient to Make or source and use the Available Component to Make the Product. 1.9 'Source Location' means a location where a Licensor has placed Covered Source, and which that Licensor reasonably believes will remain easily accessible for at least three years for anyone to obtain a digital copy. 1.10 'Notice' means copyright, acknowledgement and trademark notices, Source Location references, modification notices (subsection 3.3(b)) and all notices that refer to this Licence and to the disclaimer of warranties that are included in the Covered Source. 1.11 'Licensee' or 'You' means any person exercising rights under this Licence. 1.12 'Licensor' means a natural or legal person who creates or modifies Covered Source. A person may be a Licensee and a Licensor at the same time. 1.13 'Convey' means to communicate to the public or distribute. 2 Applicability 2.1 This Licence governs the use, copying, modification, Conveying of Covered Source and Products, and the Making of Products. By exercising any right granted under this Licence, You irrevocably accept these terms and conditions. 2.2 This Licence is granted by the Licensor directly to You, and shall apply worldwide and without limitation in time. 2.3 You shall not attempt to restrict by contract or otherwise the rights granted under this Licence to other Licensees. 2.4 This Licence is not intended to restrict fair use, fair dealing, or any other similar right. 3 Copying, Modifying and Conveying Covered Source 3.1 You may copy and Convey verbatim copies of Covered Source, in any medium, provided You retain all Notices. 3.2 You may modify Covered Source, other than Notices, provided that You irrevocably undertake to make that modified Covered Source available from a Source Location should You Convey a Product in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source. In each case subsection 3.3 shall apply. You may only delete Notices if they are no longer applicable to the corresponding Covered Source as modified by You and You may add additional Notices applicable to Your modifications. Including Covered Source in a larger work is modifying the Covered Source, and the larger work becomes modified Covered Source. 3.3 You may Convey modified Covered Source (with the effect that You shall also become a Licensor) provided that You: a) retain Notices as required in subsection 3.2; b) add a Notice to the modified Covered Source stating that You have modified it, with the date and brief description of how You have modified it; c) add a Source Location Notice for the modified Covered Source if You Convey in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source; and d) license the modified Covered Source under the terms and conditions of this Licence (or, as set out in subsection 8.3, a later version, if permitted by the licence of the original Covered Source). Such modified Covered Source must be licensed as a whole, but excluding Available Components contained in it, which remain licensed under their own applicable licences. 4 Making and Conveying Products You may Make Products, and/or Convey them, provided that You either provide each recipient with a copy of the Complete Source or ensure that each recipient is notified of the Source Location of the Complete Source. That Complete Source is Covered Source, and You must accordingly satisfy Your obligations set out in subsection 3.3. If specified in a Notice, the Product must visibly and securely display the Source Location on it or its packaging or documentation in the manner specified in that Notice. 5 Research and Development You may Convey Covered Source, modified Covered Source or Products to a legal entity carrying out development, testing or quality assurance work on Your behalf provided that the work is performed on terms which prevent the entity from both using the Source or Products for its own internal purposes and Conveying the Source or Products or any modifications to them to any person other than You. Any modifications made by the entity shall be deemed to be made by You pursuant to subsection 3.2. 6 DISCLAIMER AND LIABILITY 6.1 DISCLAIMER OF WARRANTY -- The Covered Source and any Products are provided 'as is' and any express or implied warranties, including, but not limited to, implied warranties of merchantability, of satisfactory quality, non-infringement of third party rights, and fitness for a particular purpose or use are disclaimed in respect of any Source or Product to the maximum extent permitted by law. The Licensor makes no representation that any Source or Product does not or will not infringe any patent, copyright, trade secret or other proprietary right. The entire risk as to the use, quality, and performance of any Source or Product shall be with You and not the Licensor. This disclaimer of warranty is an essential part of this Licence and a condition for the grant of any rights granted under this Licence. 6.2 EXCLUSION AND LIMITATION OF LIABILITY -- The Licensor shall, to the maximum extent permitted by law, have no liability for direct, indirect, special, incidental, consequential, exemplary, punitive or other damages of any character including, without limitation, procurement of substitute goods or services, loss of use, data or profits, or business interruption, however caused and on any theory of contract, warranty, tort (including negligence), product liability or otherwise, arising in any way in relation to the Covered Source, modified Covered Source and/or the Making or Conveyance of a Product, even if advised of the possibility of such damages, and You shall hold the Licensor(s) free and harmless from any liability, costs, damages, fees and expenses, including claims by third parties, in relation to such use. 7 Patents 7.1 Subject to the terms and conditions of this Licence, each Licensor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in subsections 7.2 and 8.4) patent licence to Make, have Made, use, offer to sell, sell, import, and otherwise transfer the Covered Source and Products, where such licence applies only to those patent claims licensable by such Licensor that are necessarily infringed by exercising rights under the Covered Source as Conveyed by that Licensor. 7.2 If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Covered Source or a Product constitutes direct or contributory patent infringement, or You seek any declaration that a patent licensed to You under this Licence is invalid or unenforceable then any rights granted to You under this Licence shall terminate as of the date such process is initiated. 8 General 8.1 If any provisions of this Licence are or subsequently become invalid or unenforceable for any reason, the remaining provisions shall remain effective. 8.2 You shall not use any of the name (including acronyms and abbreviations), image, or logo by which the Licensor or CERN is known, except where needed to comply with section 3, or where the use is otherwise allowed by law. Any such permitted use shall be factual and shall not be made so as to suggest any kind of endorsement or implication of involvement by the Licensor or its personnel. 8.3 CERN may publish updated versions and variants of this Licence which it considers to be in the spirit of this version, but may differ in detail to address new problems or concerns. New versions will be published with a unique version number and a variant identifier specifying the variant. If the Licensor has specified that a given variant applies to the Covered Source without specifying a version, You may treat that Covered Source as being released under any version of the CERN-OHL with that variant. If no variant is specified, the Covered Source shall be treated as being released under CERN-OHL-S. The Licensor may also specify that the Covered Source is subject to a specific version of the CERN-OHL or any later version in which case You may apply this or any later version of CERN-OHL with the same variant identifier published by CERN. 8.4 This Licence shall terminate with immediate effect if You fail to comply with any of its terms and conditions. 8.5 However, if You cease all breaches of this Licence, then Your Licence from any Licensor is reinstated unless such Licensor has terminated this Licence by giving You, while You remain in breach, a notice specifying the breach and requiring You to cure it within 30 days, and You have failed to come into compliance in all material respects by the end of the 30 day period. Should You repeat the breach after receipt of a cure notice and subsequent reinstatement, this Licence will terminate immediately and permanently. Section 6 shall continue to apply after any termination. 8.6 This Licence shall not be enforceable except by a Licensor acting as such, and third party beneficiary rights are specifically excluded. BOM \u00b6 All this material was found in the inventory of Agrilab and was acquired from different vendors like Digikey check the lists bellow and find the suppliers in the links indicated. Tools: \u00b6 Tool Specifications Roland SRM-20 milling machine or alike Sacrificial plate is needed for safety of the machine Prusa i3 Mk2 3D printer machine or alike Resolution needed to 0.10 mm for maximum dimensional accuracy with 0.4 mm nozzle. Laser cutting machine Effective working area more than 50 x 50 cms, power 150 Watts, CO2 and security protocol compliant trained operation, Clean working space and Fire Extinguisher is mandatory Weller Pu-81 Soldering iron or alike Precision tip for maximum accuracy, tool folder for comfort and security Supplies: \u00b6 Material Quantity Price Specifications Plexiglass 75 x 15 cms or 40 x 30 cms 32.24 Euro/ m^2 6 mm thickness transparent or translucent PLA Filament for 3D printer > 10 grams 1.75 diameter FR1 Electronic board for milling > 14 x 9 cms 1.8 mm thickness, flat , single sided 1.0 mm milling bit Multiple This tip is used for milling the FR1 electronic board, maximum quality the better for accurate trace milling 0.4 mm milling bit Multiple x2 This tip is used for milling the FR1 electronic board, maximum quality the better for accurate trace milling, this component its extremely fragile Double face tape 1 roll Stickiness should be enough to fix the FR1 to the sacrificial layer during the milling process Wires: \u00b6 Color Quantity Specifications Price Red > 80 centimeter Caliber AWG 24 17.22 USD Blue > 80 centimeter Caliber AWG 24 4.75 USD Optional 1 > 30 centimeter Caliber AWG 24 4.75 USD Optional 2 > 30 centimeter Caliber AWG 24 4.75 USD 10 wires flat cable 1.27 mm pitch JTAG connector Connectors: \u00b6 Type Quantity Specifications Dupont JST XH Link for purchasing 2 Pins 6 male and female, plus connectors 3 Pins 1 male and female, plus connectors 4 Pins 4 male and female, plus connectors Dupont Jumper Pin Link for purchasing 4 Pins 1 female, plus connectors JTAG self punching 2x5 1 female, 1.27 mm pitch Joinery (plastic): \u00b6 Link 9.90 USD Type Quantity Specifications Nylon hexagonal spacers 2 5 mm spacer Nylon hexagonal nuts 14 3 mm height Nylon bolt 2 6 mm height Nylon bolt 4 12 mm height Joinery (metal): \u00b6 Link 19.99 USD Type Quantity Specifications M2 precision bolt 8 M2 hexagonal nut 8 Electronic components: \u00b6 Control board components: \u00b6 Reference Value Price Buy Footprint Datasheet J3 Conn_01x04_Female digikey:PinHeader_1x4_P2.5mm_Drill1.1mm ~ R2 10K 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ C7 0.1uF 0.36 USD https://www.digikey.com/en/products/detail/kemet/C1206C104KARACTU/992167?s=N4IgTCBcDaIMwE4EFoAsA2A7K5BGZAcgCIgC6AvkA fabacademy2021:C_1206 C3 1uF 0.28 USD https://www.digikey.com/en/products/detail/tdk-corporation/C3216X7R1H105K160AB/569049?s=N4IgTCBcDaICxwKwFoCMcwGY3IHIBEQBdAXyA fabacademy2021:C_1206 J5 Conn_01x04_Female digikey:PinHeader_1x4_P2.5mm_Drill1.1mm ~ D1 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf R7 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ C6 0.1uF 0.36 USD N4IgTCBcDaIMwE4EFoAsA2A7K5BGZAcgCIgC6AvkA fabacademy2021:C_1206 J6 Conn_01x05_Female digikey:PinHeader_1x5_P2.5mm_Drill1.1mm ~ U1 Regulator_Linear_LM3480-3.3V-100mA 1.15 USD https://www.digikey.com/en/products/detail/texas-instruments/LM3480IM3-3-3-NOPB/270720?s=N4IgTCBcDaIDIFkDMAWAHABgJLILRIDokB6AOQHkAFAIQGEAVXUgERAF0BfIA fabacademy2021:fab-SOT23 https://www.ti.com/lit/ds/symlink/lm3480.pdf R10 10k 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ R9 10k 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ J1 Conn_ARM_JTAG_SWD_10 fabacademy2021:fab-SWD10pin127pitch.lib http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/DDI0314H_coresight_components_trm.pdf R11 0 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206JR-070RL/729184?s=N4IgTCBcDaIMwEYEFoAMA6VBRASgYQBVkA5AERAF0BfIA fabacademy2021:R_1206 ~ R8 10K 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ U5 ATSAMD11C14A-SS 1.39 USD https://www.digikey.com/en/products/detail/microchip-technology/ATSAMD11C14A-SSUT/5226470 fabacademy2021:SOIC-14_3.9x8.7mm_P1.27mm J2 Conn_01x02 digikey:PinHeader_1x2_P2.5mm_Drill1.1mm ~ J4 Conn_01x02 digikey:PinHeader_1x2_P2.5mm_Drill1.1mm ~ R1 0 0.10 USD N4IgTCBcDaIMwEYEFoAMA6VBRASgYQBVkA5AERAF0BfIA fabacademy2021:R_1206 ~ C9 0.1uF 0.30 USD N4IgTCBcDaIMwE4EFoAsA2A7K5BGZAcgCIgC6AvkA fabacademy2021:C_1206 U2 Regulator_Linear_NCP1117-5.0V-1A 0.56 USD https://www.digikey.com/en/products/detail/on-semiconductor/NCP1117ST50T3G/921289?s=N4IgTCBcDaIHIGEAKBGNB2AygFQKwAZsBmAcQHlMFsBaOAERAF0BfIA fabacademy2021:SOT-223-3_TabPin2 https://www.onsemi.com/pub/Collateral/NCP1117-D.PDF C2 1uF 0.28 USD N4IgTCBcDaICxwKwFoCMcwGY3IHIBEQBdAXyA fabacademy2021:C_1206 ~ J7 Conn_01x02_Female digikey:PinHeader_1x2_P2.5mm_Drill1.1mm ~ R3 50 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0749R9L/728942?s=N4IgTCBcDaIMwEYEFoAsBOAdOgYgJQGEAVZAOQBEQBdAXyA fabacademy2021:R_1206 ~ D2 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf Q1 MOSFET_P-CH_30V_1.1A 0.47 USD https://www.digikey.com/en/products/detail/on-semiconductor/NDS356AP/458900?s=N4IgTCBcDaIHIBEDKBmArANgIIAUDCAKgLSIgC6AvkA fabacademy2021:fab-SOT-23 https://www.onsemi.com/pub/Collateral/NDS356AP-D.PDF C1 1uF 0.30 USD https://www.digikey.com/en/products/detail/tdk-corporation/C3216X7R1H105K160AB/569049?s=N4IgTCBcDaICxwKwFoCMcwGY3IHIBEQBdAXyA fabacademy2021:C_1206 ~ Estimated cost: 6.51 USD without connectors Button board components \u00b6 Reference Value Price Buy Footprint Datasheet SW1 BUTTON_PTS636 1.02 USD https://www.digikey.com/en/products/detail/omron-electronics-inc-emc-div/B3SN-3012P/9717 fabacademy2021:Button_Omron_B3SN_6x6mm https://dznh3ojzb2azq.cloudfront.net/products/Tactile/PTS636/documents/datasheet.pdf R6 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ R2 0 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206JR-070RL/729184?s=N4IgTCBcDaIMwEYEFoAMA6VBRASgYQBVkA5AERAF0BfIA fabacademy2021:R_1206 ~ R4 50 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0749R9L/728942?s=N4IgTCBcDaIMwEYEFoAsBOAdOgYgJQGEAVZAOQBEQBdAXyA fabacademy2021:R_1206 ~ R8 1k 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-071KL/728387?s=N4IgTCBcDaIMwEYEFoEDoAMGDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ SW2 BUTTON_PTS636 1.02 USD https://www.digikey.com/en/products/detail/omron-electronics-inc-emc-div/B3SN-3012P/9717 fabacademy2021:Button_Omron_B3SN_6x6mm https://dznh3ojzb2azq.cloudfront.net/products/Tactile/PTS636/documents/datasheet.pdf SW3 BUTTON_PTS636 1.02 USD https://www.digikey.com/en/products/detail/omron-electronics-inc-emc-div/B3SN-3012P/9717 fabacademy2021:Button_Omron_B3SN_6x6mm https://dznh3ojzb2azq.cloudfront.net/products/Tactile/PTS636/documents/datasheet.pdf J1 Conn_01x03_Female USD digikey:PinHeader_1x3_P2.54mm_Drill1.02mm ~ R7 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ D3 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 ~ R5 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ D2 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C150CKT/269214?s=N4IgTCBcDaIIwDYAMBaOiDsaUDkAiIAugL5A fabacademy2021:LED_1206 ~ R3 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ D1 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 ~ Estimated cost: 4.15 USD with out connectors Files \u00b6 Files for laser cut \u00b6 Settings for 100 Watts CO2 laser cutter machine: Speed: 15 Power: 20 Files for approximate kerf: 0.2 mm. Piece Quantity File Side plate 3 side plate Piece Quantity File Switch plate 1 switch plate Piece Quantity File Front plate 1 Front plate Piece Quantity File Rear plate 1 rear plate Piece Quantity File Middle plate 1 middle plate Files for 3D printing \u00b6 Settings for FDM 1.75 mm heated bed printer: Infill: 10% Generic PLA filament First layer: - Layer height: 0.20 mm - Nozzle temp: 215 C - Bed temp: 60 C Other layers: - Layer height: 0.20 mm - 210 C - 60 C Shell: 2 Solid layers every 4 layers Minimum wall thickness: 0.7 mm Perimeter speed: 50 mm/s External perimeter speed: 35 mm/s Download Prusa Slicer configuration file Download Prusa Slicer adjustments Piece Quantity File Buttons 1 buttons This link redirects to a pre-filled form of the price calculator. 2.32 Euros by Prusa price calculator Piece Quantity File Holders 4 Holders This link downloads the price pdf file generated by Prusa Price calculator 2.12 Euros by Prusa price calculator Files for circuit milling \u00b6 Buttons \u00b6 Download Piece Quantity Traces Text Holes Outline Buttons board 1 Button traces Buttons holes Buttons outline Control \u00b6 Download Piece Quantity Traces Text Holes Outline Control board 1 control traces control text control holes control outline Electrical conductivity \u00b6 Download Piece Quantity Traces Text Holes Outline EC probe board 1 ec traces ec outline About Machining cost \u00b6 For Roland SRM \u00b6 We can estimate the cost dividing the spindle price by the warranty time. At 2021 its 259 USD plus taxes and delivery. We can say machining cost will be about: 259/500 = 0.518 USD per hour Adding electricity cost in France by omnicalculator.com Estimated cost: 0.5227 USD per hour Control board time: 45 min at 70% speed. Button board time: 25 min at 70% speed. Probe board time: 7 mins at 70% speed. Estimated machining cost: 0.67 USD For Laser cutter machine \u00b6 Plexiglass white mate price its around 12 Eur per 60x20 cm Plexiglass transparent price its around 7 Eur per 60x20 cm Price in USD its 22.43 of material. Acrylic cutting price cost around $0.15 USD per linear inch. 0.06 USD per centimeter. We can estimate the machining cost at: Rear plate: 120 mm x 4 sides = 480 mm Middle plate: 480 mm + cuts (20 x 40 mm + 15 x 90 mm) Front plate = 250 mm x 120 mm Side plates = 40x 100 mm x 4 pieces. Perimeter estimated total: 3150 mm Estimated cost = 31.50cm x 0.06 USD/cm = 1.89 USD Wiring \u00b6 Battery, board and switch \u00b6 Battery board Switch 9V connector 0x2 connector male Solder to pins Board i2c to LCD Display \u00b6 LCD Board (TOP) GND 3.3V 3.3V SDA SDA SCL SCL GND Board 5 pins conn to buttons board \u00b6 Board (TOP): PIN VAL 1 5 V 2 Signal 3 4 5 GND Buttons (TOP): PIN VAL 1 5 V 2 Signal 3 GND Electro-conductive probe \u00b6 Connector VOUT (TOP): PIN VAL 1 GND 2 VOUT Connector AIN (TOP): PIN VAL 1 AIN 2 GND Thermistor (optional) \u00b6 This optional probe implements a 1K Thermistor and a voltage divider circuit. Download Component Price Vendor 1K Thermistor https://www.digikey.com/en/products/detail/vishay-beyschlag-draloric-bc-components/PTS1206M1B1K00P100/5218662?s=N4IgTCBcDaIOwBYCcBaAjABgKxfSgcgCIAEIAugL5A Piece Quantity Traces Text Holes Outline EC probe board 1 ec traces ec traces ec outline Soldering \u00b6 Control board \u00b6 Suggested order for soldering components: Preferably use, lead free solder. Microcontroller Transistors Resistors Capacitors LEDs Connectors Milled board PCB: Soldered components: Connectors on back side: Buttons board \u00b6 Suggested order for soldering components: Preferably use, lead free solder. Resistors LEDs Push buttons Connector Electrical conductivity board \u00b6 Suggested order for soldering components: Preferably use, lead free solder. PAD Value Wire color Left VOUT RED middle 2 GND WHITE middle 1 GND WHITE Right AIN GREEN This image is from the back so the order of the colors is inverted. Assembly process \u00b6 Assemble the middle plate with the LCD display, using: Part Quantity Reference Notes Vinyl bolt 12 mm 4 Ref Vinyl hexagonal nut 8 Ref 4 to attach bolts to middle plate as shown bellow, 4 more to fix LCD display to middle plate. Middle plate 1 Ref Assemble the buttons to the front place using: Part Quantity Reference Notes Vinyl bolt 12 mm 2 Ref Vinyl hexagonal nut 4 Ref 2 to attach 3D print buttons to front plate as shown bellow, 2 more to fix pcb board to 3d print. 3D print buttons 1 Ref PCB board buttons 1 Ref Part Quantity Reference Notes Battery wire 1 Ref Switch plate 1 Ref Part Quantity Reference Notes Side plate 3 Ref Assemble LCD assemble to side plates and switch plate and make a box. Then assemble front plate to the box. Part Quantity Reference Notes Holder 4 Ref M2 Hexagonal nut 8 REF Rear plate 1 Ref M2 bolt 4 Ref Part Quantity Reference Notes Control board 1 Ref Part Quantity Reference Notes Electro conductive probe 1 Ref Part Quantity Reference Notes i2c wire 1 Ref Board buttons wire 1 Ref Wires and connector image reference. Closing the box. Adjusting bolts. Final result. Code \u00b6 /* This program uses the arduino IDE compile tools. This program plots an horizontal graph to visualize step response reading analog signals from PIN_04 with 12 bits resolution. On PIN_02 (DAC0) its emitted an analog signal that later will be transmitted using the probe board to liquids to measure the conductivity of it. Conductivity increases or decreases depending in the substance so, its possible to observe a step response signal in the horizontal graph. The program runs a cycle of n number of samples, saves the results of every sample on an array and then shows the average value. It also shows a custom character for the AgriLab logo. IO pins: PA02 -> DAC0 analogWrite PA05 <- analogRead Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); #define max_val 4000 #define sample_size 500 #define duty_cycle 1 #define lcd_scaler 2 #define lcd_segments 8 #define plot_mult ((max_val / lcd_segments)*2) * duty_cycle uint8_t customChar[8] = { 0x02, 0x0A, 0x0E, 0x1E, 0x1E, 0x1C, 0x0C, 0x08 }; void mkr_chrs(){ lcd.init(); lcd.setCursor(0,0); uint8_t graphChar[8][8] = {B00000}; for(short n = 0; n<7; n++){ graphChar[n][n] = B11111; lcd.createChar(n, graphChar[n]); }}; void plot(short a, short c_pos){ short a_p = (max_val - a) / plot_mult; if(a_p == 7){ lcd.setCursor(c_pos,2); lcd.print(\"_\"); } else if(a_p < 5){ lcd.setCursor(c_pos,1); lcd.write(a_p*lcd_scaler); } else { lcd.setCursor(c_pos,2); lcd.write(a_p*lcd_scaler);} }; void setup() { Wire.begin(); Serial1.begin(9600); mkr_chrs(); lcd.init(); lcd.backlight(); lcd.createChar(7, customChar); bootstart_msg(); delay(1000); animation_01(20); lcd.clear(); pinMode(4, INPUT); analogReadResolution(12); analogWriteResolution(12); } void loop() { rfid_msg(); while(true){ if(read_rfid() == false){ break; } } short SAMPLES[sample_size-1]; short mult = sample_size/20; lcd.setCursor(12,0); agrilab(); delay(500); for(short s = 0; s < sample_size; s++){ analogWrite(DAC0, max_val); short ec_val = analogRead(4); analogWrite(DAC0, 0x0); lcd.setCursor(8,3); lcd.print(ec_val); SAMPLES[s] = ec_val; plot(ec_val, s/mult); lcd.setCursor(s/mult,3); lcd.print(\">\"); lcd.setCursor(0,3); lcd.print(s+1); } short sum_ec = 0; for(short z = 0; z < sample_size; z++){ sum_ec += SAMPLES[z]; } lcd.clear(); lcd.setCursor(12,0); agrilab(); lcd.setCursor(16,3); lcd.print(sum_ec/sample_size); delay(5000); lcd.clear(); } void agrilab(){ const char a[] = {\"AgriLab\"}; lcd.print(a); lcd.write(7); } void rfid_msg(){ lcd.home(); lcd.print(\"To Start\"); lcd.setCursor(0,1); lcd.print(\"Please scan a valid\"); lcd.setCursor(0,2); lcd.print(\"RFID FDX tag...\"); } void bootstart_msg() { lcd.setCursor(6,1); agrilab(); delay(1000); lcd.clear(); lcd.setCursor(5,1); lcd.print(\"Fab\"); lcd.setCursor(5,2); lcd.print(\"Academy\"); lcd.setCursor(8,3); lcd.print(\"2021\"); delay(2000); lcd.clear(); lcd.home(); lcd.print(\"MILQ\"); delay(2000); lcd.clear(); } void animation_01(short del_ay){ short a; short b; for(a = 0; a < 20; a++){ lcd.setCursor(a,3); lcd.print(\"/\"); delay(del_ay); } } unsigned long long convert(char num[]) { short len = 10; unsigned long long base = 1; unsigned long long temp = 0; for (short i=len-1; i>=0; i--) { if (num[i]>='0' && num[i]<='9') { temp += (num[i] - 48)*base; base = base * 16; } else if (num[i]>='A' && num[i]<='F') { temp += (num[i] - 55)*base; base = base*16; } } return temp; } char rfid_tag [9]; bool read_rfid(){ byte id = Serial1.read(); rfid_tag[-1] = id; if (id == 2){ for (short c = 8; c >=0; c--){ byte bit_ = Serial1.read(); rfid_tag[c] = bit_; } unsigned long long num = convert(rfid_tag); lcd.clear(); lcd.setCursor(0,0); lcd.print(num); return false; } delay(100); } Download code Download binary for ATSAMD11C14A Flashing code with EDBG ATSAMD11C14A programmer \u00b6 To flash the firmware I used the Arduino IDE selecting the without bootloader option and then finding the temporal location of the compiled files and flashing the .bin file using my SAMD11C14 programmer board from week05 Electronics production Connections: User interface \u00b6 The layout in the display shows this information: The animation in the row 4 changes by the current sample number. The MAX value its equal to 4000 the maximun number I could use for memory size and 12 bits resolution for the analogWrite function. Test \u00b6 I\u2019ve tested the Electro-conductivity probe in water and creme. On this video you can observe the step response in the horizontal graph. Substance Samples per cycle Min Max Average Tap water 100 25 27 26 Creme Legere 12% 100 202 214 208 Test results are: Tap water conducts less electricity than Creme legere. Evaluation \u00b6 For this process I\u2019ve used bottled orange juice to compared the measurements with expired bottled pineapple juice. Substance Samples per cycle Min Max Average Samples Expired Bottled Pineapple Juice 500 67 80 73.5 80, 67 2nd Expired Bottled Pineapple Juice 500 17 225 121 132, 87, 17, 225 Bottled Orange juice 500 202 214 208 202, 205, 208 Results: The results show that there are variations depending on the sample composition, the first sample of expired pineapple juice was more watery. The first sample of expired pineapple juice was more concentrated. I think the probe could be improved in the wiring and position of the board inside the device so there could be less interference in the measurements. Answers of the approach \u00b6 Bio sensors are difficult to design, and thus to manufacture, multiple things can change from one to other device with same designed parts. This approach took an incredible amount of time in the design process, plus the complications of nowadays COVID-19 pandemic, but I hope this brings to someone else a bootstrap project to start with step response sensors. After the week20 I\u2019ve realized a lot of things like could change, like size, could be 60% less by using a smaller OLED display i2C, memory size of the SAMD11 wasn\u2019t a problem using the Arduino IDE without bootloader. The wired probe shows that there are variations depending on the position of the probe within the sample. I\u2019ve found any correlation to the freshness of the sample that could be coherent and definitive, thus for this evaluation I\u2019ve found that the \u201cfreshness\u201d on the orange juice made it more conductive that the expired pineapple juice sample. The reason could be in the relationship between electrical conductivity and pH. substances close to neutral pH are less conductive we had the data from tap water showing low values in the test. And more acidic substances are more conductive due to the presence of more hydrogen ions. Unimplemented buttons \u00b6 Buttons were working thus the circuit design with LEDS made them way too much power consuming reducing battery life quickly. Also the buttons require a calibration due to a variation in the analogread value depending on the battery charge. RFID module wasn\u2019t integrated due to lac of time. But I hope to have a couple more days to integrated it properly on the device. The problem is that the RFID baord doesn\u2019t have any perforations to help me out attach the board to the device, so I\u2019ve to design a holder fir the PCB and the antenna. Design changes \u00b6 Multivibrator circuit has been removed of the main control board, my plan its too add this to the probe as a module. The closing mechanism for the rear plate has been replaced by the holders, the reason its that it didn\u2019t work, the rear plate wasn\u2019t tight sealed. Device cost \u00b6 Estimated to be right now at: PCB total cost: Control board components: 6.51 Buttons board components: 4.15 Machining time: 0.67 11.33 USD Laser cut cost: Material: 11.2 Machining: 1.89 13.09 USD 3D printing cost: Buttons: 2.32 USD Holders: 2.12 USD 4.44 USD Connectors Dupont: 1 USD* Connectors Dupont jumper: 1 USD* Joinery approximate: 1 USD* Wiring approximate: 1 USD* Battery 9V: 1 USD LCD 20 x 4: 7 USD Estimated cost: 40.86 USD without cable packs, joinery pack and connectors pack. Buying cables and joinery in packs: Cables: 31.47 Joinery plastic pack: 9.90 USD Joinery metal pack: 19.29 USD Connectors pack 1: 4 USD Connectors pack 2: 4.18 USD Sub-total: 60.66 USD Total: 101.52 USD Electronics design \u00b6 I\u2019ve used parts of the circuits I\u2019ve made on week09 , week11 and week14 . Original design files \u00b6 Solidworks \u00b6 Solidworks assembly ZIP KiCAD \u00b6 Piece Quantity File Control board 1 KiCAD, PCB, Schematic and netlist ZIP Button board 1 KiCAD, PCB, Schematic and netlist ZIP EC probe board 1 ec traces SVG \u00b6 SVG design files Files for laser cut \u00b6 Format: DXF Piece Quantity File Side plate 3 side plate Switch plate 1 switch plate Front plate 1 Front plate Rear plate 1 rear plate Middle plate 1 middle plate Files for 3D printing \u00b6 Format: STL Piece Quantity File Buttons 1 buttons Holders 4 Holders Files for circuit milling \u00b6 Format: SVG Piece Quantity Traces Text Holes Outline Buttons board 1 Button traces Buttons holes Buttons outline Control board 1 control traces control text control holes control outline EC probe board 1 ec traces ec outline Final presentation \u00b6","title":"Final project: MILQ"},{"location":"projects/for_replication/#final-project-milq","text":"","title":"Final project: MILQ"},{"location":"projects/for_replication/#description","text":"MILQ its a device for checking the freshness of a milk sample by measuring electrical conductivity, it uses a disposable espresso cup as sample collector and plots a graph on its LCD display, and reads FDX RFID 134KHZ animal earring tags. Characteristics: Based on ATSAMD11C14A ARM 32 bits Microcontroller. up to 800 Samples on 10 secs. 9V battery Reads FDX Animal tag rfid. Results obtained: The device measures electrical conductivity of samples, thus it could be programmed to measure pH of substances. You can check this tests","title":"Description"},{"location":"projects/for_replication/#license","text":"CERN Open Hardware Licence Version 2 - Strongly Reciprocal CERN Open Hardware Licence Version 2 - Strongly Reciprocal Preamble CERN has developed this licence to promote collaboration among hardware designers and to provide a legal tool which supports the freedom to use, study, modify, share and distribute hardware designs and products based on those designs. Version 2 of the CERN Open Hardware Licence comes in three variants: CERN-OHL-P (permissive); and two reciprocal licences: CERN-OHL-W (weakly reciprocal) and this licence, CERN-OHL-S (strongly reciprocal). The CERN-OHL-S is copyright CERN 2020. Anyone is welcome to use it, in unmodified form only. Use of this Licence does not imply any endorsement by CERN of any Licensor or their designs nor does it imply any involvement by CERN in their development. 1 Definitions 1.1 'Licence' means this CERN-OHL-S. 1.2 'Compatible Licence' means a) any earlier version of the CERN Open Hardware licence, or b) any version of the CERN-OHL-S, or c) any licence which permits You to treat the Source to which it applies as licensed under CERN-OHL-S provided that on Conveyance of any such Source, or any associated Product You treat the Source in question as being licensed under CERN-OHL-S. 1.3 'Source' means information such as design materials or digital code which can be applied to Make or test a Product or to prepare a Product for use, Conveyance or sale, regardless of its medium or how it is expressed. It may include Notices. 1.4 'Covered Source' means Source that is explicitly made available under this Licence. 1.5 'Product' means any device, component, work or physical object, whether in finished or intermediate form, arising from the use, application or processing of Covered Source. 1.6 'Make' means to create or configure something, whether by manufacture, assembly, compiling, loading or applying Covered Source or another Product or otherwise. 1.7 'Available Component' means any part, sub-assembly, library or code which: a) is licensed to You as Complete Source under a Compatible Licence; or b) is available, at the time a Product or the Source containing it is first Conveyed, to You and any other prospective licensees i) as a physical part with sufficient rights and information (including any configuration and programming files and information about its characteristics and interfaces) to enable it either to be Made itself, or to be sourced and used to Make the Product; or ii) as part of the normal distribution of a tool used to design or Make the Product. 1.8 'Complete Source' means the set of all Source necessary to Make a Product, in the preferred form for making modifications, including necessary installation and interfacing information both for the Product, and for any included Available Components. If the format is proprietary, it must also be made available in a format (if the proprietary tool can create it) which is viewable with a tool available to potential licensees and licensed under a licence approved by the Free Software Foundation or the Open Source Initiative. Complete Source need not include the Source of any Available Component, provided that You include in the Complete Source sufficient information to enable a recipient to Make or source and use the Available Component to Make the Product. 1.9 'Source Location' means a location where a Licensor has placed Covered Source, and which that Licensor reasonably believes will remain easily accessible for at least three years for anyone to obtain a digital copy. 1.10 'Notice' means copyright, acknowledgement and trademark notices, Source Location references, modification notices (subsection 3.3(b)) and all notices that refer to this Licence and to the disclaimer of warranties that are included in the Covered Source. 1.11 'Licensee' or 'You' means any person exercising rights under this Licence. 1.12 'Licensor' means a natural or legal person who creates or modifies Covered Source. A person may be a Licensee and a Licensor at the same time. 1.13 'Convey' means to communicate to the public or distribute. 2 Applicability 2.1 This Licence governs the use, copying, modification, Conveying of Covered Source and Products, and the Making of Products. By exercising any right granted under this Licence, You irrevocably accept these terms and conditions. 2.2 This Licence is granted by the Licensor directly to You, and shall apply worldwide and without limitation in time. 2.3 You shall not attempt to restrict by contract or otherwise the rights granted under this Licence to other Licensees. 2.4 This Licence is not intended to restrict fair use, fair dealing, or any other similar right. 3 Copying, Modifying and Conveying Covered Source 3.1 You may copy and Convey verbatim copies of Covered Source, in any medium, provided You retain all Notices. 3.2 You may modify Covered Source, other than Notices, provided that You irrevocably undertake to make that modified Covered Source available from a Source Location should You Convey a Product in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source. In each case subsection 3.3 shall apply. You may only delete Notices if they are no longer applicable to the corresponding Covered Source as modified by You and You may add additional Notices applicable to Your modifications. Including Covered Source in a larger work is modifying the Covered Source, and the larger work becomes modified Covered Source. 3.3 You may Convey modified Covered Source (with the effect that You shall also become a Licensor) provided that You: a) retain Notices as required in subsection 3.2; b) add a Notice to the modified Covered Source stating that You have modified it, with the date and brief description of how You have modified it; c) add a Source Location Notice for the modified Covered Source if You Convey in circumstances where the recipient does not otherwise receive a copy of the modified Covered Source; and d) license the modified Covered Source under the terms and conditions of this Licence (or, as set out in subsection 8.3, a later version, if permitted by the licence of the original Covered Source). Such modified Covered Source must be licensed as a whole, but excluding Available Components contained in it, which remain licensed under their own applicable licences. 4 Making and Conveying Products You may Make Products, and/or Convey them, provided that You either provide each recipient with a copy of the Complete Source or ensure that each recipient is notified of the Source Location of the Complete Source. That Complete Source is Covered Source, and You must accordingly satisfy Your obligations set out in subsection 3.3. If specified in a Notice, the Product must visibly and securely display the Source Location on it or its packaging or documentation in the manner specified in that Notice. 5 Research and Development You may Convey Covered Source, modified Covered Source or Products to a legal entity carrying out development, testing or quality assurance work on Your behalf provided that the work is performed on terms which prevent the entity from both using the Source or Products for its own internal purposes and Conveying the Source or Products or any modifications to them to any person other than You. Any modifications made by the entity shall be deemed to be made by You pursuant to subsection 3.2. 6 DISCLAIMER AND LIABILITY 6.1 DISCLAIMER OF WARRANTY -- The Covered Source and any Products are provided 'as is' and any express or implied warranties, including, but not limited to, implied warranties of merchantability, of satisfactory quality, non-infringement of third party rights, and fitness for a particular purpose or use are disclaimed in respect of any Source or Product to the maximum extent permitted by law. The Licensor makes no representation that any Source or Product does not or will not infringe any patent, copyright, trade secret or other proprietary right. The entire risk as to the use, quality, and performance of any Source or Product shall be with You and not the Licensor. This disclaimer of warranty is an essential part of this Licence and a condition for the grant of any rights granted under this Licence. 6.2 EXCLUSION AND LIMITATION OF LIABILITY -- The Licensor shall, to the maximum extent permitted by law, have no liability for direct, indirect, special, incidental, consequential, exemplary, punitive or other damages of any character including, without limitation, procurement of substitute goods or services, loss of use, data or profits, or business interruption, however caused and on any theory of contract, warranty, tort (including negligence), product liability or otherwise, arising in any way in relation to the Covered Source, modified Covered Source and/or the Making or Conveyance of a Product, even if advised of the possibility of such damages, and You shall hold the Licensor(s) free and harmless from any liability, costs, damages, fees and expenses, including claims by third parties, in relation to such use. 7 Patents 7.1 Subject to the terms and conditions of this Licence, each Licensor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in subsections 7.2 and 8.4) patent licence to Make, have Made, use, offer to sell, sell, import, and otherwise transfer the Covered Source and Products, where such licence applies only to those patent claims licensable by such Licensor that are necessarily infringed by exercising rights under the Covered Source as Conveyed by that Licensor. 7.2 If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Covered Source or a Product constitutes direct or contributory patent infringement, or You seek any declaration that a patent licensed to You under this Licence is invalid or unenforceable then any rights granted to You under this Licence shall terminate as of the date such process is initiated. 8 General 8.1 If any provisions of this Licence are or subsequently become invalid or unenforceable for any reason, the remaining provisions shall remain effective. 8.2 You shall not use any of the name (including acronyms and abbreviations), image, or logo by which the Licensor or CERN is known, except where needed to comply with section 3, or where the use is otherwise allowed by law. Any such permitted use shall be factual and shall not be made so as to suggest any kind of endorsement or implication of involvement by the Licensor or its personnel. 8.3 CERN may publish updated versions and variants of this Licence which it considers to be in the spirit of this version, but may differ in detail to address new problems or concerns. New versions will be published with a unique version number and a variant identifier specifying the variant. If the Licensor has specified that a given variant applies to the Covered Source without specifying a version, You may treat that Covered Source as being released under any version of the CERN-OHL with that variant. If no variant is specified, the Covered Source shall be treated as being released under CERN-OHL-S. The Licensor may also specify that the Covered Source is subject to a specific version of the CERN-OHL or any later version in which case You may apply this or any later version of CERN-OHL with the same variant identifier published by CERN. 8.4 This Licence shall terminate with immediate effect if You fail to comply with any of its terms and conditions. 8.5 However, if You cease all breaches of this Licence, then Your Licence from any Licensor is reinstated unless such Licensor has terminated this Licence by giving You, while You remain in breach, a notice specifying the breach and requiring You to cure it within 30 days, and You have failed to come into compliance in all material respects by the end of the 30 day period. Should You repeat the breach after receipt of a cure notice and subsequent reinstatement, this Licence will terminate immediately and permanently. Section 6 shall continue to apply after any termination. 8.6 This Licence shall not be enforceable except by a Licensor acting as such, and third party beneficiary rights are specifically excluded.","title":"License"},{"location":"projects/for_replication/#bom","text":"All this material was found in the inventory of Agrilab and was acquired from different vendors like Digikey check the lists bellow and find the suppliers in the links indicated.","title":"BOM"},{"location":"projects/for_replication/#tools","text":"Tool Specifications Roland SRM-20 milling machine or alike Sacrificial plate is needed for safety of the machine Prusa i3 Mk2 3D printer machine or alike Resolution needed to 0.10 mm for maximum dimensional accuracy with 0.4 mm nozzle. Laser cutting machine Effective working area more than 50 x 50 cms, power 150 Watts, CO2 and security protocol compliant trained operation, Clean working space and Fire Extinguisher is mandatory Weller Pu-81 Soldering iron or alike Precision tip for maximum accuracy, tool folder for comfort and security","title":"Tools:"},{"location":"projects/for_replication/#supplies","text":"Material Quantity Price Specifications Plexiglass 75 x 15 cms or 40 x 30 cms 32.24 Euro/ m^2 6 mm thickness transparent or translucent PLA Filament for 3D printer > 10 grams 1.75 diameter FR1 Electronic board for milling > 14 x 9 cms 1.8 mm thickness, flat , single sided 1.0 mm milling bit Multiple This tip is used for milling the FR1 electronic board, maximum quality the better for accurate trace milling 0.4 mm milling bit Multiple x2 This tip is used for milling the FR1 electronic board, maximum quality the better for accurate trace milling, this component its extremely fragile Double face tape 1 roll Stickiness should be enough to fix the FR1 to the sacrificial layer during the milling process","title":"Supplies:"},{"location":"projects/for_replication/#wires","text":"Color Quantity Specifications Price Red > 80 centimeter Caliber AWG 24 17.22 USD Blue > 80 centimeter Caliber AWG 24 4.75 USD Optional 1 > 30 centimeter Caliber AWG 24 4.75 USD Optional 2 > 30 centimeter Caliber AWG 24 4.75 USD 10 wires flat cable 1.27 mm pitch JTAG connector","title":"Wires:"},{"location":"projects/for_replication/#connectors","text":"Type Quantity Specifications Dupont JST XH Link for purchasing 2 Pins 6 male and female, plus connectors 3 Pins 1 male and female, plus connectors 4 Pins 4 male and female, plus connectors Dupont Jumper Pin Link for purchasing 4 Pins 1 female, plus connectors JTAG self punching 2x5 1 female, 1.27 mm pitch","title":"Connectors:"},{"location":"projects/for_replication/#joinery-plastic","text":"Link 9.90 USD Type Quantity Specifications Nylon hexagonal spacers 2 5 mm spacer Nylon hexagonal nuts 14 3 mm height Nylon bolt 2 6 mm height Nylon bolt 4 12 mm height","title":"Joinery (plastic):"},{"location":"projects/for_replication/#joinery-metal","text":"Link 19.99 USD Type Quantity Specifications M2 precision bolt 8 M2 hexagonal nut 8","title":"Joinery (metal):"},{"location":"projects/for_replication/#electronic-components","text":"","title":"Electronic components:"},{"location":"projects/for_replication/#control-board-components","text":"Reference Value Price Buy Footprint Datasheet J3 Conn_01x04_Female digikey:PinHeader_1x4_P2.5mm_Drill1.1mm ~ R2 10K 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ C7 0.1uF 0.36 USD https://www.digikey.com/en/products/detail/kemet/C1206C104KARACTU/992167?s=N4IgTCBcDaIMwE4EFoAsA2A7K5BGZAcgCIgC6AvkA fabacademy2021:C_1206 C3 1uF 0.28 USD https://www.digikey.com/en/products/detail/tdk-corporation/C3216X7R1H105K160AB/569049?s=N4IgTCBcDaICxwKwFoCMcwGY3IHIBEQBdAXyA fabacademy2021:C_1206 J5 Conn_01x04_Female digikey:PinHeader_1x4_P2.5mm_Drill1.1mm ~ D1 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf R7 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ C6 0.1uF 0.36 USD N4IgTCBcDaIMwE4EFoAsA2A7K5BGZAcgCIgC6AvkA fabacademy2021:C_1206 J6 Conn_01x05_Female digikey:PinHeader_1x5_P2.5mm_Drill1.1mm ~ U1 Regulator_Linear_LM3480-3.3V-100mA 1.15 USD https://www.digikey.com/en/products/detail/texas-instruments/LM3480IM3-3-3-NOPB/270720?s=N4IgTCBcDaIDIFkDMAWAHABgJLILRIDokB6AOQHkAFAIQGEAVXUgERAF0BfIA fabacademy2021:fab-SOT23 https://www.ti.com/lit/ds/symlink/lm3480.pdf R10 10k 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ R9 10k 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ J1 Conn_ARM_JTAG_SWD_10 fabacademy2021:fab-SWD10pin127pitch.lib http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/DDI0314H_coresight_components_trm.pdf R11 0 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206JR-070RL/729184?s=N4IgTCBcDaIMwEYEFoAMA6VBRASgYQBVkA5AERAF0BfIA fabacademy2021:R_1206 ~ R8 10K 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0710KL/728483?s=N4IgTCBcDaIMwEYEFoEAYB0aDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ U5 ATSAMD11C14A-SS 1.39 USD https://www.digikey.com/en/products/detail/microchip-technology/ATSAMD11C14A-SSUT/5226470 fabacademy2021:SOIC-14_3.9x8.7mm_P1.27mm J2 Conn_01x02 digikey:PinHeader_1x2_P2.5mm_Drill1.1mm ~ J4 Conn_01x02 digikey:PinHeader_1x2_P2.5mm_Drill1.1mm ~ R1 0 0.10 USD N4IgTCBcDaIMwEYEFoAMA6VBRASgYQBVkA5AERAF0BfIA fabacademy2021:R_1206 ~ C9 0.1uF 0.30 USD N4IgTCBcDaIMwE4EFoAsA2A7K5BGZAcgCIgC6AvkA fabacademy2021:C_1206 U2 Regulator_Linear_NCP1117-5.0V-1A 0.56 USD https://www.digikey.com/en/products/detail/on-semiconductor/NCP1117ST50T3G/921289?s=N4IgTCBcDaIHIGEAKBGNB2AygFQKwAZsBmAcQHlMFsBaOAERAF0BfIA fabacademy2021:SOT-223-3_TabPin2 https://www.onsemi.com/pub/Collateral/NCP1117-D.PDF C2 1uF 0.28 USD N4IgTCBcDaICxwKwFoCMcwGY3IHIBEQBdAXyA fabacademy2021:C_1206 ~ J7 Conn_01x02_Female digikey:PinHeader_1x2_P2.5mm_Drill1.1mm ~ R3 50 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0749R9L/728942?s=N4IgTCBcDaIMwEYEFoAsBOAdOgYgJQGEAVZAOQBEQBdAXyA fabacademy2021:R_1206 ~ D2 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 https://optoelectronics.liteon.com/upload/download/DS-22-98-0002/LTST-C150CKT.pdf Q1 MOSFET_P-CH_30V_1.1A 0.47 USD https://www.digikey.com/en/products/detail/on-semiconductor/NDS356AP/458900?s=N4IgTCBcDaIHIBEDKBmArANgIIAUDCAKgLSIgC6AvkA fabacademy2021:fab-SOT-23 https://www.onsemi.com/pub/Collateral/NDS356AP-D.PDF C1 1uF 0.30 USD https://www.digikey.com/en/products/detail/tdk-corporation/C3216X7R1H105K160AB/569049?s=N4IgTCBcDaICxwKwFoCMcwGY3IHIBEQBdAXyA fabacademy2021:C_1206 ~ Estimated cost: 6.51 USD without connectors","title":"Control board components:"},{"location":"projects/for_replication/#button-board-components","text":"Reference Value Price Buy Footprint Datasheet SW1 BUTTON_PTS636 1.02 USD https://www.digikey.com/en/products/detail/omron-electronics-inc-emc-div/B3SN-3012P/9717 fabacademy2021:Button_Omron_B3SN_6x6mm https://dznh3ojzb2azq.cloudfront.net/products/Tactile/PTS636/documents/datasheet.pdf R6 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ R2 0 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206JR-070RL/729184?s=N4IgTCBcDaIMwEYEFoAMA6VBRASgYQBVkA5AERAF0BfIA fabacademy2021:R_1206 ~ R4 50 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-0749R9L/728942?s=N4IgTCBcDaIMwEYEFoAsBOAdOgYgJQGEAVZAOQBEQBdAXyA fabacademy2021:R_1206 ~ R8 1k 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-071KL/728387?s=N4IgTCBcDaIMwEYEFoEDoAMGDSAxASgMIAqyAcgCIgC6AvkA fabacademy2021:R_1206 ~ SW2 BUTTON_PTS636 1.02 USD https://www.digikey.com/en/products/detail/omron-electronics-inc-emc-div/B3SN-3012P/9717 fabacademy2021:Button_Omron_B3SN_6x6mm https://dznh3ojzb2azq.cloudfront.net/products/Tactile/PTS636/documents/datasheet.pdf SW3 BUTTON_PTS636 1.02 USD https://www.digikey.com/en/products/detail/omron-electronics-inc-emc-div/B3SN-3012P/9717 fabacademy2021:Button_Omron_B3SN_6x6mm https://dznh3ojzb2azq.cloudfront.net/products/Tactile/PTS636/documents/datasheet.pdf J1 Conn_01x03_Female USD digikey:PinHeader_1x3_P2.54mm_Drill1.02mm ~ R7 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ D3 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 ~ R5 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ D2 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C150CKT/269214?s=N4IgTCBcDaIIwDYAMBaOiDsaUDkAiIAugL5A fabacademy2021:LED_1206 ~ R3 100 0.10 USD https://www.digikey.com/en/products/detail/yageo/RC1206FR-07100RL/728491?s=N4IgTCBcDaIMwEYEFoEAY0DEBKBhAKsgHIAiIAugL5A fabacademy2021:R_1206 ~ D1 LED 0.13 USD https://www.digikey.com/en/products/detail/lite-on-inc/LTST-C230TBKT/388531?s=N4IgTCBcDaIIwDYAMBaOAOdBONKByAIiALoC%2BQA fabacademy2021:LED_1206 ~ Estimated cost: 4.15 USD with out connectors","title":"Button board components"},{"location":"projects/for_replication/#files","text":"","title":"Files"},{"location":"projects/for_replication/#files-for-laser-cut","text":"Settings for 100 Watts CO2 laser cutter machine: Speed: 15 Power: 20 Files for approximate kerf: 0.2 mm. Piece Quantity File Side plate 3 side plate Piece Quantity File Switch plate 1 switch plate Piece Quantity File Front plate 1 Front plate Piece Quantity File Rear plate 1 rear plate Piece Quantity File Middle plate 1 middle plate","title":"Files for laser cut"},{"location":"projects/for_replication/#files-for-3d-printing","text":"Settings for FDM 1.75 mm heated bed printer: Infill: 10% Generic PLA filament First layer: - Layer height: 0.20 mm - Nozzle temp: 215 C - Bed temp: 60 C Other layers: - Layer height: 0.20 mm - 210 C - 60 C Shell: 2 Solid layers every 4 layers Minimum wall thickness: 0.7 mm Perimeter speed: 50 mm/s External perimeter speed: 35 mm/s Download Prusa Slicer configuration file Download Prusa Slicer adjustments Piece Quantity File Buttons 1 buttons This link redirects to a pre-filled form of the price calculator. 2.32 Euros by Prusa price calculator Piece Quantity File Holders 4 Holders This link downloads the price pdf file generated by Prusa Price calculator 2.12 Euros by Prusa price calculator","title":"Files for 3D printing"},{"location":"projects/for_replication/#files-for-circuit-milling","text":"","title":"Files for circuit milling"},{"location":"projects/for_replication/#buttons","text":"Download Piece Quantity Traces Text Holes Outline Buttons board 1 Button traces Buttons holes Buttons outline","title":"Buttons"},{"location":"projects/for_replication/#control","text":"Download Piece Quantity Traces Text Holes Outline Control board 1 control traces control text control holes control outline","title":"Control"},{"location":"projects/for_replication/#electrical-conductivity","text":"Download Piece Quantity Traces Text Holes Outline EC probe board 1 ec traces ec outline","title":"Electrical conductivity"},{"location":"projects/for_replication/#about-machining-cost","text":"","title":"About Machining cost"},{"location":"projects/for_replication/#for-roland-srm","text":"We can estimate the cost dividing the spindle price by the warranty time. At 2021 its 259 USD plus taxes and delivery. We can say machining cost will be about: 259/500 = 0.518 USD per hour Adding electricity cost in France by omnicalculator.com Estimated cost: 0.5227 USD per hour Control board time: 45 min at 70% speed. Button board time: 25 min at 70% speed. Probe board time: 7 mins at 70% speed. Estimated machining cost: 0.67 USD","title":"For Roland SRM"},{"location":"projects/for_replication/#for-laser-cutter-machine","text":"Plexiglass white mate price its around 12 Eur per 60x20 cm Plexiglass transparent price its around 7 Eur per 60x20 cm Price in USD its 22.43 of material. Acrylic cutting price cost around $0.15 USD per linear inch. 0.06 USD per centimeter. We can estimate the machining cost at: Rear plate: 120 mm x 4 sides = 480 mm Middle plate: 480 mm + cuts (20 x 40 mm + 15 x 90 mm) Front plate = 250 mm x 120 mm Side plates = 40x 100 mm x 4 pieces. Perimeter estimated total: 3150 mm Estimated cost = 31.50cm x 0.06 USD/cm = 1.89 USD","title":"For Laser cutter machine"},{"location":"projects/for_replication/#wiring","text":"","title":"Wiring"},{"location":"projects/for_replication/#battery-board-and-switch","text":"Battery board Switch 9V connector 0x2 connector male Solder to pins","title":"Battery, board and switch"},{"location":"projects/for_replication/#board-i2c-to-lcd-display","text":"LCD Board (TOP) GND 3.3V 3.3V SDA SDA SCL SCL GND","title":"Board i2c to LCD Display"},{"location":"projects/for_replication/#board-5-pins-conn-to-buttons-board","text":"Board (TOP): PIN VAL 1 5 V 2 Signal 3 4 5 GND Buttons (TOP): PIN VAL 1 5 V 2 Signal 3 GND","title":"Board 5 pins conn to buttons board"},{"location":"projects/for_replication/#electro-conductive-probe","text":"Connector VOUT (TOP): PIN VAL 1 GND 2 VOUT Connector AIN (TOP): PIN VAL 1 AIN 2 GND","title":"Electro-conductive probe"},{"location":"projects/for_replication/#thermistor-optional","text":"This optional probe implements a 1K Thermistor and a voltage divider circuit. Download Component Price Vendor 1K Thermistor https://www.digikey.com/en/products/detail/vishay-beyschlag-draloric-bc-components/PTS1206M1B1K00P100/5218662?s=N4IgTCBcDaIOwBYCcBaAjABgKxfSgcgCIAEIAugL5A Piece Quantity Traces Text Holes Outline EC probe board 1 ec traces ec traces ec outline","title":"Thermistor (optional)"},{"location":"projects/for_replication/#soldering","text":"","title":"Soldering"},{"location":"projects/for_replication/#control-board","text":"Suggested order for soldering components: Preferably use, lead free solder. Microcontroller Transistors Resistors Capacitors LEDs Connectors Milled board PCB: Soldered components: Connectors on back side:","title":"Control board"},{"location":"projects/for_replication/#buttons-board","text":"Suggested order for soldering components: Preferably use, lead free solder. Resistors LEDs Push buttons Connector","title":"Buttons board"},{"location":"projects/for_replication/#electrical-conductivity-board","text":"Suggested order for soldering components: Preferably use, lead free solder. PAD Value Wire color Left VOUT RED middle 2 GND WHITE middle 1 GND WHITE Right AIN GREEN This image is from the back so the order of the colors is inverted.","title":"Electrical conductivity board"},{"location":"projects/for_replication/#assembly-process","text":"Assemble the middle plate with the LCD display, using: Part Quantity Reference Notes Vinyl bolt 12 mm 4 Ref Vinyl hexagonal nut 8 Ref 4 to attach bolts to middle plate as shown bellow, 4 more to fix LCD display to middle plate. Middle plate 1 Ref Assemble the buttons to the front place using: Part Quantity Reference Notes Vinyl bolt 12 mm 2 Ref Vinyl hexagonal nut 4 Ref 2 to attach 3D print buttons to front plate as shown bellow, 2 more to fix pcb board to 3d print. 3D print buttons 1 Ref PCB board buttons 1 Ref Part Quantity Reference Notes Battery wire 1 Ref Switch plate 1 Ref Part Quantity Reference Notes Side plate 3 Ref Assemble LCD assemble to side plates and switch plate and make a box. Then assemble front plate to the box. Part Quantity Reference Notes Holder 4 Ref M2 Hexagonal nut 8 REF Rear plate 1 Ref M2 bolt 4 Ref Part Quantity Reference Notes Control board 1 Ref Part Quantity Reference Notes Electro conductive probe 1 Ref Part Quantity Reference Notes i2c wire 1 Ref Board buttons wire 1 Ref Wires and connector image reference. Closing the box. Adjusting bolts. Final result.","title":"Assembly process"},{"location":"projects/for_replication/#code","text":"/* This program uses the arduino IDE compile tools. This program plots an horizontal graph to visualize step response reading analog signals from PIN_04 with 12 bits resolution. On PIN_02 (DAC0) its emitted an analog signal that later will be transmitted using the probe board to liquids to measure the conductivity of it. Conductivity increases or decreases depending in the substance so, its possible to observe a step response signal in the horizontal graph. The program runs a cycle of n number of samples, saves the results of every sample on an array and then shows the average value. It also shows a custom character for the AgriLab logo. IO pins: PA02 -> DAC0 analogWrite PA05 <- analogRead Autor: Antonio de Jesus Anaya Hernandez Year: 2021 Org: Fab Academy Lab: AgriLab Country: France */ #include <Wire.h> #include <LiquidCrystal_I2C.h> LiquidCrystal_I2C lcd(0x27,20,4); #define max_val 4000 #define sample_size 500 #define duty_cycle 1 #define lcd_scaler 2 #define lcd_segments 8 #define plot_mult ((max_val / lcd_segments)*2) * duty_cycle uint8_t customChar[8] = { 0x02, 0x0A, 0x0E, 0x1E, 0x1E, 0x1C, 0x0C, 0x08 }; void mkr_chrs(){ lcd.init(); lcd.setCursor(0,0); uint8_t graphChar[8][8] = {B00000}; for(short n = 0; n<7; n++){ graphChar[n][n] = B11111; lcd.createChar(n, graphChar[n]); }}; void plot(short a, short c_pos){ short a_p = (max_val - a) / plot_mult; if(a_p == 7){ lcd.setCursor(c_pos,2); lcd.print(\"_\"); } else if(a_p < 5){ lcd.setCursor(c_pos,1); lcd.write(a_p*lcd_scaler); } else { lcd.setCursor(c_pos,2); lcd.write(a_p*lcd_scaler);} }; void setup() { Wire.begin(); Serial1.begin(9600); mkr_chrs(); lcd.init(); lcd.backlight(); lcd.createChar(7, customChar); bootstart_msg(); delay(1000); animation_01(20); lcd.clear(); pinMode(4, INPUT); analogReadResolution(12); analogWriteResolution(12); } void loop() { rfid_msg(); while(true){ if(read_rfid() == false){ break; } } short SAMPLES[sample_size-1]; short mult = sample_size/20; lcd.setCursor(12,0); agrilab(); delay(500); for(short s = 0; s < sample_size; s++){ analogWrite(DAC0, max_val); short ec_val = analogRead(4); analogWrite(DAC0, 0x0); lcd.setCursor(8,3); lcd.print(ec_val); SAMPLES[s] = ec_val; plot(ec_val, s/mult); lcd.setCursor(s/mult,3); lcd.print(\">\"); lcd.setCursor(0,3); lcd.print(s+1); } short sum_ec = 0; for(short z = 0; z < sample_size; z++){ sum_ec += SAMPLES[z]; } lcd.clear(); lcd.setCursor(12,0); agrilab(); lcd.setCursor(16,3); lcd.print(sum_ec/sample_size); delay(5000); lcd.clear(); } void agrilab(){ const char a[] = {\"AgriLab\"}; lcd.print(a); lcd.write(7); } void rfid_msg(){ lcd.home(); lcd.print(\"To Start\"); lcd.setCursor(0,1); lcd.print(\"Please scan a valid\"); lcd.setCursor(0,2); lcd.print(\"RFID FDX tag...\"); } void bootstart_msg() { lcd.setCursor(6,1); agrilab(); delay(1000); lcd.clear(); lcd.setCursor(5,1); lcd.print(\"Fab\"); lcd.setCursor(5,2); lcd.print(\"Academy\"); lcd.setCursor(8,3); lcd.print(\"2021\"); delay(2000); lcd.clear(); lcd.home(); lcd.print(\"MILQ\"); delay(2000); lcd.clear(); } void animation_01(short del_ay){ short a; short b; for(a = 0; a < 20; a++){ lcd.setCursor(a,3); lcd.print(\"/\"); delay(del_ay); } } unsigned long long convert(char num[]) { short len = 10; unsigned long long base = 1; unsigned long long temp = 0; for (short i=len-1; i>=0; i--) { if (num[i]>='0' && num[i]<='9') { temp += (num[i] - 48)*base; base = base * 16; } else if (num[i]>='A' && num[i]<='F') { temp += (num[i] - 55)*base; base = base*16; } } return temp; } char rfid_tag [9]; bool read_rfid(){ byte id = Serial1.read(); rfid_tag[-1] = id; if (id == 2){ for (short c = 8; c >=0; c--){ byte bit_ = Serial1.read(); rfid_tag[c] = bit_; } unsigned long long num = convert(rfid_tag); lcd.clear(); lcd.setCursor(0,0); lcd.print(num); return false; } delay(100); } Download code Download binary for ATSAMD11C14A","title":"Code"},{"location":"projects/for_replication/#flashing-code-with-edbg-atsamd11c14a-programmer","text":"To flash the firmware I used the Arduino IDE selecting the without bootloader option and then finding the temporal location of the compiled files and flashing the .bin file using my SAMD11C14 programmer board from week05 Electronics production Connections:","title":"Flashing code with EDBG ATSAMD11C14A programmer"},{"location":"projects/for_replication/#user-interface","text":"The layout in the display shows this information: The animation in the row 4 changes by the current sample number. The MAX value its equal to 4000 the maximun number I could use for memory size and 12 bits resolution for the analogWrite function.","title":"User interface"},{"location":"projects/for_replication/#test","text":"I\u2019ve tested the Electro-conductivity probe in water and creme. On this video you can observe the step response in the horizontal graph. Substance Samples per cycle Min Max Average Tap water 100 25 27 26 Creme Legere 12% 100 202 214 208 Test results are: Tap water conducts less electricity than Creme legere.","title":"Test"},{"location":"projects/for_replication/#evaluation","text":"For this process I\u2019ve used bottled orange juice to compared the measurements with expired bottled pineapple juice. Substance Samples per cycle Min Max Average Samples Expired Bottled Pineapple Juice 500 67 80 73.5 80, 67 2nd Expired Bottled Pineapple Juice 500 17 225 121 132, 87, 17, 225 Bottled Orange juice 500 202 214 208 202, 205, 208 Results: The results show that there are variations depending on the sample composition, the first sample of expired pineapple juice was more watery. The first sample of expired pineapple juice was more concentrated. I think the probe could be improved in the wiring and position of the board inside the device so there could be less interference in the measurements.","title":"Evaluation"},{"location":"projects/for_replication/#answers-of-the-approach","text":"Bio sensors are difficult to design, and thus to manufacture, multiple things can change from one to other device with same designed parts. This approach took an incredible amount of time in the design process, plus the complications of nowadays COVID-19 pandemic, but I hope this brings to someone else a bootstrap project to start with step response sensors. After the week20 I\u2019ve realized a lot of things like could change, like size, could be 60% less by using a smaller OLED display i2C, memory size of the SAMD11 wasn\u2019t a problem using the Arduino IDE without bootloader. The wired probe shows that there are variations depending on the position of the probe within the sample. I\u2019ve found any correlation to the freshness of the sample that could be coherent and definitive, thus for this evaluation I\u2019ve found that the \u201cfreshness\u201d on the orange juice made it more conductive that the expired pineapple juice sample. The reason could be in the relationship between electrical conductivity and pH. substances close to neutral pH are less conductive we had the data from tap water showing low values in the test. And more acidic substances are more conductive due to the presence of more hydrogen ions.","title":"Answers of the approach"},{"location":"projects/for_replication/#unimplemented-buttons","text":"Buttons were working thus the circuit design with LEDS made them way too much power consuming reducing battery life quickly. Also the buttons require a calibration due to a variation in the analogread value depending on the battery charge. RFID module wasn\u2019t integrated due to lac of time. But I hope to have a couple more days to integrated it properly on the device. The problem is that the RFID baord doesn\u2019t have any perforations to help me out attach the board to the device, so I\u2019ve to design a holder fir the PCB and the antenna.","title":"Unimplemented buttons"},{"location":"projects/for_replication/#design-changes","text":"Multivibrator circuit has been removed of the main control board, my plan its too add this to the probe as a module. The closing mechanism for the rear plate has been replaced by the holders, the reason its that it didn\u2019t work, the rear plate wasn\u2019t tight sealed.","title":"Design changes"},{"location":"projects/for_replication/#device-cost","text":"Estimated to be right now at: PCB total cost: Control board components: 6.51 Buttons board components: 4.15 Machining time: 0.67 11.33 USD Laser cut cost: Material: 11.2 Machining: 1.89 13.09 USD 3D printing cost: Buttons: 2.32 USD Holders: 2.12 USD 4.44 USD Connectors Dupont: 1 USD* Connectors Dupont jumper: 1 USD* Joinery approximate: 1 USD* Wiring approximate: 1 USD* Battery 9V: 1 USD LCD 20 x 4: 7 USD Estimated cost: 40.86 USD without cable packs, joinery pack and connectors pack. Buying cables and joinery in packs: Cables: 31.47 Joinery plastic pack: 9.90 USD Joinery metal pack: 19.29 USD Connectors pack 1: 4 USD Connectors pack 2: 4.18 USD Sub-total: 60.66 USD Total: 101.52 USD","title":"Device cost"},{"location":"projects/for_replication/#electronics-design","text":"I\u2019ve used parts of the circuits I\u2019ve made on week09 , week11 and week14 .","title":"Electronics design"},{"location":"projects/for_replication/#original-design-files","text":"","title":"Original design files"},{"location":"projects/for_replication/#solidworks","text":"Solidworks assembly ZIP","title":"Solidworks"},{"location":"projects/for_replication/#kicad","text":"Piece Quantity File Control board 1 KiCAD, PCB, Schematic and netlist ZIP Button board 1 KiCAD, PCB, Schematic and netlist ZIP EC probe board 1 ec traces","title":"KiCAD"},{"location":"projects/for_replication/#svg","text":"SVG design files","title":"SVG"},{"location":"projects/for_replication/#files-for-laser-cut_1","text":"Format: DXF Piece Quantity File Side plate 3 side plate Switch plate 1 switch plate Front plate 1 Front plate Rear plate 1 rear plate Middle plate 1 middle plate","title":"Files for laser cut"},{"location":"projects/for_replication/#files-for-3d-printing_1","text":"Format: STL Piece Quantity File Buttons 1 buttons Holders 4 Holders","title":"Files for 3D printing"},{"location":"projects/for_replication/#files-for-circuit-milling_1","text":"Format: SVG Piece Quantity Traces Text Holes Outline Buttons board 1 Button traces Buttons holes Buttons outline Control board 1 control traces control text control holes control outline EC probe board 1 ec traces ec outline","title":"Files for circuit milling"},{"location":"projects/for_replication/#final-presentation","text":"","title":"Final presentation"}]}